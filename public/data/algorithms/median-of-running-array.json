{
  "slug": "median-of-running-array",
  "name": "Median Of Running Array",
  "categories": [
    "others"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\misc\\MedianOfRunningArray.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\misc\\MedianOfRunningArray.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.misc;\r\n\r\n<span class=\"hljs-keyword\">import</span> java.util.Collections;\r\n<span class=\"hljs-keyword\">import</span> java.util.PriorityQueue;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * <span class=\"hljs-doctag\">@author</span> shrutisheoran\r\n */</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MedianOfRunningArray</span> {\r\n\r\n    <span class=\"hljs-keyword\">private</span> PriorityQueue&lt;Integer&gt; p1;\r\n    <span class=\"hljs-keyword\">private</span> PriorityQueue&lt;Integer&gt; p2;\r\n\r\n    <span class=\"hljs-comment\">// Constructor</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">MedianOfRunningArray</span><span class=\"hljs-params\">()</span> {\r\n        <span class=\"hljs-built_in\">this</span>.p1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PriorityQueue</span>&lt;&gt;(Collections.reverseOrder()); <span class=\"hljs-comment\">// Max Heap</span>\r\n        <span class=\"hljs-built_in\">this</span>.p2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PriorityQueue</span>&lt;&gt;(); <span class=\"hljs-comment\">// Min Heap</span>\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/*\r\n      Inserting lower half of array to max Heap\r\n      and upper half to min heap\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">insert</span><span class=\"hljs-params\">(Integer e)</span> {\r\n        p2.add(e);\r\n        <span class=\"hljs-keyword\">if</span> (p2.size() - p1.size() &gt; <span class=\"hljs-number\">1</span>) {\r\n            p1.add(p2.remove());\r\n        }\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/*\r\n      Returns median at any given point\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> Integer <span class=\"hljs-title function_\">median</span><span class=\"hljs-params\">()</span> {\r\n        <span class=\"hljs-keyword\">if</span> (p1.size() == p2.size()) {\r\n            <span class=\"hljs-keyword\">return</span> (p1.peek() + p2.peek()) / <span class=\"hljs-number\">2</span>;\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> p1.size() &gt; p2.size() ? p1.peek() : p2.peek();\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        <span class=\"hljs-comment\">/*\r\n        Testing the median function\r\n         */</span>\r\n\r\n        <span class=\"hljs-type\">MedianOfRunningArray</span> <span class=\"hljs-variable\">p</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">MedianOfRunningArray</span>();\r\n        <span class=\"hljs-type\">int</span> arr[] = {<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">17</span>, <span class=\"hljs-number\">14</span>};\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">9</span>; i++) {\r\n            p.insert(arr[i]);\r\n            System.out.print(p.median() + <span class=\"hljs-string\">&quot; &quot;</span>);\r\n        }\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}