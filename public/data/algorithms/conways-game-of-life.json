{
  "slug": "conways-game-of-life",
  "name": "Conways Game of Life",
  "categories": [
    "cellularautomata"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "cellular_automata\\conways_game_of_life.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/cellular_automata\\conways_game_of_life.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nConway&#x27;s Game of Life implemented in Python.\r\nhttps://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\r\n&quot;&quot;&quot;</span>\r\n<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\r\n\r\n<span class=\"hljs-keyword\">from</span> PIL <span class=\"hljs-keyword\">import</span> Image\r\n\r\n<span class=\"hljs-comment\"># Define glider example</span>\r\nGLIDER = [\r\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\r\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\r\n    [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\r\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\r\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\r\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\r\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\r\n    [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>],\r\n]\r\n\r\n<span class=\"hljs-comment\"># Define blinker example</span>\r\nBLINKER = [[<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>], [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>], [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>]]\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">new_generation</span>(<span class=\"hljs-params\">cells: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]]</span>) -&gt; <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]]:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Generates the next generation for a given state of Conway&#x27;s Game of Life.\r\n    &gt;&gt;&gt; new_generation(BLINKER)\r\n    [[0, 0, 0], [1, 1, 1], [0, 0, 0]]\r\n    &quot;&quot;&quot;</span>\r\n    next_generation = []\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(cells)):\r\n        next_generation_row = []\r\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(cells[i])):\r\n            <span class=\"hljs-comment\"># Get the number of live neighbours</span>\r\n            neighbour_count = <span class=\"hljs-number\">0</span>\r\n            <span class=\"hljs-keyword\">if</span> i &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">and</span> j &gt; <span class=\"hljs-number\">0</span>:\r\n                neighbour_count += cells[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>]\r\n            <span class=\"hljs-keyword\">if</span> i &gt; <span class=\"hljs-number\">0</span>:\r\n                neighbour_count += cells[i - <span class=\"hljs-number\">1</span>][j]\r\n            <span class=\"hljs-keyword\">if</span> i &gt; <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">and</span> j &lt; <span class=\"hljs-built_in\">len</span>(cells[i]) - <span class=\"hljs-number\">1</span>:\r\n                neighbour_count += cells[i - <span class=\"hljs-number\">1</span>][j + <span class=\"hljs-number\">1</span>]\r\n            <span class=\"hljs-keyword\">if</span> j &gt; <span class=\"hljs-number\">0</span>:\r\n                neighbour_count += cells[i][j - <span class=\"hljs-number\">1</span>]\r\n            <span class=\"hljs-keyword\">if</span> j &lt; <span class=\"hljs-built_in\">len</span>(cells[i]) - <span class=\"hljs-number\">1</span>:\r\n                neighbour_count += cells[i][j + <span class=\"hljs-number\">1</span>]\r\n            <span class=\"hljs-keyword\">if</span> i &lt; <span class=\"hljs-built_in\">len</span>(cells) - <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> j &gt; <span class=\"hljs-number\">0</span>:\r\n                neighbour_count += cells[i + <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>]\r\n            <span class=\"hljs-keyword\">if</span> i &lt; <span class=\"hljs-built_in\">len</span>(cells) - <span class=\"hljs-number\">1</span>:\r\n                neighbour_count += cells[i + <span class=\"hljs-number\">1</span>][j]\r\n            <span class=\"hljs-keyword\">if</span> i &lt; <span class=\"hljs-built_in\">len</span>(cells) - <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> j &lt; <span class=\"hljs-built_in\">len</span>(cells[i]) - <span class=\"hljs-number\">1</span>:\r\n                neighbour_count += cells[i + <span class=\"hljs-number\">1</span>][j + <span class=\"hljs-number\">1</span>]\r\n\r\n            <span class=\"hljs-comment\"># Rules of the game of life (excerpt from Wikipedia):</span>\r\n            <span class=\"hljs-comment\"># 1. Any live cell with two or three live neighbours survives.</span>\r\n            <span class=\"hljs-comment\"># 2. Any dead cell with three live neighbours becomes a live cell.</span>\r\n            <span class=\"hljs-comment\"># 3. All other live cells die in the next generation.</span>\r\n            <span class=\"hljs-comment\">#    Similarly, all other dead cells stay dead.</span>\r\n            alive = cells[i][j] == <span class=\"hljs-number\">1</span>\r\n            <span class=\"hljs-keyword\">if</span> (\r\n                (alive <span class=\"hljs-keyword\">and</span> <span class=\"hljs-number\">2</span> &lt;= neighbour_count &lt;= <span class=\"hljs-number\">3</span>)\r\n                <span class=\"hljs-keyword\">or</span> <span class=\"hljs-keyword\">not</span> alive\r\n                <span class=\"hljs-keyword\">and</span> neighbour_count == <span class=\"hljs-number\">3</span>\r\n            ):\r\n                next_generation_row.append(<span class=\"hljs-number\">1</span>)\r\n            <span class=\"hljs-keyword\">else</span>:\r\n                next_generation_row.append(<span class=\"hljs-number\">0</span>)\r\n\r\n        next_generation.append(next_generation_row)\r\n    <span class=\"hljs-keyword\">return</span> next_generation\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">generate_images</span>(<span class=\"hljs-params\">cells: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]], frames: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">list</span>[Image.Image]:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Generates a list of images of subsequent Game of Life states.\r\n    &quot;&quot;&quot;</span>\r\n    images = []\r\n    <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(frames):\r\n        <span class=\"hljs-comment\"># Create output image</span>\r\n        img = Image.new(<span class=\"hljs-string\">&quot;RGB&quot;</span>, (<span class=\"hljs-built_in\">len</span>(cells[<span class=\"hljs-number\">0</span>]), <span class=\"hljs-built_in\">len</span>(cells)))\r\n        pixels = img.load()\r\n\r\n        <span class=\"hljs-comment\"># Save cells to image</span>\r\n        <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(cells)):\r\n            <span class=\"hljs-keyword\">for</span> y <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(cells[<span class=\"hljs-number\">0</span>])):\r\n                colour = <span class=\"hljs-number\">255</span> - cells[y][x] * <span class=\"hljs-number\">255</span>\r\n                pixels[x, y] = (colour, colour, colour)\r\n\r\n        <span class=\"hljs-comment\"># Save image</span>\r\n        images.append(img)\r\n        cells = new_generation(cells)\r\n    <span class=\"hljs-keyword\">return</span> images\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    images = generate_images(GLIDER, <span class=\"hljs-number\">16</span>)\r\n    images[<span class=\"hljs-number\">0</span>].save(<span class=\"hljs-string\">&quot;out.gif&quot;</span>, save_all=<span class=\"hljs-literal\">True</span>, append_images=images[<span class=\"hljs-number\">1</span>:])\r\n"
    },
    "javascript": {
      "dir": "Cellular-Automata\\test\\ConwaysGameOfLife.test.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Cellular-Automata\\test\\ConwaysGameOfLife.test.js",
      "code": "<span class=\"hljs-keyword\">import</span> { newGeneration } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../ConwaysGameOfLife&#x27;</span>\r\n\r\n<span class=\"hljs-title function_\">describe</span>(<span class=\"hljs-string\">&#x27;newGeneration&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should produce the next generation according to the rules&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">newGeneration</span>([[<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>], [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>], [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>]]))\r\n      .<span class=\"hljs-title function_\">toEqual</span>([[<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>], [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>], [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>]])\r\n  })\r\n})\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Erwin Junge",
      "email": "erwin@junge.nl",
      "commits": 1
    },
    {
      "name": "Novice :)",
      "email": "72334601+noviicee@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "jenra",
      "email": "jenra.uwu@gmail.com",
      "commits": 1
    },
    {
      "name": "Roland Hummel",
      "email": "roland.hummel@qaware.de",
      "commits": 2
    },
    {
      "name": "algobytewise",
      "email": "algobytewise@gmail.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}