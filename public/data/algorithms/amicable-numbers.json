{
  "slug": "amicable-numbers",
  "name": "Amicable Numbers",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "dart": {
      "dir": "maths\\amicable_numbers.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/maths\\amicable_numbers.dart",
      "code": "<span class=\"hljs-comment\">/* \r\n * https://en.wikipedia.org/wiki/Amicable_numbers\r\n *\r\n *Amicable numbers are two different numbers related in such a way that the sum of the proper divisors of each is equal to the other number.\r\n * \r\n * */</span>\r\n\r\n<span class=\"hljs-comment\">//this function returns true if numbers are amicable and false otherwise</span>\r\n<span class=\"hljs-built_in\">bool</span> amicable_number(<span class=\"hljs-built_in\">int</span> first_number, <span class=\"hljs-built_in\">int</span> second_number) {\r\n  <span class=\"hljs-keyword\">if</span> (first_number &lt;= <span class=\"hljs-number\">1</span> || second_number &lt;= <span class=\"hljs-number\">1</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">false</span>;\r\n  <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; first_number_proper_divisors = [];\r\n  <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; second_number_proper_divisors = [];\r\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; first_number; i++) {\r\n    <span class=\"hljs-keyword\">if</span> (first_number % i == <span class=\"hljs-number\">0</span>) first_number_proper_divisors.add(i);\r\n  }\r\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; second_number; i++) {\r\n    <span class=\"hljs-keyword\">if</span> (second_number % i == <span class=\"hljs-number\">0</span>) second_number_proper_divisors.add(i);\r\n  }\r\n  <span class=\"hljs-keyword\">return</span> first_number ==\r\n          second_number_proper_divisors.reduce((a, b) =&gt; a + b) &amp;&amp;\r\n      second_number == first_number_proper_divisors.reduce((a, b) =&gt; a + b);\r\n}\r\n\r\n<span class=\"hljs-keyword\">void</span> main() {\r\n  <span class=\"hljs-built_in\">print</span>(amicable_number(<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">14</span>)); <span class=\"hljs-comment\">// false</span>\r\n  <span class=\"hljs-built_in\">print</span>(amicable_number(<span class=\"hljs-number\">220</span>, <span class=\"hljs-number\">284</span>)); <span class=\"hljs-comment\">// true</span>\r\n  <span class=\"hljs-built_in\">print</span>(amicable_number(<span class=\"hljs-number\">60</span>, <span class=\"hljs-number\">84</span>)); <span class=\"hljs-comment\">// true</span>\r\n  <span class=\"hljs-built_in\">print</span>(amicable_number(<span class=\"hljs-number\">1184</span>, <span class=\"hljs-number\">1210</span>)); <span class=\"hljs-comment\">//true</span>\r\n  <span class=\"hljs-built_in\">print</span>(amicable_number(<span class=\"hljs-number\">-14</span>, <span class=\"hljs-number\">10</span>)); <span class=\"hljs-comment\">//false</span>\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "mohammadreza490",
      "email": "47437328+mohammadreza490@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}