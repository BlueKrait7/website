{
  "slug": "abs-min",
  "name": "Abs Min",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths\\abs_min.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths\\abs_min.py",
      "code": "<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\r\n\r\n<span class=\"hljs-keyword\">from</span> .<span class=\"hljs-built_in\">abs</span> <span class=\"hljs-keyword\">import</span> abs_val\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">abs_min</span>(<span class=\"hljs-params\">x: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">int</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    &gt;&gt;&gt; abs_min([0,5,1,11])\r\n    0\r\n    &gt;&gt;&gt; abs_min([3,-10,-2])\r\n    -2\r\n    &gt;&gt;&gt; abs_min([])\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: abs_min() arg is an empty sequence\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(x) == <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;abs_min() arg is an empty sequence&quot;</span>)\r\n    j = x[<span class=\"hljs-number\">0</span>]\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> x:\r\n        <span class=\"hljs-keyword\">if</span> abs_val(i) &lt; abs_val(j):\r\n            j = i\r\n    <span class=\"hljs-keyword\">return</span> j\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\r\n    a = [-<span class=\"hljs-number\">3</span>, -<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">11</span>]\r\n    <span class=\"hljs-built_in\">print</span>(abs_min(a))  <span class=\"hljs-comment\"># = -1</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod(verbose=<span class=\"hljs-literal\">True</span>)\r\n    main()\r\n"
    },
    "f-sharp": {
      "dir": "Algorithms\\Math\\AbsMin.fs",
      "url": "https://github.com/TheAlgorithms/f-sharp/tree/master/Algorithms\\Math\\AbsMin.fs",
      "code": "<span class=\"hljs-keyword\">namespace</span> Algorithms.Math\r\n\r\n<span class=\"hljs-keyword\">module</span> AbsMin <span class=\"hljs-operator\">=</span>\r\n    <span class=\"hljs-keyword\">let</span> absMin (x<span class=\"hljs-operator\">:</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-type\">list</span>) <span class=\"hljs-operator\">=</span>\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mutable</span> j <span class=\"hljs-operator\">=</span> x.[<span class=\"hljs-number\">0</span>]\r\n\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> x <span class=\"hljs-keyword\">do</span>\r\n            <span class=\"hljs-keyword\">if</span> abs i <span class=\"hljs-operator\">&lt;</span> abs j <span class=\"hljs-keyword\">then</span> j <span class=\"hljs-operator\">&lt;-</span> i\r\n\r\n        j\r\n"
    },
    "dart": {
      "dir": "maths\\abs_min.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/maths\\abs_min.dart",
      "code": "<span class=\"hljs-comment\">/* Driver */</span>\r\n<span class=\"hljs-keyword\">void</span> main() {\r\n  <span class=\"hljs-keyword\">assert</span>(absMin([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">11</span>]) == <span class=\"hljs-number\">0</span>);\r\n  <span class=\"hljs-keyword\">assert</span>(absMin([<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">-10</span>, <span class=\"hljs-number\">-2</span>]) == <span class=\"hljs-number\">-2</span>);\r\n}\r\n\r\n<span class=\"hljs-comment\"><span class=\"language-markdown\">/<span class=\"hljs-strong\">**\r\n <span class=\"hljs-emphasis\">*</span></span></span> get the value <span class=\"language-markdown\"><span class=\"hljs-strong\"><span class=\"hljs-emphasis\">in [list],</span></span></span> it&#x27;s absolute value <span class=\"language-markdown\"><span class=\"hljs-strong\"><span class=\"hljs-emphasis\">is min\r\n *</span> Examples:\r\n <span class=\"hljs-emphasis\">*      absMin([0, 5, 1, 11]) = 0, absMin([3 , -10, -2]) = -2\r\n *</span>/</span></span></span>\r\n<span class=\"hljs-built_in\">int</span> absMin(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; list) {\r\n  <span class=\"hljs-built_in\">int</span> min = list[<span class=\"hljs-number\">0</span>];\r\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">1</span>, length = list.length; i &lt; length; ++i) {\r\n    <span class=\"hljs-keyword\">if</span> (list[i].abs() &lt; min.abs()) {\r\n      min = list[i];\r\n    }\r\n  }\r\n  <span class=\"hljs-keyword\">return</span> min;\r\n}\r\n"
    },
    "ruby": {
      "dir": "maths\\abs_min.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/maths\\abs_min.rb",
      "code": "<span class=\"hljs-comment\"># A ruby program to find absolute minimum</span>\r\n<span class=\"hljs-comment\"># Mathematical representation of abs min = ((a + b - absoulte(a - b)) / 2)</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">abs_min</span><span class=\"hljs-params\">(x, y)</span></span>\r\n  num = x - y\r\n  min_value = ((x + y - num.abs) / <span class=\"hljs-number\">2</span>)\r\n  <span class=\"hljs-string\">&quot;The Abs Min of <span class=\"hljs-subst\">#{x}</span> and <span class=\"hljs-subst\">#{y}</span> is <span class=\"hljs-subst\">#{min_value}</span>.&quot;</span>\r\n<span class=\"hljs-keyword\">rescue</span> StandardError\r\n  <span class=\"hljs-string\">&#x27;Error: Provide number only!&#x27;</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># Valid inputs</span>\r\n<span class=\"hljs-comment\">#</span>\r\nputs abs_min(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>)\r\n<span class=\"hljs-comment\"># The Abs Min of 10 and 20 is 10.</span>\r\n\r\nputs abs_min(-<span class=\"hljs-number\">10</span>, -<span class=\"hljs-number\">1</span>)\r\n<span class=\"hljs-comment\"># The Abs Min of -10 and -1 is -10.</span>\r\n\r\nputs abs_min(<span class=\"hljs-number\">9</span>, -<span class=\"hljs-number\">121</span>)\r\n<span class=\"hljs-comment\"># The Abs Min of 9 and -121 is -121.</span>\r\n\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># Invalid inputs</span>\r\n<span class=\"hljs-comment\">#</span>\r\nputs abs_min(<span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">&#x27;-1&#x27;</span>)\r\n<span class=\"hljs-comment\"># Error: Provide number only!</span>\r\n\r\nputs abs_min(<span class=\"hljs-string\">&#x27;3&#x27;</span>, <span class=\"hljs-string\">&#x27;5&#x27;</span>)\r\n<span class=\"hljs-comment\"># Error: Provide number only!</span>\r\n\r\nputs abs_min(<span class=\"hljs-string\">&#x27;a&#x27;</span>, <span class=\"hljs-string\">&#x27;5&#x27;</span>)\r\n<span class=\"hljs-comment\"># Error: Provide number only!</span>\r\n"
    },
    "scala": {
      "dir": "src\\main\\scala\\Mathematics\\AbsMin.scala",
      "url": "https://github.com/TheAlgorithms/scala/tree/master/src\\main\\scala\\Mathematics\\AbsMin.scala",
      "code": "<span class=\"hljs-keyword\">package</span> <span class=\"hljs-type\">Mathematics</span>\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">object</span> <span class=\"hljs-title\">AbsMin</span> </span>{\r\n\r\n  <span class=\"hljs-comment\">/** Method returns Absolute minimum Element from the list\r\n    *\r\n    * @param listOfElements\r\n    * @return\r\n    */</span>\r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">abs</span></span>: <span class=\"hljs-type\">Int</span> =&gt; <span class=\"hljs-type\">Int</span> = <span class=\"hljs-type\">Abs</span>.abs\r\n\r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">absMin</span></span>(elements: <span class=\"hljs-type\">List</span>[<span class=\"hljs-type\">Int</span>]): <span class=\"hljs-type\">Int</span> = abs(elements.minBy(x =&gt; abs(x)))\r\n\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 1
    },
    {
      "name": "Allister Isaiah Harvey",
      "email": "41553768+powpow58@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Alfredo Torre",
      "email": "alfredotorre@gmail.com",
      "commits": 1
    },
    {
      "name": "khanhhuynguyenvu",
      "email": "khanhhuynguyenvu@gmail.com",
      "commits": 1
    },
    {
      "name": "aditiagarwal34550",
      "email": "aditiagarwal34550@gmail.com",
      "commits": 1
    },
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "Sahil Afrid Farookhi",
      "email": "msafarookhi@gmail.com",
      "commits": 1
    },
    {
      "name": "Ashwek Swamy",
      "email": "39827514+ashwek@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Lewis Tian",
      "email": "taseikyo@gmail.com",
      "commits": 1
    },
    {
      "name": "Sanders Lin",
      "email": "45224617+SandersLin@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "wanderer",
      "email": "19929284+AlpineBlack@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "ahviplc!~LC",
      "email": "ahlc@sina.cn",
      "commits": 1
    },
    {
      "name": "gerroo",
      "email": "gerensuner@gmail.com",
      "commits": 1
    },
    {
      "name": "Aditi Agarwal",
      "email": "31546143+aditiagarwal34550@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}