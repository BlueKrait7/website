{
  "slug": "mode",
  "name": "Mode",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\maths\\Mode.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\maths\\Mode.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.maths;\r\n\r\n<span class=\"hljs-keyword\">import</span> java.util.ArrayList;\r\n<span class=\"hljs-keyword\">import</span> java.util.Arrays;\r\n<span class=\"hljs-keyword\">import</span> java.util.Collections;\r\n<span class=\"hljs-keyword\">import</span> java.util.HashMap;\r\n\r\n<span class=\"hljs-comment\">/*\r\n * Find the mode of an array of numbers\r\n *\r\n * The mode of an array of numbers is the most frequently occurring number in the array,\r\n * or the most frequently occurring numbers if there are multiple numbers with the same frequency\r\n */</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Mode</span> {\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n\r\n        <span class=\"hljs-comment\">/* Test array of integers */</span>\r\n        <span class=\"hljs-keyword\">assert</span> (mode(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{})) == <span class=\"hljs-literal\">null</span>;\r\n        <span class=\"hljs-keyword\">assert</span> Arrays.equals(mode(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">5</span>}), <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">5</span>});\r\n        <span class=\"hljs-keyword\">assert</span> Arrays.equals(mode(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>}), <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>});\r\n        <span class=\"hljs-keyword\">assert</span> Arrays.equals(mode(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>}), <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">7</span>});\r\n        <span class=\"hljs-keyword\">assert</span> Arrays.equals(mode(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">9</span>}), <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">9</span>});\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/*\r\n   * Find the mode of an array of integers\r\n   *\r\n   * @param numbers array of integers\r\n   * @return mode of the array\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span>[] mode(<span class=\"hljs-type\">int</span>[] numbers) {\r\n\r\n        <span class=\"hljs-keyword\">if</span> (numbers.length == <span class=\"hljs-number\">0</span>) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\r\n        }\r\n\r\n        HashMap&lt;Integer, Integer&gt; count = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">HashMap</span>&lt;&gt;();\r\n\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> num : numbers) {\r\n            <span class=\"hljs-keyword\">if</span> (count.containsKey(num)) {\r\n\r\n                count.put(num, count.get(num) + <span class=\"hljs-number\">1</span>);\r\n\r\n            } <span class=\"hljs-keyword\">else</span> {\r\n\r\n                count.put(num, <span class=\"hljs-number\">1</span>);\r\n            }\r\n        }\r\n\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">max</span> <span class=\"hljs-operator\">=</span> Collections.max(count.values());\r\n        ArrayList&lt;Integer&gt; modes = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();\r\n\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> num : count.keySet()) {\r\n            <span class=\"hljs-keyword\">if</span> (count.get(num) == max) {\r\n                modes.add(num);\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> modes.stream().mapToInt(n -&gt; n).toArray();\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "gijsh21",
      "email": "69896881+gijsh21@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}