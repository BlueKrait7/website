{
  "slug": "maximum-product-subarray",
  "name": "Maximum Product Subarray",
  "categories": [
    "datastructures",
    "array"
  ],
  "body": {},
  "implementations": {
    "ruby": {
      "dir": "data_structures\\arrays\\maximum_product_subarray.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/data_structures\\arrays\\maximum_product_subarray.rb",
      "code": "<span class=\"hljs-comment\"># Given an integer array nums, find a contiguous non-empty subarray within the array that has the largest product, and return the product.</span>\r\n<span class=\"hljs-comment\"># It is guaranteed that the answer will fit in a 32-bit integer.</span>\r\n<span class=\"hljs-comment\"># A subarray is a contiguous subsequence of the array.</span>\r\n\r\n<span class=\"hljs-comment\"># Example 1:</span>\r\n<span class=\"hljs-comment\"># Input: nums = [2,3,-2,4]</span>\r\n<span class=\"hljs-comment\"># Output: 6</span>\r\n<span class=\"hljs-comment\"># Explanation: [2,3] has the largest product 6.</span>\r\n\r\n<span class=\"hljs-comment\"># Example 2:</span>\r\n<span class=\"hljs-comment\"># Input: nums = [-2,0,-1]</span>\r\n<span class=\"hljs-comment\"># Output: 0</span>\r\n<span class=\"hljs-comment\"># Explanation: The result cannot be 2, because [-2,-1] is not a subarray.</span>\r\n\r\n<span class=\"hljs-comment\"># Constraints:</span>\r\n<span class=\"hljs-comment\"># 1 &lt;= nums.length &lt;= 2 * 104</span>\r\n<span class=\"hljs-comment\">#-10 &lt;= nums[i] &lt;= 10</span>\r\n<span class=\"hljs-comment\"># The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.</span>\r\n\r\n<span class=\"hljs-comment\"># Dynamic Programming Approach (Kadane&#x27;s Algorithm) - O(n) Time / O(1) Space</span>\r\n<span class=\"hljs-comment\"># Track both current minimum and current maximum (Due to possibility of multiple negative numbers)</span>\r\n<span class=\"hljs-comment\"># Answer is the highest value of current maximum</span>\r\n\r\n<span class=\"hljs-comment\"># <span class=\"hljs-doctag\">@param</span> {Integer[]} nums</span>\r\n<span class=\"hljs-comment\"># <span class=\"hljs-doctag\">@return</span> {Integer}</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">max_product</span><span class=\"hljs-params\">(nums)</span></span>\r\n  <span class=\"hljs-keyword\">return</span> nums[<span class=\"hljs-number\">0</span>] <span class=\"hljs-keyword\">if</span> nums.length == <span class=\"hljs-number\">1</span>\r\n\r\n  cur_min = <span class=\"hljs-number\">1</span>\r\n  cur_max = <span class=\"hljs-number\">1</span>\r\n  max = -<span class=\"hljs-number\">11</span>\r\n\r\n  nums.each <span class=\"hljs-keyword\">do</span> <span class=\"hljs-params\">|val|</span>\r\n    tmp_cur_max = cur_max\r\n    cur_max = [val, val * cur_max, val * cur_min].max\r\n    cur_min = [val, val * tmp_cur_max, val * cur_min].min\r\n\r\n    max = [max, cur_max].max\r\n  <span class=\"hljs-keyword\">end</span>\r\n\r\n  max\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\nnums = [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, -<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>]\r\nputs max_product(nums)\r\n<span class=\"hljs-comment\"># Output: 6</span>\r\n\r\nnums = [-<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">0</span>, -<span class=\"hljs-number\">1</span>]\r\nputs max_product(nums)\r\n<span class=\"hljs-comment\"># Output: 0</span>\r\n"
    }
  },
  "contributors": [
    {
      "name": "sidaksohi",
      "email": "31377210+sidaksohi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}