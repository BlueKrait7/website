{
  "slug": "alphabetical",
  "name": "Alphabetical",
  "categories": [
    "strings"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\strings\\Alphabetical.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\strings\\Alphabetical.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.strings;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * Alphabetical order is a system whereby character strings are placed in order\r\n * based on the position of the characters in the conventional ordering of an\r\n * alphabet. Wikipedia: https://en.wikipedia.org/wiki/Alphabetical_order\r\n */</span>\r\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Alphabetical</span> {\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        <span class=\"hljs-keyword\">assert</span> !isAlphabetical(<span class=\"hljs-string\">&quot;123abc&quot;</span>);\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isAlphabetical</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;aBC&quot;</span>)</span>;\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isAlphabetical</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;abc&quot;</span>)</span>;\r\n        <span class=\"hljs-keyword\">assert</span> !isAlphabetical(<span class=\"hljs-string\">&quot;xyzabc&quot;</span>);\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isAlphabetical</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;abcxyz&quot;</span>)</span>;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * Check if a string is alphabetical order or not\r\n     *\r\n     * <span class=\"hljs-doctag\">@param</span> s a string\r\n     * <span class=\"hljs-doctag\">@return</span> {<span class=\"hljs-doctag\">@code</span> true} if given string is alphabetical order, otherwise\r\n     * {<span class=\"hljs-doctag\">@code</span> false}\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">isAlphabetical</span><span class=\"hljs-params\">(String s)</span> {\r\n        s = s.toLowerCase();\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; s.length() - <span class=\"hljs-number\">1</span>; ++i) {\r\n            <span class=\"hljs-keyword\">if</span> (!Character.isLetter(s.charAt(i)) || !(s.charAt(i) &lt;= s.charAt(i + <span class=\"hljs-number\">1</span>))) {\r\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}