{
  "slug": "board",
  "name": "Board",
  "categories": [
    "ai",
    "minimax",
    "sources",
    "minimaxplayground",
    "sources",
    "model"
  ],
  "body": {},
  "implementations": {
    "swift": {
      "dir": "algorithms\\AI\\minimax\\Sources\\Minimax.playground\\Sources\\Model\\Board\\Board.swift",
      "url": "https://github.com/TheAlgorithms/swift/tree/master/algorithms\\AI\\minimax\\Sources\\Minimax.playground\\Sources\\Model\\Board\\Board.swift",
      "code": "<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Board</span> {\r\n    <span class=\"hljs-comment\">// MARK: -- Public variable&#x27;s</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">var</span> size: <span class=\"hljs-type\">Int</span>\r\n\r\n    <span class=\"hljs-comment\">// MARK: -- Private variable&#x27;s</span>\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">var</span> table: [ [<span class=\"hljs-type\">PlayerSymbol</span>?] ]\r\n\r\n    <span class=\"hljs-comment\">// MARK: -- Public function&#x27;s</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">init</span>(<span class=\"hljs-params\">size</span>: <span class=\"hljs-type\">Int</span>) {\r\n        <span class=\"hljs-keyword\">self</span>.size <span class=\"hljs-operator\">=</span> size\r\n        <span class=\"hljs-keyword\">self</span>.table <span class=\"hljs-operator\">=</span> []\r\n        <span class=\"hljs-keyword\">self</span>.clear()\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">mutating</span> <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">clear</span>() {\r\n        <span class=\"hljs-keyword\">self</span>.table <span class=\"hljs-operator\">=</span> <span class=\"hljs-type\">Array</span>(repeating: <span class=\"hljs-type\">Array</span>(repeating: <span class=\"hljs-type\">PlayerSymbol</span>.empty, count: size), count: size)\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">hasEmptyField</span>() -&gt; <span class=\"hljs-type\">Bool</span> {\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-operator\">..&lt;</span> <span class=\"hljs-keyword\">self</span>.size {\r\n            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-operator\">..&lt;</span> <span class=\"hljs-keyword\">self</span>.size {\r\n                <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">self</span>.table[i][j] <span class=\"hljs-operator\">==</span> <span class=\"hljs-type\">PlayerSymbol</span>.empty {\r\n                    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\r\n                }\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">symbol</span>(<span class=\"hljs-params\">forPosition</span> <span class=\"hljs-params\">position</span>: <span class=\"hljs-type\">Position</span>) -&gt; <span class=\"hljs-type\">PlayerSymbol</span>? {\r\n        <span class=\"hljs-keyword\">guard</span> position.row <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-keyword\">self</span>.size, position.column <span class=\"hljs-operator\">&lt;</span> size <span class=\"hljs-keyword\">else</span> { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span> }\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">self</span>.table[position.row][position.column]\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">mutating</span> <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">makeMove</span>(<span class=\"hljs-params\">player</span>: <span class=\"hljs-type\">Player</span>, <span class=\"hljs-params\">position</span>: <span class=\"hljs-type\">Position</span>) {\r\n        <span class=\"hljs-keyword\">guard</span> <span class=\"hljs-keyword\">self</span>.symbol(forPosition: position) <span class=\"hljs-operator\">==</span> <span class=\"hljs-type\">PlayerSymbol</span>.empty <span class=\"hljs-keyword\">else</span> { <span class=\"hljs-keyword\">return</span> }\r\n        <span class=\"hljs-keyword\">guard</span> <span class=\"hljs-keyword\">self</span>.symbol(forPosition: position) <span class=\"hljs-operator\">!=</span> player.symbol <span class=\"hljs-keyword\">else</span> { <span class=\"hljs-keyword\">return</span> }\r\n\r\n        <span class=\"hljs-keyword\">self</span>.table[position.row][position.column] <span class=\"hljs-operator\">=</span> player.symbol\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">check</span>(<span class=\"hljs-params\">player</span>: <span class=\"hljs-type\">Player</span>) -&gt; <span class=\"hljs-type\">BoardStatus</span> {\r\n        <span class=\"hljs-keyword\">let</span> playerSymbol: <span class=\"hljs-type\">PlayerSymbol</span> <span class=\"hljs-operator\">=</span> player.symbol\r\n\r\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">self</span>.foundWinInRows(playerSymbol) { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">BoardStatus</span>.win }\r\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">self</span>.foundWinInColumns(playerSymbol) { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">BoardStatus</span>.win }\r\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">self</span>.foundWinInSlants(playerSymbol) { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">BoardStatus</span>.win }\r\n\r\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">self</span>.hasEmptyField() { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">BoardStatus</span>.continues } <span class=\"hljs-keyword\">else</span> { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-type\">BoardStatus</span>.draw }\r\n    }\r\n\r\n    <span class=\"hljs-comment\">// MARK: -- Private function&#x27;s</span>\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">foundWinInRows</span>(<span class=\"hljs-keyword\">_</span> <span class=\"hljs-params\">playerSymbol</span>: <span class=\"hljs-type\">PlayerSymbol</span>) -&gt; <span class=\"hljs-type\">Bool</span> {\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-operator\">..&lt;</span> <span class=\"hljs-keyword\">self</span>.size {\r\n            <span class=\"hljs-keyword\">var</span> theSameSymbolsInRowCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n\r\n            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-operator\">..&lt;</span> <span class=\"hljs-keyword\">self</span>.size <span class=\"hljs-operator\">-</span> <span class=\"hljs-number\">1</span> {\r\n                <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">self</span>.table[i][j] <span class=\"hljs-operator\">==</span> <span class=\"hljs-keyword\">self</span>.table[i][j<span class=\"hljs-operator\">+</span><span class=\"hljs-number\">1</span>] <span class=\"hljs-operator\">&amp;&amp;</span> (<span class=\"hljs-keyword\">self</span>.table[i][j] <span class=\"hljs-operator\">==</span> playerSymbol) {\r\n                    theSameSymbolsInRowCount <span class=\"hljs-operator\">+=</span> <span class=\"hljs-number\">1</span>\r\n                } <span class=\"hljs-keyword\">else</span> {\r\n                    theSameSymbolsInRowCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n                }\r\n            }\r\n\r\n            <span class=\"hljs-keyword\">if</span> theSameSymbolsInRowCount <span class=\"hljs-operator\">==</span> <span class=\"hljs-keyword\">self</span>.size <span class=\"hljs-operator\">-</span> <span class=\"hljs-number\">1</span> {\r\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\r\n            }\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">foundWinInColumns</span>(<span class=\"hljs-keyword\">_</span> <span class=\"hljs-params\">playerSymbol</span>: <span class=\"hljs-type\">PlayerSymbol</span>) -&gt; <span class=\"hljs-type\">Bool</span> {\r\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-operator\">..&lt;</span> <span class=\"hljs-keyword\">self</span>.size {\r\n            <span class=\"hljs-keyword\">var</span> theSameSymbolsInColumnCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n\r\n            <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-operator\">..&lt;</span> <span class=\"hljs-keyword\">self</span>.size <span class=\"hljs-operator\">-</span> <span class=\"hljs-number\">1</span> {\r\n                <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">self</span>.table[i][j] <span class=\"hljs-operator\">==</span> <span class=\"hljs-keyword\">self</span>.table[i<span class=\"hljs-operator\">+</span><span class=\"hljs-number\">1</span>][j] <span class=\"hljs-operator\">&amp;&amp;</span> (<span class=\"hljs-keyword\">self</span>.table[i][j] <span class=\"hljs-operator\">==</span> playerSymbol) {\r\n                    theSameSymbolsInColumnCount <span class=\"hljs-operator\">+=</span> <span class=\"hljs-number\">1</span>\r\n                } <span class=\"hljs-keyword\">else</span> {\r\n                    theSameSymbolsInColumnCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n                }\r\n            }\r\n\r\n            <span class=\"hljs-keyword\">if</span> theSameSymbolsInColumnCount <span class=\"hljs-operator\">==</span> <span class=\"hljs-keyword\">self</span>.size <span class=\"hljs-operator\">-</span> <span class=\"hljs-number\">1</span> {\r\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\r\n            }\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">func</span> <span class=\"hljs-title function_\">foundWinInSlants</span>(<span class=\"hljs-keyword\">_</span> <span class=\"hljs-params\">playerSymbol</span>: <span class=\"hljs-type\">PlayerSymbol</span>) -&gt; <span class=\"hljs-type\">Bool</span> {\r\n        <span class=\"hljs-keyword\">var</span> theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-operator\">..&lt;</span> <span class=\"hljs-keyword\">self</span>.size {\r\n            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-operator\">-</span>(<span class=\"hljs-keyword\">self</span>.size <span class=\"hljs-operator\">-</span> <span class=\"hljs-number\">1</span>) <span class=\"hljs-operator\">...</span> <span class=\"hljs-number\">0</span> {\r\n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">self</span>.table[<span class=\"hljs-operator\">-</span>j][i] <span class=\"hljs-operator\">==</span> playerSymbol) {\r\n                    <span class=\"hljs-keyword\">var</span> k: <span class=\"hljs-type\">Int</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-operator\">-</span>j\r\n                    <span class=\"hljs-keyword\">var</span> l: <span class=\"hljs-type\">Int</span> <span class=\"hljs-operator\">=</span> i\r\n                    theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n\r\n                    <span class=\"hljs-keyword\">while</span> l <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-keyword\">self</span>.size <span class=\"hljs-operator\">&amp;&amp;</span> k <span class=\"hljs-operator\">&gt;=</span> <span class=\"hljs-number\">0</span> {\r\n                        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">self</span>.table[k][l] <span class=\"hljs-operator\">==</span> playerSymbol {\r\n                            theSameSymbolsInSlantCount <span class=\"hljs-operator\">+=</span> <span class=\"hljs-number\">1</span>\r\n                        } <span class=\"hljs-keyword\">else</span> {\r\n                            theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n                        }\r\n                        k <span class=\"hljs-operator\">-=</span> <span class=\"hljs-number\">1</span>\r\n                        l <span class=\"hljs-operator\">+=</span> <span class=\"hljs-number\">1</span>\r\n\r\n                        <span class=\"hljs-keyword\">if</span> theSameSymbolsInSlantCount <span class=\"hljs-operator\">==</span> <span class=\"hljs-keyword\">self</span>.size {\r\n                            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\r\n                        }\r\n                    }\r\n                    theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n                }\r\n                theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n            }\r\n            theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n        }\r\n\r\n        theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-operator\">..&lt;</span> <span class=\"hljs-keyword\">self</span>.size {\r\n            <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-operator\">..&lt;</span> <span class=\"hljs-keyword\">self</span>.size {\r\n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-keyword\">self</span>.table[j][i] <span class=\"hljs-operator\">==</span> playerSymbol) {\r\n                    <span class=\"hljs-keyword\">var</span> k: <span class=\"hljs-type\">Int</span> <span class=\"hljs-operator\">=</span> j\r\n                    <span class=\"hljs-keyword\">var</span> l: <span class=\"hljs-type\">Int</span> <span class=\"hljs-operator\">=</span> i\r\n                    theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n\r\n                    <span class=\"hljs-keyword\">while</span> l <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-keyword\">self</span>.size <span class=\"hljs-operator\">&amp;&amp;</span> k <span class=\"hljs-operator\">&lt;</span> <span class=\"hljs-keyword\">self</span>.size {\r\n                        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">self</span>.table[k][l] <span class=\"hljs-operator\">==</span> playerSymbol {\r\n                            theSameSymbolsInSlantCount <span class=\"hljs-operator\">+=</span> <span class=\"hljs-number\">1</span>\r\n                        } <span class=\"hljs-keyword\">else</span> {\r\n                            theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n                        }\r\n                        k <span class=\"hljs-operator\">+=</span> <span class=\"hljs-number\">1</span>\r\n                        l <span class=\"hljs-operator\">+=</span> <span class=\"hljs-number\">1</span>\r\n\r\n                        <span class=\"hljs-keyword\">if</span> theSameSymbolsInSlantCount <span class=\"hljs-operator\">==</span> <span class=\"hljs-keyword\">self</span>.size {\r\n                            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>\r\n                        }\r\n                    }\r\n                    theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n                }\r\n                theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n            }\r\n            theSameSymbolsInSlantCount <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "michalnowak061",
      "email": "michal.nowak061@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}