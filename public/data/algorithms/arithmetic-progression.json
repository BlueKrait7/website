{
  "slug": "arithmetic-progression",
  "name": "Arithmetic Progression",
  "categories": [
    "numeric",
    "sum"
  ],
  "body": {},
  "implementations": {
    "lua": {
      "dir": "src\\numeric\\sum\\arithmetic_progression.lua",
      "url": "https://github.com/TheAlgorithms/lua/tree/master/src\\numeric\\sum\\arithmetic_progression.lua",
      "code": "<span class=\"hljs-comment\">-- Based on the gaussian sum formula</span>\r\n<span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(\r\n\tfrom, <span class=\"hljs-comment\">-- inclusive lower bound</span>\r\n\tto, <span class=\"hljs-comment\">-- inclusive upper bound</span>\r\n\tstep <span class=\"hljs-comment\">-- step between values</span>\r\n)</span></span>\r\n\t<span class=\"hljs-keyword\">if</span> from &gt; to <span class=\"hljs-keyword\">then</span>\r\n\t\t<span class=\"hljs-built_in\">assert</span>(step &lt; <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">&quot;empty interval&quot;</span>)\r\n\t<span class=\"hljs-keyword\">end</span>\r\n\tstep = step <span class=\"hljs-keyword\">or</span> <span class=\"hljs-number\">1</span>\r\n\t<span class=\"hljs-keyword\">local</span> count = <span class=\"hljs-built_in\">math</span>.<span class=\"hljs-built_in\">floor</span>((to - from) / step)\r\n\t<span class=\"hljs-keyword\">local</span> last = from + count * step\r\n\t<span class=\"hljs-comment\">-- sum of numbers from `from` to `to` with step `step`</span>\r\n\t<span class=\"hljs-keyword\">return</span> (count + <span class=\"hljs-number\">1</span>) * (from + last) / <span class=\"hljs-number\">2</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n"
    }
  },
  "contributors": [
    {
      "name": "Lars Mueller",
      "email": "appgurulars@gmx.de",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}