{
  "slug": "count-min-sketch",
  "name": "Count-Min Sketch",
  "categories": [
    "datastructures",
    "probabilistic"
  ],
  "body": {},
  "implementations": {
    "c-sharp": {
      "dir": "./DataStructures/Probabilistic/CountMinSketch.cs",
      "url": "https:\\github.com\\TheAlgorithms\\C-Sharp\\tree\\master\\DataStructures\\Probabilistic\\CountMinSketch.cs",
      "code": "ï»¿<span class=\"hljs-keyword\">using</span> System;\r\n\r\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">DataStructures.Probabilistic</span>\r\n{\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">CountMinSketch</span>&lt;<span class=\"hljs-title\">T</span>&gt; <span class=\"hljs-keyword\">where</span> <span class=\"hljs-title\">T</span> : <span class=\"hljs-title\">notnull</span>\r\n    {\r\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">int</span>[][] sketch;\r\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> <span class=\"hljs-built_in\">int</span> numHashes;\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Initializes a new instance of the <span class=\"hljs-doctag\">&lt;see cref=&quot;CountMinSketch{T}&quot;/&gt;</span> class based off dimensions</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> passed by the user.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;width&quot;&gt;</span>The width of the sketch.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;numHashes&quot;&gt;</span>The number of hashes to use in the sketch.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">CountMinSketch</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> width, <span class=\"hljs-built_in\">int</span> numHashes</span>)</span>\r\n        {\r\n            sketch = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[numHashes][];\r\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; numHashes; i++)\r\n            {\r\n                sketch[i] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[width];\r\n            }\r\n\r\n            <span class=\"hljs-keyword\">this</span>.numHashes = numHashes;\r\n        }\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Initializes a new instance of the <span class=\"hljs-doctag\">&lt;see cref=&quot;CountMinSketch{T}&quot;/&gt;</span> class based off the optimizing error rate</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> and error probability formula width = e/errorRate numHashes = ln(1.0/errorProp).</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;errorRate&quot;&gt;</span>The amount of acceptable over counting for the sketch.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;errorProb&quot;&gt;</span>The probability that an item will be over counted.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">CountMinSketch</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">double</span> errorRate, <span class=\"hljs-built_in\">double</span> errorProb</span>)</span>\r\n        {\r\n            <span class=\"hljs-keyword\">var</span> width = (<span class=\"hljs-built_in\">int</span>)Math.Ceiling(Math.E / errorRate);\r\n            numHashes = (<span class=\"hljs-built_in\">int</span>)Math.Ceiling(Math.Log(<span class=\"hljs-number\">1.0</span> / errorProb));\r\n            sketch = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[numHashes][];\r\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; numHashes; i++)\r\n            {\r\n                sketch[i] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">int</span>[width];\r\n            }\r\n        }\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Inserts the provided item into the sketch.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;item&quot;&gt;</span>Item to insert.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Insert</span>(<span class=\"hljs-params\">T item</span>)</span>\r\n        {\r\n            <span class=\"hljs-keyword\">var</span> initialHash = item.GetHashCode();\r\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; numHashes; i++)\r\n            {\r\n                <span class=\"hljs-keyword\">var</span> slot = GetSlot(i, initialHash);\r\n                sketch[i][slot]++;\r\n            }\r\n        }\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Queries the count of the given item that have been inserted into the sketch.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;param name=&quot;item&quot;&gt;</span>item to insert into the sketch.<span class=\"hljs-doctag\">&lt;/param&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;returns&gt;</span>the number of times the provided item has been inserted into the sketch.<span class=\"hljs-doctag\">&lt;/returns&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">Query</span>(<span class=\"hljs-params\">T item</span>)</span>\r\n        {\r\n            <span class=\"hljs-keyword\">var</span> initialHash = item.GetHashCode();\r\n            <span class=\"hljs-keyword\">var</span> min = <span class=\"hljs-built_in\">int</span>.MaxValue;\r\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; numHashes; i++)\r\n            {\r\n                <span class=\"hljs-keyword\">var</span> slot = GetSlot(i, initialHash);\r\n                min = Math.Min(sketch[i][slot], min);\r\n            }\r\n\r\n            <span class=\"hljs-keyword\">return</span> min;\r\n        }\r\n\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> <span class=\"hljs-title\">GetSlot</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> i, <span class=\"hljs-built_in\">int</span> initialHash</span>)</span> =&gt; Math.Abs((i + <span class=\"hljs-number\">1</span>) * initialHash) % sketch[<span class=\"hljs-number\">0</span>].Length;\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Stephen Lorello",
      "email": "42971704+slorello89@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}