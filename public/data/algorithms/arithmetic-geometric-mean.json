{
  "slug": "arithmetic-geometric-mean",
  "name": "Arithmetic Geometric Mean",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths\\test\\ArithmeticGeometricMean.test.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths\\test\\ArithmeticGeometricMean.test.js",
      "code": "<span class=\"hljs-keyword\">import</span> { agm } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../ArithmeticGeometricMean.js&#x27;</span>\r\n\r\n<span class=\"hljs-title function_\">describe</span>(<span class=\"hljs-string\">&#x27;Tests for AGM&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should be a function&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-keyword\">typeof</span> agm).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&#x27;function&#x27;</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;number of parameters should be 2&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(agm.<span class=\"hljs-property\">length</span>).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-number\">2</span>)\r\n  })\r\n\r\n  <span class=\"hljs-keyword\">const</span> m = <span class=\"hljs-number\">0x100</span> <span class=\"hljs-comment\">// scale for rand</span>\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return NaN if any or all params has a negative argument&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-comment\">// I multiplied by minus one, because the sign inversion is more clearly visible</span>\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(-<span class=\"hljs-number\">1</span> * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-title class_\">NaN</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m, -<span class=\"hljs-number\">1</span> * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-title class_\">NaN</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(-<span class=\"hljs-number\">1</span> * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m, -<span class=\"hljs-number\">1</span> * <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-title class_\">NaN</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return Infinity if any arg is Infinity and the other is not 0&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m + <span class=\"hljs-number\">1</span>, <span class=\"hljs-title class_\">Infinity</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-title class_\">Infinity</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">Infinity</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m + <span class=\"hljs-number\">1</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-title class_\">Infinity</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">Infinity</span>, <span class=\"hljs-title class_\">Infinity</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-title class_\">Infinity</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return NaN if some arg is Infinity and the other is 0&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-title class_\">Infinity</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-title class_\">NaN</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">Infinity</span>, <span class=\"hljs-number\">0</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-title class_\">NaN</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return +0 if any or all args are +0 or -0, and return -0 if all are -0&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m, <span class=\"hljs-number\">0</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">0</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">0</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m, -<span class=\"hljs-number\">0</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">0</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(-<span class=\"hljs-number\">0</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">0</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-number\">0</span>, -<span class=\"hljs-number\">0</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">0</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(-<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">0</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(-<span class=\"hljs-number\">0</span>, -<span class=\"hljs-number\">0</span>)).<span class=\"hljs-title function_\">toBe</span>(-<span class=\"hljs-number\">0</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return NaN if any or all args are NaN&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m, <span class=\"hljs-title class_\">NaN</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-title class_\">NaN</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">NaN</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * m)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-title class_\">NaN</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-title class_\">NaN</span>, <span class=\"hljs-title class_\">NaN</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-title class_\">NaN</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return an accurate approximation of the AGM between 2 valid input args&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-comment\">// all the constants are provided by WolframAlpha</span>\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>)).<span class=\"hljs-title function_\">toBeCloseTo</span>(<span class=\"hljs-number\">1.4567910310469068</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">256</span>)).<span class=\"hljs-title function_\">toBeCloseTo</span>(<span class=\"hljs-number\">64.45940719438667</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-number\">55555</span>, <span class=\"hljs-number\">34</span>)).<span class=\"hljs-title function_\">toBeCloseTo</span>(<span class=\"hljs-number\">9933.4047239552</span>)\r\n    <span class=\"hljs-comment\">// test &quot;unsafe&quot; numbers</span>\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">agm</span>(<span class=\"hljs-number\">2</span> ** <span class=\"hljs-number\">48</span>, <span class=\"hljs-number\">3</span> ** <span class=\"hljs-number\">27</span>)).<span class=\"hljs-title function_\">toBeCloseTo</span>(<span class=\"hljs-number\">88506556379265.7</span>)\r\n  })\r\n})\r\n"
    }
  },
  "contributors": [
    {
      "name": "Ricardo Fernández Serrata",
      "email": "76864299+Rudxain@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}