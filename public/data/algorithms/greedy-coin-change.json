{
  "slug": "greedy-coin-change",
  "name": "Greedy Coin Change",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths\\greedy_coin_change.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths\\greedy_coin_change.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nTest cases:\r\nDo you want to enter your denominations ? (Y/N) :N\r\nEnter the change you want to make in Indian Currency: 987\r\nFollowing is minimal  change for 987 :\r\n500 100 100 100 100 50 20 10 5 2\r\n\r\nDo you want to enter your denominations ? (Y/N) :Y\r\nEnter number of denomination:10\r\n1\r\n5\r\n10\r\n20\r\n50\r\n100\r\n200\r\n500\r\n1000\r\n2000\r\nEnter the change you want to make: 18745\r\nFollowing is minimal  change for 18745 :\r\n2000 2000 2000 2000 2000 2000 2000 2000 2000 500 200 20 20 5\r\n\r\nDo you want to enter your denominations ? (Y/N) :N\r\nEnter the change you want to make: 0\r\nThe total value cannot be zero or negative.\r\nDo you want to enter your denominations ? (Y/N) :N\r\nEnter the change you want to make: -98\r\nThe total value cannot be zero or negative.\r\n\r\nDo you want to enter your denominations ? (Y/N) :Y\r\nEnter number of denomination:5\r\n1\r\n5\r\n100\r\n500\r\n1000\r\nEnter the change you want to make: 456\r\nFollowing is minimal   change for 456 :\r\n100 100 100 100 5 5 5 5 5 5 5 5 5 5 5 1\r\n&quot;&quot;&quot;</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">find_minimum_change</span>(<span class=\"hljs-params\">denominations: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>], value: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Find the minimum change from the given denominations and value\r\n    &gt;&gt;&gt; find_minimum_change([1, 5, 10, 20, 50, 100, 200, 500, 1000,2000], 18745)\r\n    [2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 500, 200, 20, 20, 5]\r\n    &gt;&gt;&gt; find_minimum_change([1, 2, 5, 10, 20, 50, 100, 500, 2000], 987)\r\n    [500, 100, 100, 100, 100, 50, 20, 10, 5, 2]\r\n    &gt;&gt;&gt; find_minimum_change([1, 2, 5, 10, 20, 50, 100, 500, 2000], 0)\r\n    []\r\n    &gt;&gt;&gt; find_minimum_change([1, 2, 5, 10, 20, 50, 100, 500, 2000], -98)\r\n    []\r\n    &gt;&gt;&gt; find_minimum_change([1, 5, 100, 500, 1000], 456)\r\n    [100, 100, 100, 100, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1]\r\n    &quot;&quot;&quot;</span>\r\n    total_value = <span class=\"hljs-built_in\">int</span>(value)\r\n\r\n    <span class=\"hljs-comment\"># Initialize Result</span>\r\n    answer = []\r\n\r\n    <span class=\"hljs-comment\"># Traverse through all denomination</span>\r\n    <span class=\"hljs-keyword\">for</span> denomination <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">reversed</span>(denominations):\r\n\r\n        <span class=\"hljs-comment\"># Find denominations</span>\r\n        <span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">int</span>(total_value) &gt;= <span class=\"hljs-built_in\">int</span>(denomination):\r\n            total_value -= <span class=\"hljs-built_in\">int</span>(denomination)\r\n            answer.append(denomination)  <span class=\"hljs-comment\"># Append the &quot;answers&quot; array</span>\r\n\r\n    <span class=\"hljs-keyword\">return</span> answer\r\n\r\n\r\n<span class=\"hljs-comment\"># Driver Code</span>\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n\r\n    denominations = <span class=\"hljs-built_in\">list</span>()\r\n    value = <span class=\"hljs-string\">&quot;0&quot;</span>\r\n\r\n    <span class=\"hljs-keyword\">if</span> (\r\n        <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Do you want to enter your denominations ? (yY/n): &quot;</span>).strip().lower()\r\n        == <span class=\"hljs-string\">&quot;y&quot;</span>\r\n    ):\r\n        n = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter the number of denominations you want to add: &quot;</span>).strip())\r\n\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, n):\r\n            denominations.append(<span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">f&quot;Denomination <span class=\"hljs-subst\">{i}</span>: &quot;</span>).strip()))\r\n        value = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter the change you want to make in Indian Currency: &quot;</span>).strip()\r\n    <span class=\"hljs-keyword\">else</span>:\r\n        <span class=\"hljs-comment\"># All denominations of Indian Currency if user does not enter</span>\r\n        denominations = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">500</span>, <span class=\"hljs-number\">2000</span>]\r\n        value = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter the change you want to make: &quot;</span>).strip()\r\n\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">int</span>(value) == <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-built_in\">int</span>(value) &lt; <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;The total value cannot be zero or negative.&quot;</span>)\r\n\r\n    <span class=\"hljs-keyword\">else</span>:\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Following is minimal change for <span class=\"hljs-subst\">{value}</span>: &quot;</span>)\r\n        answer = find_minimum_change(denominations, value)\r\n        <span class=\"hljs-comment\"># Print result</span>\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(answer)):\r\n            <span class=\"hljs-built_in\">print</span>(answer[i], end=<span class=\"hljs-string\">&quot; &quot;</span>)\r\n"
    }
  },
  "contributors": [
    {
      "name": "imp",
      "email": "imp07@qq.com",
      "commits": 1
    },
    {
      "name": "DevanshiPatel18",
      "email": "61454611+DevanshiPatel18@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}