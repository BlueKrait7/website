{
  "slug": "odd-even-transposition-single-threaded",
  "name": "Odd Even Transposition Single Threaded",
  "categories": [
    "sorts"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts\\odd_even_transposition_single_threaded.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts\\odd_even_transposition_single_threaded.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nSource: https://en.wikipedia.org/wiki/Odd%E2%80%93even_sort\r\n\r\nThis is a non-parallelized implementation of odd-even transposition sort.\r\n\r\nNormally the swaps in each set happen simultaneously, without that the algorithm\r\nis no better than bubble sort.\r\n&quot;&quot;&quot;</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">odd_even_transposition</span>(<span class=\"hljs-params\">arr: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">list</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    &gt;&gt;&gt; odd_even_transposition([5, 4, 3, 2, 1])\r\n    [1, 2, 3, 4, 5]\r\n\r\n    &gt;&gt;&gt; odd_even_transposition([13, 11, 18, 0, -1])\r\n    [-1, 0, 11, 13, 18]\r\n\r\n    &gt;&gt;&gt; odd_even_transposition([-.1, 1.1, .1, -2.9])\r\n    [-2.9, -0.1, 0.1, 1.1]\r\n    &quot;&quot;&quot;</span>\r\n    arr_size = <span class=\"hljs-built_in\">len</span>(arr)\r\n    <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(arr_size):\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(_ % <span class=\"hljs-number\">2</span>, arr_size - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>):\r\n            <span class=\"hljs-keyword\">if</span> arr[i + <span class=\"hljs-number\">1</span>] &lt; arr[i]:\r\n                arr[i], arr[i + <span class=\"hljs-number\">1</span>] = arr[i + <span class=\"hljs-number\">1</span>], arr[i]\r\n\r\n    <span class=\"hljs-keyword\">return</span> arr\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    arr = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">0</span>, -<span class=\"hljs-number\">1</span>))\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Original: <span class=\"hljs-subst\">{arr}</span>. Sorted: <span class=\"hljs-subst\">{odd_even_transposition(arr)}</span>&quot;</span>)\r\n"
    }
  },
  "contributors": [
    {
      "name": "Sarvesh Kumar Dwivedi",
      "email": "georgiansarvesh4396@gmail.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "CharlesRitter",
      "email": "crritte@g.clemson.edu",
      "commits": 1
    },
    {
      "name": "mateuszz0000",
      "email": "mtszzwdzk@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}