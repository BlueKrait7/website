{
  "slug": "assembly-line-scheduling",
  "name": "Assembly Line Scheduling",
  "categories": [
    "dynamicprogramming"
  ],
  "body": {},
  "implementations": {
    "kotlin": {
      "dir": "src\\main\\kotlin\\dynamicProgramming\\AssemblyLineScheduling.kt",
      "url": "https://github.com/TheAlgorithms/kotlin/tree/master/src\\main\\kotlin\\dynamicProgramming\\AssemblyLineScheduling.kt",
      "code": "<span class=\"hljs-keyword\">package</span> dynamicProgramming\r\n\r\n<span class=\"hljs-keyword\">import</span> kotlin.math.min\r\n\r\n\r\n<span class=\"hljs-comment\">/*\r\n * This is a dynamic programming implementation of assembly line scheduling.\r\n * @Params n- number of stations, a- service time at each station, t- line switch time from each station, e- entry time, x- exit time\r\n * @Return minimum time to cross n stations\r\n * */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">AssemblyLineScheduling</span><span class=\"hljs-params\">(n:<span class=\"hljs-type\">Int</span>,a:<span class=\"hljs-type\">Array</span>&lt;<span class=\"hljs-type\">IntArray</span>&gt;,t:<span class=\"hljs-type\">Array</span>&lt;<span class=\"hljs-type\">IntArray</span>&gt;,e:<span class=\"hljs-type\">IntArray</span>,x:<span class=\"hljs-type\">IntArray</span>)</span></span>:<span class=\"hljs-built_in\">Int</span> {\r\n\r\n    <span class=\"hljs-keyword\">var</span> L1:IntArray =  IntArray(n);\r\n    <span class=\"hljs-keyword\">var</span> L2:IntArray = IntArray(n) ;\r\n    <span class=\"hljs-keyword\">var</span> i=<span class=\"hljs-number\">0</span>;\r\n\r\n    L1[<span class=\"hljs-number\">0</span>] = e[<span class=\"hljs-number\">0</span>] + a[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>];\r\n\r\n    L2[<span class=\"hljs-number\">0</span>] = e[<span class=\"hljs-number\">1</span>] + a[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">0</span>];\r\n\r\n    <span class=\"hljs-keyword\">for</span>(i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-number\">1.</span>.n-<span class=\"hljs-number\">1</span>)\r\n    {\r\n        L1[i] = min(L1[i - <span class=\"hljs-number\">1</span>] + a[<span class=\"hljs-number\">0</span>][i],\r\n                L2[i - <span class=\"hljs-number\">1</span>] + t[<span class=\"hljs-number\">1</span>][i] + a[<span class=\"hljs-number\">0</span>][i]);\r\n        L2[i] = min(L2[i - <span class=\"hljs-number\">1</span>] + a[<span class=\"hljs-number\">1</span>][i],\r\n                L1[i - <span class=\"hljs-number\">1</span>] + t[<span class=\"hljs-number\">0</span>][i] + a[<span class=\"hljs-number\">1</span>][i]);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">return</span> min(L1[n-<span class=\"hljs-number\">1</span>] + x[<span class=\"hljs-number\">0</span>],\r\n            L2[n-<span class=\"hljs-number\">1</span>] + x[<span class=\"hljs-number\">1</span>]);\r\n\r\n\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 1
    },
    {
      "name": "Abhishek",
      "email": "raabhishek2@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}