{
  "slug": "a010051-binary-prime-constant",
  "name": "A010051 Binary Prime Constant",
  "categories": [
    "sequences"
  ],
  "body": {},
  "implementations": {
    "c-sharp": {
      "dir": "./Algorithms/Sequences/BinaryPrimeConstantSequence.cs",
      "url": "https:\\github.com\\TheAlgorithms\\C-Sharp\\tree\\master\\Algorithms\\Sequences\\BinaryPrimeConstantSequence.cs",
      "code": "<span class=\"hljs-keyword\">using</span> System.Collections.Generic;\r\n<span class=\"hljs-keyword\">using</span> System.Numerics;\r\n\r\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">Algorithms.Sequences</span>\r\n{\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     <span class=\"hljs-doctag\">&lt;para&gt;</span></span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>         Sequence of binary prime constant</span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>         (Characteristic function of primes: 1 if n is prime, else 0).</span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     <span class=\"hljs-doctag\">&lt;/para&gt;</span></span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     <span class=\"hljs-doctag\">&lt;para&gt;</span></span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>         Wikipedia: https://wikipedia.org/wiki/Prime_constant.</span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     <span class=\"hljs-doctag\">&lt;/para&gt;</span></span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     <span class=\"hljs-doctag\">&lt;para&gt;</span></span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>         OEIS: https://oeis.org/A010051.</span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     <span class=\"hljs-doctag\">&lt;/para&gt;</span></span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">BinaryPrimeConstantSequence</span> : <span class=\"hljs-title\">ISequence</span>\r\n    {\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> Gets sequence of binary prime constant.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-keyword\">public</span> IEnumerable&lt;BigInteger&gt; Sequence\r\n        {\r\n            <span class=\"hljs-keyword\">get</span>\r\n            {\r\n                ISequence primes = <span class=\"hljs-keyword\">new</span> PrimesSequence();\r\n                <span class=\"hljs-keyword\">var</span> n = <span class=\"hljs-keyword\">new</span> BigInteger(<span class=\"hljs-number\">0</span>);\r\n\r\n                <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-keyword\">var</span> p <span class=\"hljs-keyword\">in</span> primes.Sequence)\r\n                {\r\n                    <span class=\"hljs-keyword\">for</span> (n++; n &lt; p; n++)\r\n                    {\r\n                        <span class=\"hljs-keyword\">yield</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n                    }\r\n\r\n                    <span class=\"hljs-keyword\">yield</span> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}