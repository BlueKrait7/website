{
  "slug": "longest-palindromic-substring",
  "name": "Longest Palindromic Substring",
  "categories": [
    "dynamicprogramming"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\strings\\LongestPalindromicSubstring.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\strings\\LongestPalindromicSubstring.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.strings;\r\n\r\n<span class=\"hljs-comment\">// Longest Palindromic Substring</span>\r\n<span class=\"hljs-keyword\">import</span> java.util.Scanner;\r\n\r\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LongestPalindromicSubstring</span> {\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        <span class=\"hljs-type\">Solution</span> <span class=\"hljs-variable\">s</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Solution</span>();\r\n        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">str</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;&quot;</span>;\r\n        <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">sc</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\r\n        System.out.print(<span class=\"hljs-string\">&quot;Enter the string: &quot;</span>);\r\n        str = sc.nextLine();\r\n        System.out.println(<span class=\"hljs-string\">&quot;Longest substring is : &quot;</span> + s.longestPalindrome(str));\r\n    }\r\n}\r\n\r\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Solution</span> {\r\n\r\n    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">longestPalindrome</span><span class=\"hljs-params\">(String s)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-literal\">null</span> || s.length() == <span class=\"hljs-number\">0</span>) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>;\r\n        }\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> s.length();\r\n        <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">maxStr</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-string\">&quot;&quot;</span>;\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; n; ++i) {\r\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">j</span> <span class=\"hljs-operator\">=</span> i; j &lt; n; ++j) {\r\n                <span class=\"hljs-keyword\">if</span> (isValid(s, i, j) == <span class=\"hljs-literal\">true</span>) {\r\n                    <span class=\"hljs-keyword\">if</span> (j - i + <span class=\"hljs-number\">1</span> &gt; maxStr.length()) { <span class=\"hljs-comment\">// update maxStr</span>\r\n                        maxStr = s.substring(i, j + <span class=\"hljs-number\">1</span>);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> maxStr;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">isValid</span><span class=\"hljs-params\">(String s, <span class=\"hljs-type\">int</span> lo, <span class=\"hljs-type\">int</span> hi)</span> {\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> hi - lo + <span class=\"hljs-number\">1</span>;\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; n / <span class=\"hljs-number\">2</span>; ++i) {\r\n            <span class=\"hljs-keyword\">if</span> (s.charAt(lo + i) != s.charAt(hi - i)) {\r\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Kabir",
      "email": "44284877+kabir0x17@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Kush Sharma",
      "email": "kushsharma1001@gmail.com",
      "commits": 1
    },
    {
      "name": "Sagar Monga",
      "email": "50130301+sagar-monga@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}