{
  "slug": "mixed-keyword-cypher",
  "name": "Mixed Keyword Cypher",
  "categories": [
    "ciphers"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "ciphers\\mixed_keyword_cypher.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/ciphers\\mixed_keyword_cypher.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">mixed_keyword</span>(<span class=\"hljs-params\">key: <span class=\"hljs-built_in\">str</span> = <span class=\"hljs-string\">&quot;college&quot;</span>, pt: <span class=\"hljs-built_in\">str</span> = <span class=\"hljs-string\">&quot;UNIVERSITY&quot;</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n\r\n    For key:hello\r\n\r\n    H E L O\r\n    A B C D\r\n    F G I J\r\n    K M N P\r\n    Q R S T\r\n    U V W X\r\n    Y Z\r\n    and map vertically\r\n\r\n    &gt;&gt;&gt; mixed_keyword(&quot;college&quot;, &quot;UNIVERSITY&quot;)  # doctest: +NORMALIZE_WHITESPACE\r\n    {&#x27;A&#x27;: &#x27;C&#x27;, &#x27;B&#x27;: &#x27;A&#x27;, &#x27;C&#x27;: &#x27;I&#x27;, &#x27;D&#x27;: &#x27;P&#x27;, &#x27;E&#x27;: &#x27;U&#x27;, &#x27;F&#x27;: &#x27;Z&#x27;, &#x27;G&#x27;: &#x27;O&#x27;, &#x27;H&#x27;: &#x27;B&#x27;,\r\n     &#x27;I&#x27;: &#x27;J&#x27;, &#x27;J&#x27;: &#x27;Q&#x27;, &#x27;K&#x27;: &#x27;V&#x27;, &#x27;L&#x27;: &#x27;L&#x27;, &#x27;M&#x27;: &#x27;D&#x27;, &#x27;N&#x27;: &#x27;K&#x27;, &#x27;O&#x27;: &#x27;R&#x27;, &#x27;P&#x27;: &#x27;W&#x27;,\r\n     &#x27;Q&#x27;: &#x27;E&#x27;, &#x27;R&#x27;: &#x27;F&#x27;, &#x27;S&#x27;: &#x27;M&#x27;, &#x27;T&#x27;: &#x27;S&#x27;, &#x27;U&#x27;: &#x27;X&#x27;, &#x27;V&#x27;: &#x27;G&#x27;, &#x27;W&#x27;: &#x27;H&#x27;, &#x27;X&#x27;: &#x27;N&#x27;,\r\n     &#x27;Y&#x27;: &#x27;T&#x27;, &#x27;Z&#x27;: &#x27;Y&#x27;}\r\n    &#x27;XKJGUFMJST&#x27;\r\n    &quot;&quot;&quot;</span>\r\n    key = key.upper()\r\n    pt = pt.upper()\r\n    temp = []\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> key:\r\n        <span class=\"hljs-keyword\">if</span> i <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> temp:\r\n            temp.append(i)\r\n    len_temp = <span class=\"hljs-built_in\">len</span>(temp)\r\n    <span class=\"hljs-comment\"># print(temp)</span>\r\n    alpha = []\r\n    modalpha = []\r\n    <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">65</span>, <span class=\"hljs-number\">91</span>):\r\n        t = <span class=\"hljs-built_in\">chr</span>(j)\r\n        alpha.append(t)\r\n        <span class=\"hljs-keyword\">if</span> t <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> temp:\r\n            temp.append(t)\r\n    <span class=\"hljs-comment\"># print(temp)</span>\r\n    r = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-number\">26</span> / <span class=\"hljs-number\">4</span>)\r\n    <span class=\"hljs-comment\"># print(r)</span>\r\n    k = <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(r):\r\n        s = []\r\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(len_temp):\r\n            s.append(temp[k])\r\n            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> (k &lt; <span class=\"hljs-number\">25</span>):\r\n                <span class=\"hljs-keyword\">break</span>\r\n            k += <span class=\"hljs-number\">1</span>\r\n        modalpha.append(s)\r\n    <span class=\"hljs-comment\"># print(modalpha)</span>\r\n    d = {}\r\n    j = <span class=\"hljs-number\">0</span>\r\n    k = <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(len_temp):\r\n        <span class=\"hljs-keyword\">for</span> m <span class=\"hljs-keyword\">in</span> modalpha:\r\n            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> (<span class=\"hljs-built_in\">len</span>(m) - <span class=\"hljs-number\">1</span> &gt;= j):\r\n                <span class=\"hljs-keyword\">break</span>\r\n            d[alpha[k]] = m[j]\r\n            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> k &lt; <span class=\"hljs-number\">25</span>:\r\n                <span class=\"hljs-keyword\">break</span>\r\n            k += <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-built_in\">print</span>(d)\r\n    cypher = <span class=\"hljs-string\">&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> pt:\r\n        cypher += d[i]\r\n    <span class=\"hljs-keyword\">return</span> cypher\r\n\r\n\r\n<span class=\"hljs-built_in\">print</span>(mixed_keyword(<span class=\"hljs-string\">&quot;college&quot;</span>, <span class=\"hljs-string\">&quot;UNIVERSITY&quot;</span>))\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Dhruv Manilawala",
      "email": "dhruvmanila@gmail.com",
      "commits": 1
    },
    {
      "name": "onlinejudge95",
      "email": "44158581+onlinejudge95@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Jenia Dysin",
      "email": "jenia90@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "arjun1299",
      "email": "arjun1299@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}