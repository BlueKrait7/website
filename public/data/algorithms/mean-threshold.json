{
  "slug": "mean-threshold",
  "name": "Mean Threshold",
  "categories": [
    "computervision"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "computer_vision\\mean_threshold.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/computer_vision\\mean_threshold.py",
      "code": "<span class=\"hljs-keyword\">from</span> PIL <span class=\"hljs-keyword\">import</span> Image\r\n\r\n<span class=\"hljs-string\">&quot;&quot;&quot;\r\nMean thresholding algorithm for image processing\r\nhttps://en.wikipedia.org/wiki/Thresholding_(image_processing)\r\n&quot;&quot;&quot;</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">mean_threshold</span>(<span class=\"hljs-params\">image: Image</span>) -&gt; Image:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    image: is a grayscale PIL image object\r\n    &quot;&quot;&quot;</span>\r\n    height, width = image.size\r\n    mean = <span class=\"hljs-number\">0</span>\r\n    pixels = image.load()\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(width):\r\n        <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(height):\r\n            pixel = pixels[j, i]\r\n            mean += pixel\r\n    mean //= width * height\r\n\r\n    <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(width):\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(height):\r\n            pixels[i, j] = <span class=\"hljs-number\">255</span> <span class=\"hljs-keyword\">if</span> pixels[i, j] &gt; mean <span class=\"hljs-keyword\">else</span> <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-keyword\">return</span> image\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    image = mean_threshold(Image.<span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;path_to_image&quot;</span>).convert(<span class=\"hljs-string\">&quot;L&quot;</span>))\r\n    image.save(<span class=\"hljs-string\">&quot;output_image_path&quot;</span>)\r\n"
    }
  },
  "contributors": [
    {
      "name": "Tanay Karve",
      "email": "tanaykarve@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}