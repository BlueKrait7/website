{
  "slug": "coordinate",
  "name": "Coordinate",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths\\test\\Coordinate.test.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths\\test\\Coordinate.test.js",
      "code": "<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> coordinate <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../Coordinate&#x27;</span>\r\n\r\n<span class=\"hljs-title function_\">describe</span>(<span class=\"hljs-string\">&#x27;Testing euclideanDistance calculations&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Should give a numeric output (distance between 2 points) with 4 numeric arguments&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> euclideanDistance = coordinate.<span class=\"hljs-title function_\">euclideanDistance</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">10</span>, -<span class=\"hljs-number\">7</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(euclideanDistance).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">15</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Should not give any output given non-numeric argument&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> euclideanDistance = coordinate.<span class=\"hljs-title function_\">euclideanDistance</span>(<span class=\"hljs-string\">&#x27;ABC&#x27;</span>, <span class=\"hljs-string\">&#x27;123&#x27;</span>, <span class=\"hljs-string\">&#x27;&#x27;</span>, <span class=\"hljs-string\">&#x27;###&#x27;</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(euclideanDistance).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Should not give any output given any number of numeric arguments less than 4&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> euclideanDistance3arg = coordinate.<span class=\"hljs-title function_\">euclideanDistance</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">10</span>)\r\n    <span class=\"hljs-keyword\">const</span> euclideanDistance2arg = coordinate.<span class=\"hljs-title function_\">euclideanDistance</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)\r\n    <span class=\"hljs-keyword\">const</span> euclideanDistance1arg = coordinate.<span class=\"hljs-title function_\">euclideanDistance</span>(<span class=\"hljs-number\">2</span>)\r\n    <span class=\"hljs-keyword\">const</span> euclideanDistance0arg = coordinate.<span class=\"hljs-title function_\">euclideanDistance</span>()\r\n    <span class=\"hljs-title function_\">expect</span>(euclideanDistance3arg).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n    <span class=\"hljs-title function_\">expect</span>(euclideanDistance2arg).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n    <span class=\"hljs-title function_\">expect</span>(euclideanDistance1arg).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n    <span class=\"hljs-title function_\">expect</span>(euclideanDistance0arg).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n  })\r\n})\r\n\r\n<span class=\"hljs-title function_\">describe</span>(<span class=\"hljs-string\">&#x27;Testing manhattanDistance calculations&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Should give a numeric output (distance between 2 points) with 4 numeric arguments&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> manhattanDistance = coordinate.<span class=\"hljs-title function_\">manhattanDistance</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">10</span>, -<span class=\"hljs-number\">7</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(manhattanDistance).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">21</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Should not give any output given non-numeric argument&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> manhattanDistance = coordinate.<span class=\"hljs-title function_\">manhattanDistance</span>(<span class=\"hljs-string\">&#x27;ABC&#x27;</span>, <span class=\"hljs-string\">&#x27;123&#x27;</span>, <span class=\"hljs-string\">&#x27;&#x27;</span>, <span class=\"hljs-string\">&#x27;###&#x27;</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(manhattanDistance).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Should not give any output given any number of numeric arguments less than 4&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> manhattanDistance3arg = coordinate.<span class=\"hljs-title function_\">manhattanDistance</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">10</span>)\r\n    <span class=\"hljs-keyword\">const</span> manhattanDistance2arg = coordinate.<span class=\"hljs-title function_\">manhattanDistance</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">2</span>)\r\n    <span class=\"hljs-keyword\">const</span> manhattanDistance1arg = coordinate.<span class=\"hljs-title function_\">manhattanDistance</span>(<span class=\"hljs-number\">2</span>)\r\n    <span class=\"hljs-keyword\">const</span> manhattanDistance0arg = coordinate.<span class=\"hljs-title function_\">manhattanDistance</span>()\r\n    <span class=\"hljs-title function_\">expect</span>(manhattanDistance3arg).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n    <span class=\"hljs-title function_\">expect</span>(manhattanDistance2arg).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n    <span class=\"hljs-title function_\">expect</span>(manhattanDistance1arg).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n    <span class=\"hljs-title function_\">expect</span>(manhattanDistance0arg).<span class=\"hljs-title function_\">toBeNaN</span>()\r\n  })\r\n})\r\n"
    }
  },
  "contributors": [
    {
      "name": "Dhana D",
      "email": "39583785+ddhira123@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "Enoch-Moke",
      "email": "86700309+Enoch-Moke@users.noreply.github.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}