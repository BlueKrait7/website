{
  "slug": "fibonacci-java-streams",
  "name": "Fibonacci Java Streams",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\maths\\FibonacciJavaStreams.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\maths\\FibonacciJavaStreams.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.maths;\r\n\r\n<span class=\"hljs-keyword\">import</span> java.math.BigDecimal;\r\n<span class=\"hljs-keyword\">import</span> java.util.List;\r\n<span class=\"hljs-keyword\">import</span> java.util.Objects;\r\n<span class=\"hljs-keyword\">import</span> java.util.Optional;\r\n<span class=\"hljs-keyword\">import</span> java.util.stream.Stream;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * <span class=\"hljs-doctag\">@author</span>: caos321\r\n * <span class=\"hljs-doctag\">@date</span>: 14 October 2021 (Thursday)\r\n */</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">FibonacciJavaStreams</span> {\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Optional&lt;BigDecimal&gt; <span class=\"hljs-title function_\">calculate</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">final</span> BigDecimal index)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (index == <span class=\"hljs-literal\">null</span> || index.compareTo(BigDecimal.ZERO) &lt; <span class=\"hljs-number\">0</span>) {\r\n            <span class=\"hljs-keyword\">return</span> Optional.empty();\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">if</span> (index.compareTo(BigDecimal.ONE) &lt; <span class=\"hljs-number\">0</span>) {\r\n            <span class=\"hljs-keyword\">return</span> Optional.of(BigDecimal.ZERO);\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">if</span> (index.compareTo(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">2</span>)) &lt; <span class=\"hljs-number\">0</span>) {\r\n            <span class=\"hljs-keyword\">return</span> Optional.of(BigDecimal.ONE);\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">final</span> List&lt;BigDecimal&gt; results = Stream.iterate(\r\n                index,\r\n                x -&gt; x.compareTo(BigDecimal.ZERO) &gt; <span class=\"hljs-number\">0</span>,\r\n                x -&gt; x.subtract(BigDecimal.ONE)\r\n        )\r\n                .reduce(\r\n                        List.of(),\r\n                        (list, current)\r\n                        -&gt; list.isEmpty() || list.size() &lt; <span class=\"hljs-number\">2</span>\r\n                        ? List.of(BigDecimal.ZERO, BigDecimal.ONE)\r\n                        : List.of(list.get(<span class=\"hljs-number\">1</span>), list.get(<span class=\"hljs-number\">0</span>).add(list.get(<span class=\"hljs-number\">1</span>))),\r\n                        (list1, list2) -&gt; list1\r\n                );\r\n\r\n        <span class=\"hljs-keyword\">return</span> results.isEmpty()\r\n                ? Optional.empty()\r\n                : Optional.of(results.get(results.size() - <span class=\"hljs-number\">1</span>));\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">assertThat</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">final</span> Object actual, <span class=\"hljs-keyword\">final</span> Object expected)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (!Objects.equals(actual, expected)) {\r\n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">AssertionError</span>(String.format(<span class=\"hljs-string\">&quot;expected=%s but was actual=%s&quot;</span>, expected, actual));\r\n        }\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">final</span> String[] args)</span> {\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(-<span class=\"hljs-number\">1</span>));\r\n            assertThat(result.isEmpty(), <span class=\"hljs-literal\">true</span>);\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(BigDecimal.ZERO);\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, BigDecimal.ZERO));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(BigDecimal.ONE);\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, BigDecimal.ONE));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">2</span>));\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, BigDecimal.ONE));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">3</span>));\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">2</span>)));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">10</span>));\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">55</span>)));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">20</span>));\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">6765</span>)));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">30</span>));\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">832040</span>)));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">40</span>));\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">102334155</span>)));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">50</span>));\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">12586269025L</span>)));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">100</span>));\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-string\">&quot;354224848179261915075&quot;</span>)));\r\n        }\r\n        {\r\n            <span class=\"hljs-keyword\">final</span> Optional&lt;BigDecimal&gt; result = calculate(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-number\">200</span>));\r\n            assertThat(result.isPresent(), <span class=\"hljs-literal\">true</span>);\r\n            result.ifPresent(value -&gt; assertThat(value, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigDecimal</span>(<span class=\"hljs-string\">&quot;280571172992510140037611932413038677189525&quot;</span>)));\r\n        }\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "caos321",
      "email": "36530240+caos321@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}