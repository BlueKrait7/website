{
  "slug": "persistence",
  "name": "Persistence",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths\\persistence.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths\\persistence.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">multiplicative_persistence</span>(<span class=\"hljs-params\">num: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Return the persistence of a given number.\r\n\r\n    https://en.wikipedia.org/wiki/Persistence_of_a_number\r\n\r\n    &gt;&gt;&gt; multiplicative_persistence(217)\r\n    2\r\n    &gt;&gt;&gt; multiplicative_persistence(-1)\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: multiplicative_persistence() does not accept negative values\r\n    &gt;&gt;&gt; multiplicative_persistence(&quot;long number&quot;)\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: multiplicative_persistence() only accepts integral values\r\n    &quot;&quot;&quot;</span>\r\n\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(num, <span class=\"hljs-built_in\">int</span>):\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;multiplicative_persistence() only accepts integral values&quot;</span>)\r\n    <span class=\"hljs-keyword\">if</span> num &lt; <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;multiplicative_persistence() does not accept negative values&quot;</span>)\r\n\r\n    steps = <span class=\"hljs-number\">0</span>\r\n    num_string = <span class=\"hljs-built_in\">str</span>(num)\r\n\r\n    <span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">len</span>(num_string) != <span class=\"hljs-number\">1</span>:\r\n        numbers = [<span class=\"hljs-built_in\">int</span>(i) <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> num_string]\r\n\r\n        total = <span class=\"hljs-number\">1</span>\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(numbers)):\r\n            total *= numbers[i]\r\n\r\n        num_string = <span class=\"hljs-built_in\">str</span>(total)\r\n\r\n        steps += <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">return</span> steps\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">additive_persistence</span>(<span class=\"hljs-params\">num: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Return the persistence of a given number.\r\n\r\n    https://en.wikipedia.org/wiki/Persistence_of_a_number\r\n\r\n    &gt;&gt;&gt; additive_persistence(199)\r\n    3\r\n    &gt;&gt;&gt; additive_persistence(-1)\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: additive_persistence() does not accept negative values\r\n    &gt;&gt;&gt; additive_persistence(&quot;long number&quot;)\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: additive_persistence() only accepts integral values\r\n    &quot;&quot;&quot;</span>\r\n\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(num, <span class=\"hljs-built_in\">int</span>):\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;additive_persistence() only accepts integral values&quot;</span>)\r\n    <span class=\"hljs-keyword\">if</span> num &lt; <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;additive_persistence() does not accept negative values&quot;</span>)\r\n\r\n    steps = <span class=\"hljs-number\">0</span>\r\n    num_string = <span class=\"hljs-built_in\">str</span>(num)\r\n\r\n    <span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">len</span>(num_string) != <span class=\"hljs-number\">1</span>:\r\n        numbers = [<span class=\"hljs-built_in\">int</span>(i) <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> num_string]\r\n\r\n        total = <span class=\"hljs-number\">0</span>\r\n        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(numbers)):\r\n            total += numbers[i]\r\n\r\n        num_string = <span class=\"hljs-built_in\">str</span>(total)\r\n\r\n        steps += <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">return</span> steps\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n"
    }
  },
  "contributors": [
    {
      "name": "Bartechnika",
      "email": "48760796+Bartechnika@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}