{
  "slug": "median-heap",
  "name": "Median Heap",
  "categories": [
    "datastructures"
  ],
  "body": {},
  "implementations": {
    "lua": {
      "dir": "src\\data_structures\\median_heap.lua",
      "url": "https://github.com/TheAlgorithms/lua/tree/master/src\\data_structures\\median_heap.lua",
      "code": "<span class=\"hljs-keyword\">local</span> heap = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;data_structures.heap&quot;</span>)\r\n\r\n<span class=\"hljs-comment\">-- A heap which provides the median, defined as the floor(n/2)-th smallest element, as it&#x27;s top element</span>\r\n<span class=\"hljs-keyword\">local</span> median_heap = {}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">median_heap.less_than</span><span class=\"hljs-params\">(a, b)</span></span>\r\n\t<span class=\"hljs-keyword\">return</span> a &lt; b\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">median_heap.new</span><span class=\"hljs-params\">(less_than)</span></span>\r\n\t<span class=\"hljs-keyword\">local</span> <span class=\"hljs-built_in\">self</span>\r\n\t<span class=\"hljs-built_in\">self</span> = {\r\n\t\tless_than = less_than,\r\n\t\tlower_half = heap.new(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(a, b)</span></span>\r\n\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">self</span>.less_than(b, a) <span class=\"hljs-comment\">-- max heap</span>\r\n\t\t<span class=\"hljs-keyword\">end</span>),\r\n\t\tupper_half = heap.new(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(a, b)</span></span>\r\n\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">self</span>.less_than(a, b) <span class=\"hljs-comment\">-- min heap</span>\r\n\t\t<span class=\"hljs-keyword\">end</span>),\r\n\t}\r\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">self</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">median_heap:empty</span><span class=\"hljs-params\">()</span></span>\r\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">self</span>.lower_half:empty()\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">median_heap:size</span><span class=\"hljs-params\">()</span></span>\r\n\t<span class=\"hljs-keyword\">return</span> #<span class=\"hljs-built_in\">self</span>.lower_half + #<span class=\"hljs-built_in\">self</span>.upper_half\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">median_heap:top</span><span class=\"hljs-params\">()</span></span>\r\n\t<span class=\"hljs-comment\">-- the median</span>\r\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">self</span>.lower_half:top()\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">median_heap:pop</span><span class=\"hljs-params\">()</span></span>\r\n\t<span class=\"hljs-keyword\">local</span> value = <span class=\"hljs-built_in\">self</span>.lower_half:pop()\r\n\t<span class=\"hljs-keyword\">if</span> #<span class=\"hljs-built_in\">self</span>.lower_half &lt; #<span class=\"hljs-built_in\">self</span>.upper_half <span class=\"hljs-keyword\">then</span>\r\n\t\t<span class=\"hljs-built_in\">self</span>.lower_half:push(<span class=\"hljs-built_in\">self</span>.upper_half:pop())\r\n\t<span class=\"hljs-keyword\">end</span>\r\n\t<span class=\"hljs-keyword\">return</span> value\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">median_heap:push</span><span class=\"hljs-params\">(value)</span></span>\r\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">self</span>:empty() <span class=\"hljs-keyword\">then</span>\r\n\t\t<span class=\"hljs-built_in\">self</span>.lower_half:push(value)\r\n\t<span class=\"hljs-keyword\">elseif</span> <span class=\"hljs-built_in\">self</span>.less_than(value, <span class=\"hljs-built_in\">self</span>:top()) <span class=\"hljs-keyword\">then</span>\r\n\t\t<span class=\"hljs-built_in\">self</span>.lower_half:push(value)\r\n\t\t<span class=\"hljs-keyword\">if</span> #<span class=\"hljs-built_in\">self</span>.lower_half - #<span class=\"hljs-built_in\">self</span>.upper_half &gt; <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">then</span>\r\n\t\t\t<span class=\"hljs-built_in\">self</span>.upper_half:push(<span class=\"hljs-built_in\">self</span>.lower_half:pop())\r\n\t\t<span class=\"hljs-keyword\">end</span>\r\n\t<span class=\"hljs-keyword\">else</span>\r\n\t\t<span class=\"hljs-built_in\">self</span>.upper_half:push(value)\r\n\t\t<span class=\"hljs-keyword\">if</span> #<span class=\"hljs-built_in\">self</span>.lower_half &lt; #<span class=\"hljs-built_in\">self</span>.upper_half <span class=\"hljs-keyword\">then</span>\r\n\t\t\t<span class=\"hljs-built_in\">self</span>.lower_half:push(<span class=\"hljs-built_in\">self</span>.upper_half:pop())\r\n\t\t<span class=\"hljs-keyword\">end</span>\r\n\t<span class=\"hljs-keyword\">end</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;class&quot;</span>)(median_heap)\r\n"
    }
  },
  "contributors": [
    {
      "name": "Lars Mueller",
      "email": "appgurulars@gmx.de",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}