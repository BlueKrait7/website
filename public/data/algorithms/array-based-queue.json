{
  "slug": "array-based-queue",
  "name": "Array-based Queue",
  "categories": [
    "datastructures",
    "queues"
  ],
  "body": {},
  "implementations": {
    "c-sharp": {
      "dir": "./DataStructures/Queue/ArrayBasedQueue.cs",
      "url": "https:\\github.com\\TheAlgorithms\\C-Sharp\\tree\\master\\DataStructures\\Queue\\ArrayBasedQueue.cs",
      "code": "<span class=\"hljs-keyword\">using</span> System;\r\n\r\n<span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-title\">DataStructures.Queue</span>\r\n{\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Implementation of an array based queue. FIFO style.</span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n    <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;typeparam name=&quot;T&quot;&gt;</span>Generic Type.<span class=\"hljs-doctag\">&lt;/typeparam&gt;</span></span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ArrayBasedQueue</span>&lt;<span class=\"hljs-title\">T</span>&gt;\r\n    {\r\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">readonly</span> T[] queue;\r\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> endIndex;\r\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isEmpty;\r\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">bool</span> isFull;\r\n        <span class=\"hljs-keyword\">private</span> <span class=\"hljs-built_in\">int</span> startIndex;\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Initializes a new instance of the <span class=\"hljs-doctag\">&lt;see cref=&quot;ArrayBasedQueue{T}&quot; /&gt;</span> class.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">ArrayBasedQueue</span>(<span class=\"hljs-params\"><span class=\"hljs-built_in\">int</span> capacity</span>)</span>\r\n        {\r\n            queue = <span class=\"hljs-keyword\">new</span> T[capacity];\r\n            Clear();\r\n        }\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Clears the queue.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Clear</span>()</span>\r\n        {\r\n            startIndex = <span class=\"hljs-number\">0</span>;\r\n            endIndex = <span class=\"hljs-number\">0</span>;\r\n            isEmpty = <span class=\"hljs-literal\">true</span>;\r\n            isFull = <span class=\"hljs-literal\">false</span>;\r\n        }\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Returns the first item in the queue and removes it from the queue.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;exception cref=&quot;InvalidOperationException&quot;&gt;</span>Thrown if the queue is empty.<span class=\"hljs-doctag\">&lt;/exception&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> T <span class=\"hljs-title\">Dequeue</span>()</span>\r\n        {\r\n            <span class=\"hljs-keyword\">if</span> (IsEmpty())\r\n            {\r\n                <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOperationException(<span class=\"hljs-string\">&quot;There are no items in the queue.&quot;</span>);\r\n            }\r\n\r\n            <span class=\"hljs-keyword\">var</span> dequeueIndex = endIndex;\r\n            endIndex++;\r\n            <span class=\"hljs-keyword\">if</span> (endIndex &gt;= queue.Length)\r\n            {\r\n                endIndex = <span class=\"hljs-number\">0</span>;\r\n            }\r\n\r\n            isFull = <span class=\"hljs-literal\">false</span>;\r\n            isEmpty = startIndex == endIndex;\r\n\r\n            <span class=\"hljs-keyword\">return</span> queue[dequeueIndex];\r\n        }\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Returns a boolean indicating whether the queue is empty.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">IsEmpty</span>()</span> =&gt; isEmpty;\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Returns a boolean indicating whether the queue is full.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-built_in\">bool</span> <span class=\"hljs-title\">IsFull</span>()</span> =&gt; isFull;\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Returns the first item in the queue and keeps it in the queue.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;exception cref=&quot;InvalidOperationException&quot;&gt;</span>Thrown if the queue is empty.<span class=\"hljs-doctag\">&lt;/exception&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> T <span class=\"hljs-title\">Peek</span>()</span>\r\n        {\r\n            <span class=\"hljs-keyword\">if</span> (IsEmpty())\r\n            {\r\n                <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOperationException(<span class=\"hljs-string\">&quot;There are no items in the queue.&quot;</span>);\r\n            }\r\n\r\n            <span class=\"hljs-keyword\">return</span> queue[endIndex];\r\n        }\r\n\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span>     Adds an item at the last position in the queue.</span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;/summary&gt;</span></span>\r\n        <span class=\"hljs-comment\"><span class=\"hljs-doctag\">///</span> <span class=\"hljs-doctag\">&lt;exception cref=&quot;InvalidOperationException&quot;&gt;</span>Thrown if the queue is full.<span class=\"hljs-doctag\">&lt;/exception&gt;</span></span>\r\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Enqueue</span>(<span class=\"hljs-params\">T item</span>)</span>\r\n        {\r\n            <span class=\"hljs-keyword\">if</span> (IsFull())\r\n            {\r\n                <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOperationException(<span class=\"hljs-string\">&quot;The queue has reached its capacity.&quot;</span>);\r\n            }\r\n\r\n            queue[startIndex] = item;\r\n\r\n            startIndex++;\r\n            <span class=\"hljs-keyword\">if</span> (startIndex &gt;= queue.Length)\r\n            {\r\n                startIndex = <span class=\"hljs-number\">0</span>;\r\n            }\r\n\r\n            isEmpty = <span class=\"hljs-literal\">false</span>;\r\n            isFull = startIndex == endIndex;\r\n        }\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Per Westerlund",
      "email": "per@fastmail.com",
      "commits": 1
    },
    {
      "name": "Andrii Siriak",
      "email": "siryaka@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}