{
  "slug": "binary-twos-complement",
  "name": "Binary Twos Complement",
  "categories": [
    "bitmanipulation"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "bit_manipulation\\binary_twos_complement.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/bit_manipulation\\binary_twos_complement.py",
      "code": "<span class=\"hljs-comment\"># Information on 2&#x27;s complement: https://en.wikipedia.org/wiki/Two%27s_complement</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">twos_complement</span>(<span class=\"hljs-params\">number: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Take in a negative integer &#x27;number&#x27;.\r\n    Return the two&#x27;s complement representation of &#x27;number&#x27;.\r\n\r\n    &gt;&gt;&gt; twos_complement(0)\r\n    &#x27;0b0&#x27;\r\n    &gt;&gt;&gt; twos_complement(-1)\r\n    &#x27;0b11&#x27;\r\n    &gt;&gt;&gt; twos_complement(-5)\r\n    &#x27;0b1011&#x27;\r\n    &gt;&gt;&gt; twos_complement(-17)\r\n    &#x27;0b101111&#x27;\r\n    &gt;&gt;&gt; twos_complement(-207)\r\n    &#x27;0b100110001&#x27;\r\n    &gt;&gt;&gt; twos_complement(1)\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: input must be a negative integer\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> number &gt; <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;input must be a negative integer&quot;</span>)\r\n    binary_number_length = <span class=\"hljs-built_in\">len</span>(<span class=\"hljs-built_in\">bin</span>(number)[<span class=\"hljs-number\">3</span>:])\r\n    twos_complement_number = <span class=\"hljs-built_in\">bin</span>(<span class=\"hljs-built_in\">abs</span>(number) - (<span class=\"hljs-number\">1</span> &lt;&lt; binary_number_length))[<span class=\"hljs-number\">3</span>:]\r\n    twos_complement_number = (\r\n        (\r\n            <span class=\"hljs-string\">&quot;1&quot;</span>\r\n            + <span class=\"hljs-string\">&quot;0&quot;</span> * (binary_number_length - <span class=\"hljs-built_in\">len</span>(twos_complement_number))\r\n            + twos_complement_number\r\n        )\r\n        <span class=\"hljs-keyword\">if</span> number &lt; <span class=\"hljs-number\">0</span>\r\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-string\">&quot;0&quot;</span>\r\n    )\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;0b&quot;</span> + twos_complement_number\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n"
    }
  },
  "contributors": [
    {
      "name": "Leyza",
      "email": "56138111+Leyza@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}