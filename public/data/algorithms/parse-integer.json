{
  "slug": "parse-integer",
  "name": "Parse Integer",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\maths\\ParseInteger.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\maths\\ParseInteger.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.maths;\r\n\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ParseInteger</span> {\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">parseInt</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;123&quot;</span>)</span> == Integer.parseInt(<span class=\"hljs-string\">&quot;123&quot;</span>);\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">parseInt</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;-123&quot;</span>)</span> == Integer.parseInt(<span class=\"hljs-string\">&quot;-123&quot;</span>);\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">parseInt</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;0123&quot;</span>)</span> == Integer.parseInt(<span class=\"hljs-string\">&quot;0123&quot;</span>);\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">parseInt</span><span class=\"hljs-params\">(<span class=\"hljs-string\">&quot;+123&quot;</span>)</span> == Integer.parseInt(<span class=\"hljs-string\">&quot;+123&quot;</span>);\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * Parse a string to integer\r\n     *\r\n     * <span class=\"hljs-doctag\">@param</span> s the string\r\n     * <span class=\"hljs-doctag\">@return</span> the integer value represented by the argument in decimal.\r\n     * <span class=\"hljs-doctag\">@throws</span> NumberFormatException if the {<span class=\"hljs-doctag\">@code</span> string} does not contain a\r\n     * parsable integer.\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">parseInt</span><span class=\"hljs-params\">(String s)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-literal\">null</span> || s.length() == <span class=\"hljs-number\">0</span>) {\r\n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">NumberFormatException</span>(<span class=\"hljs-string\">&quot;null&quot;</span>);\r\n        }\r\n        <span class=\"hljs-type\">boolean</span> <span class=\"hljs-variable\">isNegative</span> <span class=\"hljs-operator\">=</span> s.charAt(<span class=\"hljs-number\">0</span>) == <span class=\"hljs-string\">&#x27;-&#x27;</span>;\r\n        <span class=\"hljs-type\">boolean</span> <span class=\"hljs-variable\">isPositive</span> <span class=\"hljs-operator\">=</span> s.charAt(<span class=\"hljs-number\">0</span>) == <span class=\"hljs-string\">&#x27;+&#x27;</span>;\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">number</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> isNegative ? <span class=\"hljs-number\">1</span> : isPositive ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">0</span>, length = s.length(); i &lt; length; ++i) {\r\n            <span class=\"hljs-keyword\">if</span> (!Character.isDigit(s.charAt(i))) {\r\n                <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">NumberFormatException</span>(<span class=\"hljs-string\">&quot;s=&quot;</span> + s);\r\n            }\r\n            number = number * <span class=\"hljs-number\">10</span> + s.charAt(i) - <span class=\"hljs-string\">&#x27;0&#x27;</span>;\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> isNegative ? -number : number;\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "lollerfirst",
      "email": "43107113+lollerfirst@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}