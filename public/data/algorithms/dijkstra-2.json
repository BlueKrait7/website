{
  "slug": "dijkstra-2",
  "name": "Dijkstra 2",
  "categories": [
    "graphs"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "graphs\\dijkstra_2.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/graphs\\dijkstra_2.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">printDist</span>(<span class=\"hljs-params\">dist, V</span>):\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;\\nVertex Distance&quot;</span>)\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(V):\r\n        <span class=\"hljs-keyword\">if</span> dist[i] != <span class=\"hljs-built_in\">float</span>(<span class=\"hljs-string\">&quot;inf&quot;</span>):\r\n            <span class=\"hljs-built_in\">print</span>(i, <span class=\"hljs-string\">&quot;\\t&quot;</span>, <span class=\"hljs-built_in\">int</span>(dist[i]), end=<span class=\"hljs-string\">&quot;\\t&quot;</span>)\r\n        <span class=\"hljs-keyword\">else</span>:\r\n            <span class=\"hljs-built_in\">print</span>(i, <span class=\"hljs-string\">&quot;\\t&quot;</span>, <span class=\"hljs-string\">&quot;INF&quot;</span>, end=<span class=\"hljs-string\">&quot;\\t&quot;</span>)\r\n        <span class=\"hljs-built_in\">print</span>()\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">minDist</span>(<span class=\"hljs-params\">mdist, vset, V</span>):\r\n    minVal = <span class=\"hljs-built_in\">float</span>(<span class=\"hljs-string\">&quot;inf&quot;</span>)\r\n    minInd = -<span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(V):\r\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">not</span> vset[i]) <span class=\"hljs-keyword\">and</span> mdist[i] &lt; minVal:\r\n            minInd = i\r\n            minVal = mdist[i]\r\n    <span class=\"hljs-keyword\">return</span> minInd\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">Dijkstra</span>(<span class=\"hljs-params\">graph, V, src</span>):\r\n    mdist = [<span class=\"hljs-built_in\">float</span>(<span class=\"hljs-string\">&quot;inf&quot;</span>) <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(V)]\r\n    vset = [<span class=\"hljs-literal\">False</span> <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(V)]\r\n    mdist[src] = <span class=\"hljs-number\">0.0</span>\r\n\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(V - <span class=\"hljs-number\">1</span>):\r\n        u = minDist(mdist, vset, V)\r\n        vset[u] = <span class=\"hljs-literal\">True</span>\r\n\r\n        <span class=\"hljs-keyword\">for</span> v <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(V):\r\n            <span class=\"hljs-keyword\">if</span> (\r\n                (<span class=\"hljs-keyword\">not</span> vset[v])\r\n                <span class=\"hljs-keyword\">and</span> graph[u][v] != <span class=\"hljs-built_in\">float</span>(<span class=\"hljs-string\">&quot;inf&quot;</span>)\r\n                <span class=\"hljs-keyword\">and</span> mdist[u] + graph[u][v] &lt; mdist[v]\r\n            ):\r\n                mdist[v] = mdist[u] + graph[u][v]\r\n\r\n    printDist(mdist, V)\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    V = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter number of vertices: &quot;</span>).strip())\r\n    E = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter number of edges: &quot;</span>).strip())\r\n\r\n    graph = [[<span class=\"hljs-built_in\">float</span>(<span class=\"hljs-string\">&quot;inf&quot;</span>) <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(V)] <span class=\"hljs-keyword\">for</span> j <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(V)]\r\n\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(V):\r\n        graph[i][i] = <span class=\"hljs-number\">0.0</span>\r\n\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(E):\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;\\nEdge &quot;</span>, i + <span class=\"hljs-number\">1</span>)\r\n        src = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter source:&quot;</span>).strip())\r\n        dst = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter destination:&quot;</span>).strip())\r\n        weight = <span class=\"hljs-built_in\">float</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter weight:&quot;</span>).strip())\r\n        graph[src][dst] = weight\r\n\r\n    gsrc = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;\\nEnter shortest path source:&quot;</span>).strip())\r\n    Dijkstra(graph, V, gsrc)\r\n"
    }
  },
  "contributors": [
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}