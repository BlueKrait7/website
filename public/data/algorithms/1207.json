{
  "slug": "1207",
  "name": "1207",
  "categories": [
    "leetcode"
  ],
  "body": {},
  "implementations": {
    "c": {
      "dir": "leetcode\\src\\1207.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/leetcode\\src\\1207.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> MAP_SIZE 2048</span>\r\n\r\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">cmpvalue</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">void</span> *a, <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">void</span> *b)</span> { <span class=\"hljs-keyword\">return</span> *(<span class=\"hljs-type\">int</span> *)b - *(<span class=\"hljs-type\">int</span> *)a; }\r\n<span class=\"hljs-type\">bool</span> <span class=\"hljs-title function_\">uniqueOccurrences</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> *arr, <span class=\"hljs-type\">int</span> arrSize)</span>\r\n{\r\n    <span class=\"hljs-type\">int</span> *<span class=\"hljs-built_in\">map</span> = <span class=\"hljs-built_in\">calloc</span>(MAP_SIZE, <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">int</span>));\r\n    <span class=\"hljs-type\">int</span> i;\r\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; arrSize; i++)\r\n    {\r\n        <span class=\"hljs-keyword\">if</span> (arr[i] &lt; <span class=\"hljs-number\">0</span>)\r\n            <span class=\"hljs-built_in\">map</span>[arr[i] + MAP_SIZE / <span class=\"hljs-number\">2</span>] += <span class=\"hljs-number\">1</span>;\r\n        <span class=\"hljs-keyword\">else</span>\r\n            <span class=\"hljs-built_in\">map</span>[arr[i]] += <span class=\"hljs-number\">1</span>;\r\n    }\r\n    <span class=\"hljs-comment\">/* number of occurrences is sorted by decreasing order\r\n       Ex: 3 2 1 0 0 0 0 */</span>\r\n    qsort(<span class=\"hljs-built_in\">map</span>, MAP_SIZE, <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">int</span>), cmpvalue);\r\n    i = <span class=\"hljs-number\">0</span>;\r\n    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-built_in\">map</span>[i])\r\n    {\r\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">map</span>[i] == <span class=\"hljs-built_in\">map</span>[i + <span class=\"hljs-number\">1</span>])\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n        i++;\r\n    }\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "hai dang",
      "email": "haihoangdang91@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}