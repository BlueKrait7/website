{
  "slug": "ohms-law",
  "name": "Ohms Law",
  "categories": [
    "electronics"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "electronics\\ohms_law.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/electronics\\ohms_law.py",
      "code": "<span class=\"hljs-comment\"># https://en.wikipedia.org/wiki/Ohm%27s_law</span>\r\n<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">ohms_law</span>(<span class=\"hljs-params\">voltage: <span class=\"hljs-built_in\">float</span>, current: <span class=\"hljs-built_in\">float</span>, resistance: <span class=\"hljs-built_in\">float</span></span>) -&gt; <span class=\"hljs-built_in\">dict</span>[<span class=\"hljs-built_in\">str</span>, <span class=\"hljs-built_in\">float</span>]:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Apply Ohm&#x27;s Law, on any two given electrical values, which can be voltage, current,\r\n    and resistance, and then in a Python dict return name/value pair of the zero value.\r\n\r\n    &gt;&gt;&gt; ohms_law(voltage=10, resistance=5, current=0)\r\n    {&#x27;current&#x27;: 2.0}\r\n    &gt;&gt;&gt; ohms_law(voltage=0, current=0, resistance=10)\r\n    Traceback (most recent call last):\r\n      ...\r\n    ValueError: One and only one argument must be 0\r\n    &gt;&gt;&gt; ohms_law(voltage=0, current=1, resistance=-2)\r\n    Traceback (most recent call last):\r\n      ...\r\n    ValueError: Resistance cannot be negative\r\n    &gt;&gt;&gt; ohms_law(resistance=0, voltage=-10, current=1)\r\n    {&#x27;resistance&#x27;: -10.0}\r\n    &gt;&gt;&gt; ohms_law(voltage=0, current=-1.5, resistance=2)\r\n    {&#x27;voltage&#x27;: -3.0}\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> (voltage, current, resistance).count(<span class=\"hljs-number\">0</span>) != <span class=\"hljs-number\">1</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;One and only one argument must be 0&quot;</span>)\r\n    <span class=\"hljs-keyword\">if</span> resistance &lt; <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Resistance cannot be negative&quot;</span>)\r\n    <span class=\"hljs-keyword\">if</span> voltage == <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-string\">&quot;voltage&quot;</span>: <span class=\"hljs-built_in\">float</span>(current * resistance)}\r\n    <span class=\"hljs-keyword\">elif</span> current == <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-string\">&quot;current&quot;</span>: voltage / resistance}\r\n    <span class=\"hljs-keyword\">elif</span> resistance == <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-string\">&quot;resistance&quot;</span>: voltage / current}\r\n    <span class=\"hljs-keyword\">else</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Exactly one argument must be 0&quot;</span>)\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n"
    },
    "ruby": {
      "dir": "electronics\\ohms_law.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/electronics\\ohms_law.rb",
      "code": "<span class=\"hljs-comment\"># A ruby program for Ohms Law, which is used to calculate Voltage for the given Resistance and Current.</span>\r\n<span class=\"hljs-comment\"># Ohms Law -&gt; V = I * R</span>\r\n<span class=\"hljs-comment\"># Reference: https://en.wikipedia.org/wiki/Ohm&#x27;s_law</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">ohms_law</span><span class=\"hljs-params\">(i, r)</span></span>\r\n  <span class=\"hljs-keyword\">if</span> i &gt; <span class=\"hljs-number\">0</span> &amp;&amp; r &gt; <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-string\">&quot;The voltage for given <span class=\"hljs-subst\">#{i}</span> ampheres current and <span class=\"hljs-subst\">#{r}</span> ohms resistance is <span class=\"hljs-subst\">#{r * i}</span> volts.&quot;</span>\r\n  <span class=\"hljs-keyword\">else</span>\r\n    raise\r\n  <span class=\"hljs-keyword\">end</span>\r\n<span class=\"hljs-keyword\">rescue</span> StandardError\r\n  <span class=\"hljs-string\">&#x27;Error: Please provide valid inputs only!&#x27;</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-comment\"># Valid inputs</span>\r\nputs(ohms_law(<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>))\r\n<span class=\"hljs-comment\"># The voltage for given 5 ampheres current and 10 ohms resistance is 50 volts.</span>\r\nputs(ohms_law(<span class=\"hljs-number\">2.5</span>, <span class=\"hljs-number\">6.9</span>))\r\n<span class=\"hljs-comment\"># The voltage for given 2.5 ampheres current and 6.9 ohms resistance is 17.25 volts.</span>\r\nputs(ohms_law(<span class=\"hljs-number\">0.15</span>, <span class=\"hljs-number\">0.84</span>))\r\n<span class=\"hljs-comment\"># The voltage for given 0.15 ampheres current and 0.84 ohms resistance is 0.126 volts.</span>\r\n\r\n<span class=\"hljs-comment\"># Invalid inputs</span>\r\nputs(ohms_law(<span class=\"hljs-number\">5</span>, -<span class=\"hljs-number\">10</span>))\r\n<span class=\"hljs-comment\"># Error: Please provide valid inputs only!</span>\r\nputs(ohms_law(-<span class=\"hljs-number\">5</span>, -<span class=\"hljs-number\">10</span>))\r\n<span class=\"hljs-comment\"># Error: Please provide valid inputs only!</span>\r\nputs(ohms_law(<span class=\"hljs-number\">5</span>, <span class=\"hljs-string\">&#x27;10&#x27;</span>))\r\n<span class=\"hljs-comment\"># Error: Please provide valid inputs only!</span>\r\nputs(ohms_law(<span class=\"hljs-string\">&#x27;a&#x27;</span>, <span class=\"hljs-number\">10</span>))\r\n<span class=\"hljs-comment\"># Error: Please provide valid inputs only!</span>\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 1
    },
    {
      "name": "algobytewise",
      "email": "algobytewise@gmail.com",
      "commits": 1
    },
    {
      "name": "Shantanu Joshi",
      "email": "42472191+shan7030@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Erdum",
      "email": "erdumadnan@gmail.com",
      "commits": 1
    },
    {
      "name": "Sahil Afrid Farookhi",
      "email": "msafarookhi@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}