{
  "slug": "binary-to-decimal",
  "name": "Binary to Decimal",
  "categories": [
    "conversions"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "conversions\\binary_to_decimal.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/conversions\\binary_to_decimal.py",
      "code": "<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">bin_to_decimal</span>(<span class=\"hljs-params\">bin_string: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Convert a binary value to its decimal equivalent\r\n\r\n    &gt;&gt;&gt; bin_to_decimal(&quot;101&quot;)\r\n    5\r\n    &gt;&gt;&gt; bin_to_decimal(&quot; 1010   &quot;)\r\n    10\r\n    &gt;&gt;&gt; bin_to_decimal(&quot;-11101&quot;)\r\n    -29\r\n    &gt;&gt;&gt; bin_to_decimal(&quot;0&quot;)\r\n    0\r\n    &gt;&gt;&gt; bin_to_decimal(&quot;a&quot;)\r\n    Traceback (most recent call last):\r\n    ...\r\n    ValueError: Non-binary value was passed to the function\r\n    &gt;&gt;&gt; bin_to_decimal(&quot;&quot;)\r\n    Traceback (most recent call last):\r\n    ...\r\n    ValueError: Empty string was passed to the function\r\n    &gt;&gt;&gt; bin_to_decimal(&quot;39&quot;)\r\n    Traceback (most recent call last):\r\n    ...\r\n    ValueError: Non-binary value was passed to the function\r\n    &quot;&quot;&quot;</span>\r\n    bin_string = <span class=\"hljs-built_in\">str</span>(bin_string).strip()\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> bin_string:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Empty string was passed to the function&quot;</span>)\r\n    is_negative = bin_string[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&quot;-&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> is_negative:\r\n        bin_string = bin_string[<span class=\"hljs-number\">1</span>:]\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">all</span>(char <span class=\"hljs-keyword\">in</span> <span class=\"hljs-string\">&quot;01&quot;</span> <span class=\"hljs-keyword\">for</span> char <span class=\"hljs-keyword\">in</span> bin_string):\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Non-binary value was passed to the function&quot;</span>)\r\n    decimal_number = <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-keyword\">for</span> char <span class=\"hljs-keyword\">in</span> bin_string:\r\n        decimal_number = <span class=\"hljs-number\">2</span> * decimal_number + <span class=\"hljs-built_in\">int</span>(char)\r\n    <span class=\"hljs-keyword\">return</span> -decimal_number <span class=\"hljs-keyword\">if</span> is_negative <span class=\"hljs-keyword\">else</span> decimal_number\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">from</span> doctest <span class=\"hljs-keyword\">import</span> testmod\r\n\r\n    testmod()\r\n"
    },
    "javascript": {
      "dir": "Conversions\\test\\BinaryToDecimal.test.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Conversions\\test\\BinaryToDecimal.test.js",
      "code": "<span class=\"hljs-keyword\">import</span> binaryToDecimal <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../BinaryToDecimal&#x27;</span>\r\n\r\n<span class=\"hljs-title function_\">describe</span>(<span class=\"hljs-string\">&#x27;BinaryToDecimal&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;expects to return correct decimal value&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">binaryToDecimal</span>(<span class=\"hljs-string\">&#x27;1000&#x27;</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">8</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;expects to return correct hexadecimal value for more than one hex digit&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">binaryToDecimal</span>(<span class=\"hljs-string\">&#x27;01101000&#x27;</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">104</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;expects to return correct hexadecimal value for padding-required binary&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">binaryToDecimal</span>(<span class=\"hljs-string\">&#x27;1000101&#x27;</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">69</span>)\r\n  })\r\n})\r\n"
    },
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\conversions\\BinaryToDecimal.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\conversions\\BinaryToDecimal.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.conversions;\r\n\r\n<span class=\"hljs-keyword\">import</span> java.util.Scanner;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * This class converts a Binary number to a Decimal number\r\n */</span>\r\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BinaryToDecimal</span> {\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * Main Method\r\n     *\r\n     * <span class=\"hljs-doctag\">@param</span> args Command line arguments\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\r\n        <span class=\"hljs-type\">Scanner</span> <span class=\"hljs-variable\">sc</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Scanner</span>(System.in);\r\n        <span class=\"hljs-type\">int</span> binNum, binCopy, d, s = <span class=\"hljs-number\">0</span>, power = <span class=\"hljs-number\">0</span>;\r\n        System.out.print(<span class=\"hljs-string\">&quot;Binary number: &quot;</span>);\r\n        binNum = sc.nextInt();\r\n        binCopy = binNum;\r\n        <span class=\"hljs-keyword\">while</span> (binCopy != <span class=\"hljs-number\">0</span>) {\r\n            d = binCopy % <span class=\"hljs-number\">10</span>;\r\n            s += d * (<span class=\"hljs-type\">int</span>) Math.pow(<span class=\"hljs-number\">2</span>, power++);\r\n            binCopy /= <span class=\"hljs-number\">10</span>;\r\n        }\r\n        System.out.println(<span class=\"hljs-string\">&quot;Decimal equivalent:&quot;</span> + s);\r\n        sc.close();\r\n    }\r\n}\r\n"
    },
    "c": {
      "dir": "conversions\\binary_to_decimal.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/conversions\\binary_to_decimal.c",
      "code": "<span class=\"hljs-comment\">/**\r\n * Modified 07/12/2017, Kyler Smith\r\n *\r\n */</span>\r\n\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\r\n\r\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\r\n{\r\n    <span class=\"hljs-type\">int</span> remainder, number = <span class=\"hljs-number\">0</span>, decimal_number = <span class=\"hljs-number\">0</span>, temp = <span class=\"hljs-number\">1</span>;\r\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n Enter any binary number= &quot;</span>);\r\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%d&quot;</span>, &amp;number);\r\n\r\n    <span class=\"hljs-comment\">// Iterate over the number until the end.</span>\r\n    <span class=\"hljs-keyword\">while</span> (number &gt; <span class=\"hljs-number\">0</span>)\r\n    {\r\n        remainder = number % <span class=\"hljs-number\">10</span>;\r\n        number = number / <span class=\"hljs-number\">10</span>;\r\n        decimal_number += remainder * temp;\r\n        temp = temp * <span class=\"hljs-number\">2</span>;  <span class=\"hljs-comment\">// used as power of 2</span>\r\n    }\r\n\r\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d\\n&quot;</span>, decimal_number);\r\n}\r\n"
    },
    "go": {
      "dir": "conversion\\binarytodecimal.go",
      "url": "https://github.com/TheAlgorithms/go/tree/master/conversion\\binarytodecimal.go",
      "code": "<span class=\"hljs-comment\">/*\r\nAuthor: Motasim\r\nGitHub: https://github.com/motasimmakki\r\nDate: 19-Oct-2021\r\n*/</span>\r\n\r\n<span class=\"hljs-comment\">// This algorithm will convert any Binary number(0 or 1) to Decimal number(+ve number).</span>\r\n<span class=\"hljs-comment\">// https://en.wikipedia.org/wiki/Binary_number</span>\r\n<span class=\"hljs-comment\">// https://en.wikipedia.org/wiki/Decimal</span>\r\n<span class=\"hljs-comment\">// Function receives a Binary Number as string and returns the Decimal number as integer.</span>\r\n<span class=\"hljs-comment\">// Supported Binary number range is 0 to 2^(31-1).</span>\r\n\r\n<span class=\"hljs-keyword\">package</span> conversion\r\n\r\n<span class=\"hljs-comment\">// Importing necessary package.</span>\r\n<span class=\"hljs-keyword\">import</span> (\r\n\t<span class=\"hljs-string\">&quot;errors&quot;</span>\r\n\t<span class=\"hljs-string\">&quot;regexp&quot;</span>\r\n)\r\n\r\n<span class=\"hljs-keyword\">var</span> isValid = regexp.MustCompile(<span class=\"hljs-string\">&quot;^[0-1]{1,}$&quot;</span>).MatchString\r\n\r\n<span class=\"hljs-comment\">// BinaryToDecimal() function that will take Binary number as string,</span>\r\n<span class=\"hljs-comment\">// and return it&#x27;s Decimal equivalent as integer.</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">BinaryToDecimal</span><span class=\"hljs-params\">(binary <span class=\"hljs-type\">string</span>)</span></span> (<span class=\"hljs-type\">int</span>, <span class=\"hljs-type\">error</span>) {\r\n\t<span class=\"hljs-keyword\">if</span> !isValid(binary) {\r\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>, errors.New(<span class=\"hljs-string\">&quot;not a valid binary string&quot;</span>)\r\n\t}\r\n\t<span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(binary) &gt; <span class=\"hljs-number\">32</span> {\r\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>, errors.New(<span class=\"hljs-string\">&quot;binary number must be in range 0 to 2^(31-1)&quot;</span>)\r\n\t}\r\n\t<span class=\"hljs-keyword\">var</span> result, base <span class=\"hljs-type\">int</span> = <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>\r\n\t<span class=\"hljs-keyword\">for</span> i := <span class=\"hljs-built_in\">len</span>(binary) - <span class=\"hljs-number\">1</span>; i &gt;= <span class=\"hljs-number\">0</span>; i-- {\r\n\t\t<span class=\"hljs-keyword\">if</span> binary[i] == <span class=\"hljs-string\">&#x27;1&#x27;</span> {\r\n\t\t\tresult += base\r\n\t\t}\r\n\t\tbase *= <span class=\"hljs-number\">2</span>\r\n\t}\r\n\t<span class=\"hljs-keyword\">return</span> result, <span class=\"hljs-literal\">nil</span>\r\n}\r\n"
    },
    "dart": {
      "dir": "conversions\\binary_to_decimal.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/conversions\\binary_to_decimal.dart",
      "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&quot;dart:math&quot;</span> <span class=\"hljs-keyword\">show</span> pow;\r\n\r\n<span class=\"hljs-keyword\">void</span> main() {\r\n  <span class=\"hljs-built_in\">print</span>(binary_to_decimal(<span class=\"hljs-string\">&quot;-111&quot;</span>)); <span class=\"hljs-comment\">// -7</span>\r\n  <span class=\"hljs-built_in\">print</span>(binary_to_decimal(<span class=\"hljs-string\">&quot; 101011 &quot;</span>)); <span class=\"hljs-comment\">// 43</span>\r\n  <span class=\"hljs-keyword\">try</span> {\r\n    <span class=\"hljs-built_in\">print</span>(binary_to_decimal(<span class=\"hljs-string\">&quot;1a1&quot;</span>)); <span class=\"hljs-comment\">//error</span>\r\n  } <span class=\"hljs-keyword\">catch</span> (ex) {\r\n    <span class=\"hljs-built_in\">print</span>(ex);\r\n  }\r\n}\r\n\r\n<span class=\"hljs-built_in\">int</span> binary_to_decimal(<span class=\"hljs-built_in\">String</span> bin_string) {\r\n  bin_string = bin_string.trim();\r\n  <span class=\"hljs-keyword\">if</span> (bin_string == <span class=\"hljs-keyword\">null</span> || bin_string == <span class=\"hljs-string\">&quot;&quot;</span>) {\r\n    <span class=\"hljs-keyword\">throw</span> Exception(<span class=\"hljs-string\">&quot;An empty value was passed to the function&quot;</span>);\r\n  }\r\n  <span class=\"hljs-built_in\">bool</span> is_negative = bin_string[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&quot;-&quot;</span>;\r\n  <span class=\"hljs-keyword\">if</span> (is_negative) bin_string = bin_string.substring(<span class=\"hljs-number\">1</span>);\r\n  <span class=\"hljs-built_in\">int</span> decimal_val = <span class=\"hljs-number\">0</span>;\r\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; bin_string.length; i++) {\r\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-string\">&quot;01&quot;</span>.contains(bin_string[i]) == <span class=\"hljs-keyword\">false</span>) {\r\n      <span class=\"hljs-keyword\">throw</span> Exception(<span class=\"hljs-string\">&quot;Non-binary value was passed to the function&quot;</span>);\r\n    } <span class=\"hljs-keyword\">else</span> {\r\n      decimal_val +=\r\n          pow(<span class=\"hljs-number\">2</span>, bin_string.length - i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-built_in\">int</span>.parse((bin_string[i]));\r\n    }\r\n  }\r\n  <span class=\"hljs-keyword\">return</span> is_negative ? <span class=\"hljs-number\">-1</span> * decimal_val : decimal_val;\r\n}\r\n"
    },
    "ruby": {
      "dir": "maths\\binary_to_decimal.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/maths\\binary_to_decimal.rb",
      "code": "<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># For any binary number of n digits i.e dn-1 ... d3 d2 d1 d0</span>\r\n<span class=\"hljs-comment\"># The equivalent decimal number is equal to the sum of binary digits (dn) times their power of 2 (2n):</span>\r\n<span class=\"hljs-comment\"># decimal = d0×2^0 + d1×2^1 + d2×2^2 + ...</span>\r\n<span class=\"hljs-comment\">#</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">binary_to_decimal</span><span class=\"hljs-params\">(n)</span></span>\r\n  decimal = <span class=\"hljs-number\">0</span>\r\n  base = <span class=\"hljs-number\">1</span>\r\n  <span class=\"hljs-keyword\">until</span> n.zero?\r\n    x = n % <span class=\"hljs-number\">10</span>\r\n    n /= <span class=\"hljs-number\">10</span>\r\n    decimal += x * base\r\n    base *= <span class=\"hljs-number\">2</span>\r\n  <span class=\"hljs-keyword\">end</span>\r\n  decimal\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\nputs <span class=\"hljs-string\">&#x27;Decimal value of 110011 is &#x27;</span> + binary_to_decimal(<span class=\"hljs-number\">110_011</span>).to_s\r\n<span class=\"hljs-comment\"># Decimal value of 110011 is 51</span>\r\nputs <span class=\"hljs-string\">&#x27;Decimal value of 11110 is &#x27;</span> + binary_to_decimal(<span class=\"hljs-number\">11_110</span>).to_s\r\n<span class=\"hljs-comment\"># Decimal value of 11110 is 30</span>\r\nputs <span class=\"hljs-string\">&#x27;Decimal value of 101 is &#x27;</span> + binary_to_decimal(<span class=\"hljs-number\">101</span>).to_s\r\n<span class=\"hljs-comment\"># Decimal value of 101 is 5</span>\r\n"
    },
    "php": {
      "dir": "Conversions\\BinaryToDecimal.php",
      "url": "https://github.com/TheAlgorithms/php/tree/master/Conversions\\BinaryToDecimal.php",
      "code": "<span class=\"hljs-meta\">&lt;?php</span>\r\n<span class=\"hljs-comment\">/**\r\n * This function converts the\r\n * submitted Binary Number to\r\n * Decimal Number.\r\n *\r\n * Working of Algorithm\r\n * (10) base 2\r\n * (1 * (2 ^ 1) + 0 * (2 ^ 0)) base 10\r\n * (2 + 0) base 10\r\n * 2 base 10\r\n * <span class=\"hljs-doctag\">@param</span> string $binaryNumber\r\n * <span class=\"hljs-doctag\">@return</span> int\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">binaryToDecimal</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$binaryNumber</span></span>)\r\n</span>{\r\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-title function_ invoke__\">is_numeric</span>(<span class=\"hljs-variable\">$binaryNumber</span>)) {\r\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">\\Exception</span>(<span class=\"hljs-string\">&#x27;Please pass a valid Binary Number for Converting it to a Decimal Number.&#x27;</span>);\r\n    }\r\n\r\n    <span class=\"hljs-variable\">$decimalNumber</span> = <span class=\"hljs-number\">0</span>;\r\n    <span class=\"hljs-variable\">$binaryDigits</span>  = <span class=\"hljs-title function_ invoke__\">array_reverse</span>(<span class=\"hljs-title function_ invoke__\">str_split</span>(<span class=\"hljs-variable\">$binaryNumber</span>));\r\n\r\n    <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-variable\">$binaryDigits</span> <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$index</span> =&gt; <span class=\"hljs-variable\">$digit</span>) {\r\n        <span class=\"hljs-variable\">$decimalNumber</span> += <span class=\"hljs-variable\">$digit</span> * <span class=\"hljs-title function_ invoke__\">pow</span>(<span class=\"hljs-number\">2</span>, <span class=\"hljs-variable\">$index</span>);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$decimalNumber</span>;\r\n}\r\n\r\n<span class=\"hljs-comment\">/**\r\n * This function converts the\r\n * submitted Decimal Number to\r\n * Binary Number.\r\n *\r\n * <span class=\"hljs-doctag\">@param</span> string $decimalNumber\r\n * <span class=\"hljs-doctag\">@return</span> string\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">decimalToBinary</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$decimalNumber</span></span>)\r\n</span>{\r\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-title function_ invoke__\">is_numeric</span>(<span class=\"hljs-variable\">$decimalNumber</span>)) {\r\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">\\Exception</span>(<span class=\"hljs-string\">&#x27;Please pass a valid Decimal Number for Converting it to a Binary Number.&#x27;</span>);\r\n    }\r\n\r\n    <span class=\"hljs-variable\">$binaryNumber</span> = <span class=\"hljs-string\">&#x27;&#x27;</span>;\r\n\r\n    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-variable\">$decimalNumber</span> &gt; <span class=\"hljs-number\">0</span>) {\r\n        <span class=\"hljs-variable\">$binaryNumber</span> = (<span class=\"hljs-variable\">$decimalNumber</span> % <span class=\"hljs-number\">2</span>) . <span class=\"hljs-variable\">$binaryNumber</span>;\r\n        <span class=\"hljs-variable\">$decimalNumber</span> /= <span class=\"hljs-number\">2</span>;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$binaryNumber</span>;\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Akshay Khale",
      "email": "khale.akshay@gmail.com",
      "commits": 1
    },
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 1
    },
    {
      "name": "CrisesKhaos",
      "email": "76253854+CrisesKhaos@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Abhinav Anand",
      "email": "manasgmishra@gmail.com",
      "commits": 1
    },
    {
      "name": "Taj",
      "email": "tjgurwara99@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Rak Laptudirm",
      "email": "raklaptudirm@gmail.com",
      "commits": 1
    },
    {
      "name": "Motasim",
      "email": "44056349+motasimmakki@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Nicola Masarone",
      "email": "nick67.android@gmail.com",
      "commits": 1
    },
    {
      "name": "Aditibansal2603",
      "email": "43889158+Aditibansal2603@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Kaustubh Badrike",
      "email": "kaustubh.badrike15@siesgst.ac.in",
      "commits": 1
    },
    {
      "name": "Chaitanya Raj",
      "email": "chaitanyarajdixit@gmail.com",
      "commits": 1
    },
    {
      "name": "neha-saggam",
      "email": "nehasaggam@gmail.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo Sánchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Parowicz",
      "email": "arturparowicz@gmail.com",
      "commits": 2
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 2
    },
    {
      "name": "Dhana D",
      "email": "39583785+ddhira123@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "Eric Lavault",
      "email": "39483232+lvlte@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "Priyansh-Kedia",
      "email": "52661249+Priyansh-Kedia@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "mohammadreza490",
      "email": "47437328+mohammadreza490@users.noreply.github.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}