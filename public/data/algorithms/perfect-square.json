{
  "slug": "perfect-square",
  "name": "Perfect Square",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths\\perfect_square.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths\\perfect_square.py",
      "code": "<span class=\"hljs-keyword\">import</span> math\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">perfect_square</span>(<span class=\"hljs-params\">num: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Check if a number is perfect square number or not\r\n    :param num: the number to be checked\r\n    :return: True if number is square number, otherwise False\r\n\r\n    &gt;&gt;&gt; perfect_square(9)\r\n    True\r\n    &gt;&gt;&gt; perfect_square(16)\r\n    True\r\n    &gt;&gt;&gt; perfect_square(1)\r\n    True\r\n    &gt;&gt;&gt; perfect_square(0)\r\n    True\r\n    &gt;&gt;&gt; perfect_square(10)\r\n    False\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">return</span> math.sqrt(num) * math.sqrt(num) == num\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">perfect_square_binary_search</span>(<span class=\"hljs-params\">n: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Check if a number is perfect square using binary search.\r\n    Time complexity : O(Log(n))\r\n    Space complexity: O(1)\r\n\r\n    &gt;&gt;&gt; perfect_square_binary_search(9)\r\n    True\r\n    &gt;&gt;&gt; perfect_square_binary_search(16)\r\n    True\r\n    &gt;&gt;&gt; perfect_square_binary_search(1)\r\n    True\r\n    &gt;&gt;&gt; perfect_square_binary_search(0)\r\n    True\r\n    &gt;&gt;&gt; perfect_square_binary_search(10)\r\n    False\r\n    &gt;&gt;&gt; perfect_square_binary_search(-1)\r\n    False\r\n    &gt;&gt;&gt; perfect_square_binary_search(1.1)\r\n    False\r\n    &gt;&gt;&gt; perfect_square_binary_search(&quot;a&quot;)\r\n    Traceback (most recent call last):\r\n        ...\r\n    TypeError: &#x27;&lt;=&#x27; not supported between instances of &#x27;int&#x27; and &#x27;str&#x27;\r\n    &gt;&gt;&gt; perfect_square_binary_search(None)\r\n    Traceback (most recent call last):\r\n        ...\r\n    TypeError: &#x27;&lt;=&#x27; not supported between instances of &#x27;int&#x27; and &#x27;NoneType&#x27;\r\n    &gt;&gt;&gt; perfect_square_binary_search([])\r\n    Traceback (most recent call last):\r\n        ...\r\n    TypeError: &#x27;&lt;=&#x27; not supported between instances of &#x27;int&#x27; and &#x27;list&#x27;\r\n    &quot;&quot;&quot;</span>\r\n    left = <span class=\"hljs-number\">0</span>\r\n    right = n\r\n    <span class=\"hljs-keyword\">while</span> left &lt;= right:\r\n        mid = (left + right) // <span class=\"hljs-number\">2</span>\r\n        <span class=\"hljs-keyword\">if</span> mid**<span class=\"hljs-number\">2</span> == n:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\r\n        <span class=\"hljs-keyword\">elif</span> mid**<span class=\"hljs-number\">2</span> &gt; n:\r\n            right = mid - <span class=\"hljs-number\">1</span>\r\n        <span class=\"hljs-keyword\">else</span>:\r\n            left = mid + <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n"
    },
    "javascript": {
      "dir": "Maths\\test\\PerfectSquare.test.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths\\test\\PerfectSquare.test.js",
      "code": "<span class=\"hljs-keyword\">import</span> { perfectSquare } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../PerfectSquare&#x27;</span>\r\n\r\n<span class=\"hljs-title function_\">describe</span>(<span class=\"hljs-string\">&#x27;PerfectSquare&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return true for a perfect cube&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">perfectSquare</span>(<span class=\"hljs-number\">16</span>)).<span class=\"hljs-title function_\">toBeTruthy</span>()\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return false for a non perfect cube&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">perfectSquare</span>(<span class=\"hljs-number\">10</span>)).<span class=\"hljs-title function_\">toBeFalsy</span>()\r\n  })\r\n})\r\n"
    },
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\maths\\PerfectSquare.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\maths\\PerfectSquare.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.maths;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * https://en.wikipedia.org/wiki/Perfect_square\r\n */</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">PerfectSquare</span> {\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        <span class=\"hljs-keyword\">assert</span> !isPerfectSquare(-<span class=\"hljs-number\">1</span>);\r\n        <span class=\"hljs-keyword\">assert</span> !isPerfectSquare(<span class=\"hljs-number\">3</span>);\r\n        <span class=\"hljs-keyword\">assert</span> !isPerfectSquare(<span class=\"hljs-number\">5</span>);\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isPerfectSquare</span><span class=\"hljs-params\">(<span class=\"hljs-number\">9</span>)</span>;\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">isPerfectSquare</span><span class=\"hljs-params\">(<span class=\"hljs-number\">100</span>)</span>;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * Check if a number is perfect square number\r\n     *\r\n     * <span class=\"hljs-doctag\">@param</span> number the number to be checked\r\n     * <span class=\"hljs-doctag\">@return</span> &lt;tt&gt;true&lt;/tt&gt; if {<span class=\"hljs-doctag\">@code</span> number} is perfect square, otherwise\r\n     * &lt;tt&gt;false&lt;/tt&gt;\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">isPerfectSquare</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> number)</span> {\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">sqrt</span> <span class=\"hljs-operator\">=</span> (<span class=\"hljs-type\">int</span>) Math.sqrt(number);\r\n        <span class=\"hljs-keyword\">return</span> sqrt * sqrt == number;\r\n    }\r\n}\r\n"
    },
    "r": {
      "dir": "Mathematics\\PerfectSquare.R",
      "url": "https://github.com/TheAlgorithms/r/tree/master/Mathematics\\PerfectSquare.R",
      "code": "perfectSquare <span class=\"hljs-operator\">&lt;-</span> <span class=\"hljs-keyword\">function</span><span class=\"hljs-punctuation\">(</span>x<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">{</span>\r\n    <span class=\"hljs-built_in\">return</span><span class=\"hljs-punctuation\">(</span><span class=\"hljs-built_in\">floor</span><span class=\"hljs-punctuation\">(</span><span class=\"hljs-built_in\">sqrt</span><span class=\"hljs-punctuation\">(</span>x<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">)</span> <span class=\"hljs-operator\">==</span> <span class=\"hljs-built_in\">sqrt</span><span class=\"hljs-punctuation\">(</span>x<span class=\"hljs-punctuation\">)</span><span class=\"hljs-punctuation\">)</span>\r\n<span class=\"hljs-punctuation\">}</span>\r\n\r\nset.seed<span class=\"hljs-punctuation\">(</span><span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">)</span>\r\ninputs <span class=\"hljs-operator\">&lt;-</span> sample<span class=\"hljs-punctuation\">(</span><span class=\"hljs-number\">1</span><span class=\"hljs-operator\">:</span><span class=\"hljs-number\">100</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-number\">10</span><span class=\"hljs-punctuation\">)</span>\r\nperfectSquare<span class=\"hljs-punctuation\">(</span>inputs<span class=\"hljs-punctuation\">)</span>"
    },
    "php": {
      "dir": "Maths\\PerfectSquare.php",
      "url": "https://github.com/TheAlgorithms/php/tree/master/Maths\\PerfectSquare.php",
      "code": "<span class=\"hljs-meta\">&lt;?php</span>\r\n<span class=\"hljs-comment\">/**\r\n * This function check whether\r\n * the provided number is a\r\n * perfect square or not.\r\n *\r\n * <span class=\"hljs-doctag\">@param</span> Decimal $number A decimal input\r\n * <span class=\"hljs-doctag\">@return</span> boolean whether the number is perfect square or not\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">is_perfect_square</span>(<span class=\"hljs-params\"><span class=\"hljs-variable\">$number</span></span>)\r\n</span>{\r\n    <span class=\"hljs-variable\">$root</span> = (<span class=\"hljs-keyword\">int</span>) <span class=\"hljs-title function_ invoke__\">sqrt</span>(<span class=\"hljs-variable\">$number</span>);\r\n    <span class=\"hljs-keyword\">return</span> ((<span class=\"hljs-variable\">$root</span> * <span class=\"hljs-variable\">$root</span>) === <span class=\"hljs-variable\">$number</span>); <span class=\"hljs-comment\">// If number&#x27;s square root is an integer then it&#x27;s a perfect square else not</span>\r\n}\r\n"
    },
    "julia": {
      "dir": "src\\math\\perfect_square.jl",
      "url": "https://github.com/TheAlgorithms/julia/tree/master/src\\math\\perfect_square.jl",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nperfect_square(number)\r\n\r\nCheck if a number is a perfect square or not.\r\n\r\n# Example\r\n```jula\r\nperfect_square(9)   # returns True\r\nperfect_square(16)  # returns True\r\nperfect_square(1)   # returns True\r\nperfect_square(0)   # returns True\r\nperfect_square(10)  # returns False\r\nperfect_square(-9)  # returns False\r\n```\r\n\r\nContributed By:- [Ashwani Rathee](https://github.com/ashwani-rathee) and [Rratic](https://github.com/Rratic)\r\n&quot;&quot;&quot;</span>\r\n<span class=\"hljs-keyword\">function</span> perfect_square(number::N)<span class=\"hljs-keyword\">where</span> N&lt;:<span class=\"hljs-built_in\">Integer</span>\r\n    number&lt;<span class=\"hljs-number\">0</span>&amp;&amp;<span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>\r\n    val=isqrt(number)\r\n    <span class=\"hljs-keyword\">return</span> val*val == number\r\n<span class=\"hljs-keyword\">end</span>\r\n"
    }
  },
  "contributors": [
    {
      "name": "Alex Garland",
      "email": "alex@numinar.com",
      "commits": 1
    },
    {
      "name": "simolab99",
      "email": "68537129+simolab99@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Rratic",
      "email": "Rratic@163.com",
      "commits": 1
    },
    {
      "name": "Ashwani Rathee",
      "email": "ab669522@gmail.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo Sánchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Iheb Haboubi",
      "email": "iheb.haboubi56@gmail.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    },
    {
      "name": "Akshay Khale",
      "email": "khaleakshay@gmail.com",
      "commits": 2
    },
    {
      "name": "Erez Shomron",
      "email": "48328872+eshom@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 2
    },
    {
      "name": "Ephraim Atta-Duncan",
      "email": "55143799+dephraiim@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}