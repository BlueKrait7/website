{
  "slug": "kadane",
  "name": "Kadane",
  "categories": [
    "dynamicprogramming"
  ],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "dynamic_programming\\kadane.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/dynamic_programming\\kadane.cpp",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;climits&gt;</span></span>\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">maxSubArraySum</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a[], <span class=\"hljs-type\">int</span> size)</span> </span>{\r\n    <span class=\"hljs-type\">int</span> max_so_far = INT_MIN, max_ending_here = <span class=\"hljs-number\">0</span>;\r\n\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; size; i++) {\r\n        max_ending_here = max_ending_here + a[i];\r\n        <span class=\"hljs-keyword\">if</span> (max_so_far &lt; max_ending_here)\r\n            max_so_far = max_ending_here;\r\n\r\n        <span class=\"hljs-keyword\">if</span> (max_ending_here &lt; <span class=\"hljs-number\">0</span>)\r\n            max_ending_here = <span class=\"hljs-number\">0</span>;\r\n    }\r\n    <span class=\"hljs-keyword\">return</span> max_so_far;\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-type\">int</span> n, i;\r\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Enter the number of elements \\n&quot;</span>;\r\n    std::cin &gt;&gt; n;\r\n    <span class=\"hljs-type\">int</span> a[n];  <span class=\"hljs-comment\">// NOLINT</span>\r\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; n; i++) {\r\n        std::cin &gt;&gt; a[i];\r\n    }\r\n    <span class=\"hljs-type\">int</span> max_sum = <span class=\"hljs-built_in\">maxSubArraySum</span>(a, n);\r\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Maximum contiguous sum is &quot;</span> &lt;&lt; max_sum;\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Aditya Jain",
      "email": "34396222+adityajain1677@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}