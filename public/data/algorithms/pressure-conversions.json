{
  "slug": "pressure-conversions",
  "name": "Pressure Conversions",
  "categories": [
    "conversions"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "conversions\\pressure_conversions.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/conversions\\pressure_conversions.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nConversion of pressure units.\r\nAvailable Units:- Pascal,Bar,Kilopascal,Megapascal,psi(pound per square inch),\r\ninHg(in mercury column),torr,atm\r\nUSAGE :\r\n-&gt; Import this file into their respective project.\r\n-&gt; Use the function pressure_conversion() for conversion of pressure units.\r\n-&gt; Parameters :\r\n    -&gt; value : The number of from units you want to convert\r\n    -&gt; from_type : From which type you want to convert\r\n    -&gt; to_type : To which type you want to convert\r\nREFERENCES :\r\n-&gt; Wikipedia reference: https://en.wikipedia.org/wiki/Pascal_(unit)\r\n-&gt; Wikipedia reference: https://en.wikipedia.org/wiki/Pound_per_square_inch\r\n-&gt; Wikipedia reference: https://en.wikipedia.org/wiki/Inch_of_mercury\r\n-&gt; Wikipedia reference: https://en.wikipedia.org/wiki/Torr\r\n-&gt; https://en.wikipedia.org/wiki/Standard_atmosphere_(unit)\r\n-&gt; https://msestudent.com/what-are-the-units-of-pressure/\r\n-&gt; https://www.unitconverters.net/pressure-converter.html\r\n&quot;&quot;&quot;</span>\r\n\r\n<span class=\"hljs-keyword\">from</span> collections <span class=\"hljs-keyword\">import</span> namedtuple\r\n\r\nfrom_to = namedtuple(<span class=\"hljs-string\">&quot;from_to&quot;</span>, <span class=\"hljs-string\">&quot;from_ to&quot;</span>)\r\n\r\nPRESSURE_CONVERSION = {\r\n    <span class=\"hljs-string\">&quot;atm&quot;</span>: from_to(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>),\r\n    <span class=\"hljs-string\">&quot;pascal&quot;</span>: from_to(<span class=\"hljs-number\">0.0000098</span>, <span class=\"hljs-number\">101325</span>),\r\n    <span class=\"hljs-string\">&quot;bar&quot;</span>: from_to(<span class=\"hljs-number\">0.986923</span>, <span class=\"hljs-number\">1.01325</span>),\r\n    <span class=\"hljs-string\">&quot;kilopascal&quot;</span>: from_to(<span class=\"hljs-number\">0.00986923</span>, <span class=\"hljs-number\">101.325</span>),\r\n    <span class=\"hljs-string\">&quot;megapascal&quot;</span>: from_to(<span class=\"hljs-number\">9.86923</span>, <span class=\"hljs-number\">0.101325</span>),\r\n    <span class=\"hljs-string\">&quot;psi&quot;</span>: from_to(<span class=\"hljs-number\">0.068046</span>, <span class=\"hljs-number\">14.6959</span>),\r\n    <span class=\"hljs-string\">&quot;inHg&quot;</span>: from_to(<span class=\"hljs-number\">0.0334211</span>, <span class=\"hljs-number\">29.9213</span>),\r\n    <span class=\"hljs-string\">&quot;torr&quot;</span>: from_to(<span class=\"hljs-number\">0.00131579</span>, <span class=\"hljs-number\">760</span>),\r\n}\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">pressure_conversion</span>(<span class=\"hljs-params\">value: <span class=\"hljs-built_in\">float</span>, from_type: <span class=\"hljs-built_in\">str</span>, to_type: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Conversion between pressure units.\r\n    &gt;&gt;&gt; pressure_conversion(4, &quot;atm&quot;, &quot;pascal&quot;)\r\n    405300\r\n    &gt;&gt;&gt; pressure_conversion(1, &quot;pascal&quot;, &quot;psi&quot;)\r\n    0.00014401981999999998\r\n    &gt;&gt;&gt; pressure_conversion(1, &quot;bar&quot;, &quot;atm&quot;)\r\n    0.986923\r\n    &gt;&gt;&gt; pressure_conversion(3, &quot;kilopascal&quot;, &quot;bar&quot;)\r\n    0.029999991892499998\r\n    &gt;&gt;&gt; pressure_conversion(2, &quot;megapascal&quot;, &quot;psi&quot;)\r\n    290.074434314\r\n    &gt;&gt;&gt; pressure_conversion(4, &quot;psi&quot;, &quot;torr&quot;)\r\n    206.85984\r\n    &gt;&gt;&gt; pressure_conversion(1, &quot;inHg&quot;, &quot;atm&quot;)\r\n    0.0334211\r\n    &gt;&gt;&gt; pressure_conversion(1, &quot;torr&quot;, &quot;psi&quot;)\r\n    0.019336718261000002\r\n    &gt;&gt;&gt; pressure_conversion(4, &quot;wrongUnit&quot;, &quot;atm&quot;)\r\n    Traceback (most recent call last):\r\n      File &quot;/usr/lib/python3.8/doctest.py&quot;, line 1336, in __run\r\n        exec(compile(example.source, filename, &quot;single&quot;,\r\n      File &quot;&lt;doctest __main__.pressure_conversion[8]&gt;&quot;, line 1, in &lt;module&gt;\r\n        pressure_conversion(4, &quot;wrongUnit&quot;, &quot;atm&quot;)\r\n      File &quot;&lt;string&gt;&quot;, line 67, in pressure_conversion\r\n    ValueError: Invalid &#x27;from_type&#x27; value: &#x27;wrongUnit&#x27;  Supported values are:\r\n    atm, pascal, bar, kilopascal, megapascal, psi, inHg, torr\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> from_type <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> PRESSURE_CONVERSION:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(\r\n            <span class=\"hljs-string\">f&quot;Invalid &#x27;from_type&#x27; value: <span class=\"hljs-subst\">{from_type!r}</span>  Supported values are:\\n&quot;</span>\r\n            + <span class=\"hljs-string\">&quot;, &quot;</span>.join(PRESSURE_CONVERSION)\r\n        )\r\n    <span class=\"hljs-keyword\">if</span> to_type <span class=\"hljs-keyword\">not</span> <span class=\"hljs-keyword\">in</span> PRESSURE_CONVERSION:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(\r\n            <span class=\"hljs-string\">f&quot;Invalid &#x27;to_type&#x27; value: <span class=\"hljs-subst\">{to_type!r}</span>.  Supported values are:\\n&quot;</span>\r\n            + <span class=\"hljs-string\">&quot;, &quot;</span>.join(PRESSURE_CONVERSION)\r\n        )\r\n    <span class=\"hljs-keyword\">return</span> (\r\n        value * PRESSURE_CONVERSION[from_type].from_ * PRESSURE_CONVERSION[to_type].to\r\n    )\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n"
    }
  },
  "contributors": [
    {
      "name": "Sabari Ganesh",
      "email": "64348740+SabariGanesh-K@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}