{
  "slug": "heap-element",
  "name": "Heap Element",
  "categories": [
    "datastructures",
    "heaps"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\datastructures\\heaps\\HeapElement.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\datastructures\\heaps\\HeapElement.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.datastructures.heaps;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * Class for heap elements.&lt;br&gt;\r\n *\r\n * &lt;p&gt;\r\n * A heap element contains two attributes: a key which will be used to build the\r\n * tree (int or double, either primitive type or object) and any kind of\r\n * IMMUTABLE object the user sees fit to carry any information he/she likes. Be\r\n * aware that the use of a mutable object might jeopardize the integrity of this\r\n * information.\r\n *\r\n * <span class=\"hljs-doctag\">@author</span> Nicolas Renard\r\n */</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">HeapElement</span> {\r\n\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> key;\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> Object additionalInfo;\r\n\r\n    <span class=\"hljs-comment\">// Constructors</span>\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> key : a number of primitive type &#x27;double&#x27;\r\n     * <span class=\"hljs-doctag\">@param</span> info : any kind of IMMUTABLE object. May be null, since the\r\n     * purpose is only to carry additional information of use for the user\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">HeapElement</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span> key, Object info)</span> {\r\n        <span class=\"hljs-built_in\">this</span>.key = key;\r\n        <span class=\"hljs-built_in\">this</span>.additionalInfo = info;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> key : a number of primitive type &#x27;int&#x27;\r\n     * <span class=\"hljs-doctag\">@param</span> info : any kind of IMMUTABLE object. May be null, since the\r\n     * purpose is only to carry additional information of use for the user\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">HeapElement</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> key, Object info)</span> {\r\n        <span class=\"hljs-built_in\">this</span>.key = key;\r\n        <span class=\"hljs-built_in\">this</span>.additionalInfo = info;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> key : a number of object type &#x27;Integer&#x27;\r\n     * <span class=\"hljs-doctag\">@param</span> info : any kind of IMMUTABLE object. May be null, since the\r\n     * purpose is only to carry additional information of use for the user\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">HeapElement</span><span class=\"hljs-params\">(Integer key, Object info)</span> {\r\n        <span class=\"hljs-built_in\">this</span>.key = key;\r\n        <span class=\"hljs-built_in\">this</span>.additionalInfo = info;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> key : a number of object type &#x27;Double&#x27;\r\n     * <span class=\"hljs-doctag\">@param</span> info : any kind of IMMUTABLE object. May be null, since the\r\n     * purpose is only to carry additional information of use for the user\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">HeapElement</span><span class=\"hljs-params\">(Double key, Object info)</span> {\r\n        <span class=\"hljs-built_in\">this</span>.key = key;\r\n        <span class=\"hljs-built_in\">this</span>.additionalInfo = info;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> key : a number of primitive type &#x27;double&#x27;\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">HeapElement</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span> key)</span> {\r\n        <span class=\"hljs-built_in\">this</span>.key = key;\r\n        <span class=\"hljs-built_in\">this</span>.additionalInfo = <span class=\"hljs-literal\">null</span>;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> key : a number of primitive type &#x27;int&#x27;\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">HeapElement</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> key)</span> {\r\n        <span class=\"hljs-built_in\">this</span>.key = key;\r\n        <span class=\"hljs-built_in\">this</span>.additionalInfo = <span class=\"hljs-literal\">null</span>;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> key : a number of object type &#x27;Integer&#x27;\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">HeapElement</span><span class=\"hljs-params\">(Integer key)</span> {\r\n        <span class=\"hljs-built_in\">this</span>.key = key;\r\n        <span class=\"hljs-built_in\">this</span>.additionalInfo = <span class=\"hljs-literal\">null</span>;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> key : a number of object type &#x27;Double&#x27;\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">HeapElement</span><span class=\"hljs-params\">(Double key)</span> {\r\n        <span class=\"hljs-built_in\">this</span>.key = key;\r\n        <span class=\"hljs-built_in\">this</span>.additionalInfo = <span class=\"hljs-literal\">null</span>;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">// Getters</span>\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@return</span> the object containing the additional info provided by the user.\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> Object <span class=\"hljs-title function_\">getInfo</span><span class=\"hljs-params\">()</span> {\r\n        <span class=\"hljs-keyword\">return</span> additionalInfo;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@return</span> the key value of the element\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">getKey</span><span class=\"hljs-params\">()</span> {\r\n        <span class=\"hljs-keyword\">return</span> key;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">// Overridden object methods</span>\r\n    <span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title function_\">toString</span><span class=\"hljs-params\">()</span> {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;Key: &quot;</span> + key + <span class=\"hljs-string\">&quot; - &quot;</span> + additionalInfo.toString();\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> otherHeapElement\r\n     * <span class=\"hljs-doctag\">@return</span> true if the keys on both elements are identical and the\r\n     * additional info objects are identical.\r\n     */</span>\r\n    <span class=\"hljs-meta\">@Override</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">equals</span><span class=\"hljs-params\">(Object o)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (o != <span class=\"hljs-literal\">null</span>) {\r\n            <span class=\"hljs-keyword\">if</span> (!(o <span class=\"hljs-keyword\">instanceof</span> HeapElement)) {\r\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\r\n            }\r\n            <span class=\"hljs-type\">HeapElement</span> <span class=\"hljs-variable\">otherHeapElement</span> <span class=\"hljs-operator\">=</span> (HeapElement) o;\r\n            <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-built_in\">this</span>.key == otherHeapElement.key)\r\n                    &amp;&amp; (<span class=\"hljs-built_in\">this</span>.additionalInfo.equals(otherHeapElement.additionalInfo));\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\r\n    }\r\n\r\n    <span class=\"hljs-meta\">@Override</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">hashCode</span><span class=\"hljs-params\">()</span> {\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">result</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\r\n        result = <span class=\"hljs-number\">31</span> * result + (<span class=\"hljs-type\">int</span>) key;\r\n        result = <span class=\"hljs-number\">31</span> * result + (additionalInfo != <span class=\"hljs-literal\">null</span> ? additionalInfo.hashCode() : <span class=\"hljs-number\">0</span>);\r\n        <span class=\"hljs-keyword\">return</span> result;\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Maria Lungeanu",
      "email": "Maria.Lungeanu@anritsu.com",
      "commits": 1
    },
    {
      "name": "khalil2535",
      "email": "khalil2535@localhost",
      "commits": 1
    },
    {
      "name": "Nicolas Renard",
      "email": "nicolas.renard.76@outlook.fr",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}