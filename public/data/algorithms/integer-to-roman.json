{
  "slug": "integer-to-roman",
  "name": "Integer To Roman",
  "categories": [
    "conversions"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\conversions\\IntegerToRoman.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\conversions\\IntegerToRoman.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.conversions;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * Converting Integers into Roman Numerals\r\n *\r\n * &lt;p&gt;\r\n * (&#x27;I&#x27;, 1); (&#x27;IV&#x27;,4); (&#x27;V&#x27;, 5); (&#x27;IX&#x27;,9); (&#x27;X&#x27;, 10); (&#x27;XL&#x27;,40); (&#x27;L&#x27;, 50);\r\n * (&#x27;XC&#x27;,90); (&#x27;C&#x27;, 100); (&#x27;D&#x27;, 500); (&#x27;M&#x27;, 1000);\r\n */</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">IntegerToRoman</span> {\r\n\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span>[] allArabianRomanNumbers\r\n            = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">1000</span>, <span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">500</span>, <span class=\"hljs-number\">400</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">1</span>};\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String[] allRomanNumbers\r\n            = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">String</span>[]{<span class=\"hljs-string\">&quot;M&quot;</span>, <span class=\"hljs-string\">&quot;CM&quot;</span>, <span class=\"hljs-string\">&quot;D&quot;</span>, <span class=\"hljs-string\">&quot;CD&quot;</span>, <span class=\"hljs-string\">&quot;C&quot;</span>, <span class=\"hljs-string\">&quot;XC&quot;</span>, <span class=\"hljs-string\">&quot;L&quot;</span>, <span class=\"hljs-string\">&quot;XL&quot;</span>, <span class=\"hljs-string\">&quot;X&quot;</span>, <span class=\"hljs-string\">&quot;IX&quot;</span>, <span class=\"hljs-string\">&quot;V&quot;</span>, <span class=\"hljs-string\">&quot;IV&quot;</span>, <span class=\"hljs-string\">&quot;I&quot;</span>};\r\n\r\n    <span class=\"hljs-comment\">// Value must be &gt; 0</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> String <span class=\"hljs-title function_\">integerToRoman</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> num)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (num &lt;= <span class=\"hljs-number\">0</span>) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>;\r\n        }\r\n\r\n        <span class=\"hljs-type\">StringBuilder</span> <span class=\"hljs-variable\">builder</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">StringBuilder</span>();\r\n\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">a</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; a &lt; allArabianRomanNumbers.length; a++) {\r\n            <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">times</span> <span class=\"hljs-operator\">=</span> num / allArabianRomanNumbers[a];\r\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">b</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; b &lt; times; b++) {\r\n                builder.append(allRomanNumbers[a]);\r\n            }\r\n\r\n            num -= times * allArabianRomanNumbers[a];\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">return</span> builder.toString();\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        System.out.println(IntegerToRoman.integerToRoman(<span class=\"hljs-number\">2131</span>));\r\n    }\r\n}\r\n"
    },
    "go": {
      "dir": "conversion\\integertoroman.go",
      "url": "https://github.com/TheAlgorithms/go/tree/master/conversion\\integertoroman.go",
      "code": "<span class=\"hljs-keyword\">package</span> conversion\r\n\r\n<span class=\"hljs-keyword\">import</span> (\r\n\t<span class=\"hljs-string\">&quot;errors&quot;</span>\r\n)\r\n\r\n<span class=\"hljs-keyword\">var</span> (\r\n\t<span class=\"hljs-comment\">// lookup arrays used for converting from an int to a roman numeral extremely quickly.</span>\r\n\tr0 = []<span class=\"hljs-type\">string</span>{<span class=\"hljs-string\">&quot;&quot;</span>, <span class=\"hljs-string\">&quot;I&quot;</span>, <span class=\"hljs-string\">&quot;II&quot;</span>, <span class=\"hljs-string\">&quot;III&quot;</span>, <span class=\"hljs-string\">&quot;IV&quot;</span>, <span class=\"hljs-string\">&quot;V&quot;</span>, <span class=\"hljs-string\">&quot;VI&quot;</span>, <span class=\"hljs-string\">&quot;VII&quot;</span>, <span class=\"hljs-string\">&quot;VIII&quot;</span>, <span class=\"hljs-string\">&quot;IX&quot;</span>} <span class=\"hljs-comment\">// 1 - 9</span>\r\n\tr1 = []<span class=\"hljs-type\">string</span>{<span class=\"hljs-string\">&quot;&quot;</span>, <span class=\"hljs-string\">&quot;X&quot;</span>, <span class=\"hljs-string\">&quot;XX&quot;</span>, <span class=\"hljs-string\">&quot;XXX&quot;</span>, <span class=\"hljs-string\">&quot;XL&quot;</span>, <span class=\"hljs-string\">&quot;L&quot;</span>, <span class=\"hljs-string\">&quot;LX&quot;</span>, <span class=\"hljs-string\">&quot;LXX&quot;</span>, <span class=\"hljs-string\">&quot;LXXX&quot;</span>, <span class=\"hljs-string\">&quot;XC&quot;</span>} <span class=\"hljs-comment\">// 10 - 90</span>\r\n\tr2 = []<span class=\"hljs-type\">string</span>{<span class=\"hljs-string\">&quot;&quot;</span>, <span class=\"hljs-string\">&quot;C&quot;</span>, <span class=\"hljs-string\">&quot;CC&quot;</span>, <span class=\"hljs-string\">&quot;CCC&quot;</span>, <span class=\"hljs-string\">&quot;CD&quot;</span>, <span class=\"hljs-string\">&quot;D&quot;</span>, <span class=\"hljs-string\">&quot;DC&quot;</span>, <span class=\"hljs-string\">&quot;DCC&quot;</span>, <span class=\"hljs-string\">&quot;DCCC&quot;</span>, <span class=\"hljs-string\">&quot;CM&quot;</span>} <span class=\"hljs-comment\">// 100 - 900</span>\r\n\tr3 = []<span class=\"hljs-type\">string</span>{<span class=\"hljs-string\">&quot;&quot;</span>, <span class=\"hljs-string\">&quot;M&quot;</span>, <span class=\"hljs-string\">&quot;MM&quot;</span>, <span class=\"hljs-string\">&quot;MMM&quot;</span>}                                       <span class=\"hljs-comment\">// 1,000 - 3,000</span>\r\n)\r\n\r\n<span class=\"hljs-comment\">// IntToRoman converts an integer value to a roman numeral string. An error is</span>\r\n<span class=\"hljs-comment\">// returned if the integer is not between 1 and 3999.</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">IntToRoman</span><span class=\"hljs-params\">(n <span class=\"hljs-type\">int</span>)</span></span> (<span class=\"hljs-type\">string</span>, <span class=\"hljs-type\">error</span>) {\r\n\t<span class=\"hljs-keyword\">if</span> n &lt; <span class=\"hljs-number\">1</span> || n &gt; <span class=\"hljs-number\">3999</span> {\r\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>, errors.New(<span class=\"hljs-string\">&quot;integer must be between 1 and 3999&quot;</span>)\r\n\t}\r\n\t<span class=\"hljs-comment\">// Concatenate strings for each of 4 lookup array categories.</span>\r\n\t<span class=\"hljs-comment\">//</span>\r\n\t<span class=\"hljs-comment\">// Key behavior to note here is how math with integers is handled. Values are floored to the</span>\r\n\t<span class=\"hljs-comment\">// nearest int, not rounded up. For example, 26/10 = 2 even though the actual result is 2.6.</span>\r\n\t<span class=\"hljs-comment\">//</span>\r\n\t<span class=\"hljs-comment\">// For example, lets use an input value of 126:</span>\r\n\t<span class=\"hljs-comment\">// `r3[n%1e4/1e3]` --&gt; 126 % 10_000 = 126 --&gt; 126 / 1_000 = 0.126 (0 as int) --&gt; r3[0] = &quot;&quot;</span>\r\n\t<span class=\"hljs-comment\">// `r2[n%1e3/1e2]` --&gt; 126 % 1_000 = 126 --&gt; 126 / 100 = 1.26 (1 as int) --&gt; r2[1] = &quot;C&quot;</span>\r\n\t<span class=\"hljs-comment\">// `r1[n%100/10]` --&gt; 126 % 100 = 26 --&gt; 26 / 10 = 2.6 (2 as int) --&gt; r1[2] = &quot;XX&quot;</span>\r\n\t<span class=\"hljs-comment\">// `r0[n%10]` --&gt; 126 % 10 = 6 --&gt; r0[6] = &quot;VI&quot;</span>\r\n\t<span class=\"hljs-comment\">// FINAL --&gt; &quot;&quot; + &quot;C&quot; + &quot;XX&quot; + &quot;VI&quot; = &quot;CXXVI&quot;</span>\r\n\t<span class=\"hljs-comment\">//</span>\r\n\t<span class=\"hljs-comment\">// This is efficient in Go. The 4 operands are evaluated,</span>\r\n\t<span class=\"hljs-comment\">// then a single allocation is made of the exact size needed for the result.</span>\r\n\t<span class=\"hljs-keyword\">return</span> r3[n%<span class=\"hljs-number\">1e4</span>/<span class=\"hljs-number\">1e3</span>] + r2[n%<span class=\"hljs-number\">1e3</span>/<span class=\"hljs-number\">1e2</span>] + r1[n%<span class=\"hljs-number\">100</span>/<span class=\"hljs-number\">10</span>] + r0[n%<span class=\"hljs-number\">10</span>], <span class=\"hljs-literal\">nil</span>\r\n}\r\n"
    },
    "dart": {
      "dir": "conversions\\Integer_To_Roman.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/conversions\\Integer_To_Roman.dart",
      "code": "<span class=\"hljs-comment\">///<span class=\"language-markdown\">Author: Shawn</span></span>\r\n<span class=\"hljs-comment\">///<span class=\"language-markdown\">Email: stepfencurryxiao@gmail.com</span></span>\r\n\r\n<span class=\"hljs-comment\">/*\r\n * \r\n * Concerting Integers into Roman Numerals\r\n * \r\n */</span>\r\n\r\n<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; ArabianRomanNumbers = [\r\n  <span class=\"hljs-number\">1000</span>,\r\n  <span class=\"hljs-number\">900</span>,\r\n  <span class=\"hljs-number\">500</span>,\r\n  <span class=\"hljs-number\">400</span>,\r\n  <span class=\"hljs-number\">100</span>,\r\n  <span class=\"hljs-number\">90</span>,\r\n  <span class=\"hljs-number\">50</span>,\r\n  <span class=\"hljs-number\">40</span>,\r\n  <span class=\"hljs-number\">10</span>,\r\n  <span class=\"hljs-number\">9</span>,\r\n  <span class=\"hljs-number\">5</span>,\r\n  <span class=\"hljs-number\">4</span>,\r\n  <span class=\"hljs-number\">1</span>\r\n];\r\n\r\n<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">String</span>&gt; RomanNumbers = [\r\n  <span class=\"hljs-string\">&quot;M&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;CM&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;D&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;CD&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;C&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;XC&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;L&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;XL&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;X&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;IX&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;V&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;IV&quot;</span>,\r\n  <span class=\"hljs-string\">&quot;I&quot;</span>\r\n];\r\n\r\n<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">String</span>&gt; integer_to_roman(<span class=\"hljs-built_in\">int</span> <span class=\"hljs-built_in\">num</span>) {\r\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">num</span> &lt; <span class=\"hljs-number\">0</span>) {\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">null</span>;\r\n  }\r\n\r\n  <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">String</span>&gt; result = [];\r\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; ArabianRomanNumbers.length; i++) {\r\n    <span class=\"hljs-built_in\">int</span> times = <span class=\"hljs-built_in\">num</span> ~/ ArabianRomanNumbers[i];\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; times; j++) {\r\n      <span class=\"hljs-built_in\">print</span>(RomanNumbers[i]);\r\n    }\r\n    <span class=\"hljs-built_in\">num</span> -= times * ArabianRomanNumbers[i];\r\n  }\r\n\r\n  <span class=\"hljs-keyword\">return</span> result;\r\n}\r\n\r\n<span class=\"hljs-built_in\">int</span> main() {\r\n  <span class=\"hljs-comment\">/* IV */</span>\r\n  integer_to_roman(<span class=\"hljs-number\">4</span>);\r\n  <span class=\"hljs-comment\">/* II */</span>\r\n  integer_to_roman(<span class=\"hljs-number\">2</span>);\r\n  <span class=\"hljs-comment\">/* M */</span>\r\n  integer_to_roman(<span class=\"hljs-number\">1000</span>);\r\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Stepfen Shawn",
      "email": "m18824909883@163.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Branden",
      "email": "37084158+brandenc40@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo Sánchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Manan-Rathi",
      "email": "76519771+Manan-Rathi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Arogon1",
      "email": "40372809+Arogon1@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "xemjas",
      "email": "51793139+xemjas@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}