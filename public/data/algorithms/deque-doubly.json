{
  "slug": "deque-doubly",
  "name": "Deque Doubly",
  "categories": [
    "datastructures",
    "linkedlist"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "data_structures\\linked_list\\deque_doubly.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/data_structures\\linked_list\\deque_doubly.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nImplementing Deque using DoublyLinkedList ...\r\nOperations:\r\n    1. insertion in the front -&gt; O(1)\r\n    2. insertion in the end -&gt; O(1)\r\n    3. remove from the front -&gt; O(1)\r\n    4. remove from the end -&gt; O(1)\r\n&quot;&quot;&quot;</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">_DoublyLinkedBase</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;A Private class (to be inherited)&quot;&quot;&quot;</span>\r\n\r\n    <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">_Node</span>:\r\n        __slots__ = <span class=\"hljs-string\">&quot;_prev&quot;</span>, <span class=\"hljs-string\">&quot;_data&quot;</span>, <span class=\"hljs-string\">&quot;_next&quot;</span>\r\n\r\n        <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self, link_p, element, link_n</span>):\r\n            self._prev = link_p\r\n            self._data = element\r\n            self._<span class=\"hljs-built_in\">next</span> = link_n\r\n\r\n        <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">has_next_and_prev</span>(<span class=\"hljs-params\">self</span>):\r\n            <span class=\"hljs-keyword\">return</span> (\r\n                <span class=\"hljs-string\">f&quot; Prev -&gt; <span class=\"hljs-subst\">{self._prev <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">None</span>}</span>, Next -&gt; <span class=\"hljs-subst\">{self._<span class=\"hljs-built_in\">next</span> <span class=\"hljs-keyword\">is</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-literal\">None</span>}</span>&quot;</span>\r\n            )\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self</span>):\r\n        self._header = self._Node(<span class=\"hljs-literal\">None</span>, <span class=\"hljs-literal\">None</span>, <span class=\"hljs-literal\">None</span>)\r\n        self._trailer = self._Node(<span class=\"hljs-literal\">None</span>, <span class=\"hljs-literal\">None</span>, <span class=\"hljs-literal\">None</span>)\r\n        self._header._<span class=\"hljs-built_in\">next</span> = self._trailer\r\n        self._trailer._prev = self._header\r\n        self._size = <span class=\"hljs-number\">0</span>\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__len__</span>(<span class=\"hljs-params\">self</span>):\r\n        <span class=\"hljs-keyword\">return</span> self._size\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">is_empty</span>(<span class=\"hljs-params\">self</span>):\r\n        <span class=\"hljs-keyword\">return</span> self.__len__() == <span class=\"hljs-number\">0</span>\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">_insert</span>(<span class=\"hljs-params\">self, predecessor, e, successor</span>):\r\n        <span class=\"hljs-comment\"># Create new_node by setting it&#x27;s prev.link -&gt; header</span>\r\n        <span class=\"hljs-comment\"># setting it&#x27;s next.link -&gt; trailer</span>\r\n        new_node = self._Node(predecessor, e, successor)\r\n        predecessor._<span class=\"hljs-built_in\">next</span> = new_node\r\n        successor._prev = new_node\r\n        self._size += <span class=\"hljs-number\">1</span>\r\n        <span class=\"hljs-keyword\">return</span> self\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">_delete</span>(<span class=\"hljs-params\">self, node</span>):\r\n        predecessor = node._prev\r\n        successor = node._<span class=\"hljs-built_in\">next</span>\r\n\r\n        predecessor._<span class=\"hljs-built_in\">next</span> = successor\r\n        successor._prev = predecessor\r\n        self._size -= <span class=\"hljs-number\">1</span>\r\n        temp = node._data\r\n        node._prev = node._<span class=\"hljs-built_in\">next</span> = node._data = <span class=\"hljs-literal\">None</span>\r\n        <span class=\"hljs-keyword\">del</span> node\r\n        <span class=\"hljs-keyword\">return</span> temp\r\n\r\n\r\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LinkedDeque</span>(<span class=\"hljs-title class_ inherited__\">_DoublyLinkedBase</span>):\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">first</span>(<span class=\"hljs-params\">self</span>):\r\n        <span class=\"hljs-string\">&quot;&quot;&quot;return first element\r\n        &gt;&gt;&gt; d = LinkedDeque()\r\n        &gt;&gt;&gt; d.add_first(&#x27;A&#x27;).first()\r\n        &#x27;A&#x27;\r\n        &gt;&gt;&gt; d.add_first(&#x27;B&#x27;).first()\r\n        &#x27;B&#x27;\r\n        &quot;&quot;&quot;</span>\r\n        <span class=\"hljs-keyword\">if</span> self.is_empty():\r\n            <span class=\"hljs-keyword\">raise</span> Exception(<span class=\"hljs-string\">&quot;List is empty&quot;</span>)\r\n        <span class=\"hljs-keyword\">return</span> self._header._<span class=\"hljs-built_in\">next</span>._data\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">last</span>(<span class=\"hljs-params\">self</span>):\r\n        <span class=\"hljs-string\">&quot;&quot;&quot;return last element\r\n        &gt;&gt;&gt; d = LinkedDeque()\r\n        &gt;&gt;&gt; d.add_last(&#x27;A&#x27;).last()\r\n        &#x27;A&#x27;\r\n        &gt;&gt;&gt; d.add_last(&#x27;B&#x27;).last()\r\n        &#x27;B&#x27;\r\n        &quot;&quot;&quot;</span>\r\n        <span class=\"hljs-keyword\">if</span> self.is_empty():\r\n            <span class=\"hljs-keyword\">raise</span> Exception(<span class=\"hljs-string\">&quot;List is empty&quot;</span>)\r\n        <span class=\"hljs-keyword\">return</span> self._trailer._prev._data\r\n\r\n    <span class=\"hljs-comment\"># DEque Insert Operations (At the front, At the end)</span>\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">add_first</span>(<span class=\"hljs-params\">self, element</span>):\r\n        <span class=\"hljs-string\">&quot;&quot;&quot;insertion in the front\r\n        &gt;&gt;&gt; LinkedDeque().add_first(&#x27;AV&#x27;).first()\r\n        &#x27;AV&#x27;\r\n        &quot;&quot;&quot;</span>\r\n        <span class=\"hljs-keyword\">return</span> self._insert(self._header, element, self._header._<span class=\"hljs-built_in\">next</span>)\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">add_last</span>(<span class=\"hljs-params\">self, element</span>):\r\n        <span class=\"hljs-string\">&quot;&quot;&quot;insertion in the end\r\n        &gt;&gt;&gt; LinkedDeque().add_last(&#x27;B&#x27;).last()\r\n        &#x27;B&#x27;\r\n        &quot;&quot;&quot;</span>\r\n        <span class=\"hljs-keyword\">return</span> self._insert(self._trailer._prev, element, self._trailer)\r\n\r\n    <span class=\"hljs-comment\"># DEqueu Remove Operations (At the front, At the end)</span>\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">remove_first</span>(<span class=\"hljs-params\">self</span>):\r\n        <span class=\"hljs-string\">&quot;&quot;&quot;removal from the front\r\n        &gt;&gt;&gt; d = LinkedDeque()\r\n        &gt;&gt;&gt; d.is_empty()\r\n        True\r\n        &gt;&gt;&gt; d.remove_first()\r\n        Traceback (most recent call last):\r\n           ...\r\n        IndexError: remove_first from empty list\r\n        &gt;&gt;&gt; d.add_first(&#x27;A&#x27;) # doctest: +ELLIPSIS\r\n        &lt;data_structures.linked_list.deque_doubly.LinkedDeque object at ...\r\n        &gt;&gt;&gt; d.remove_first()\r\n        &#x27;A&#x27;\r\n        &gt;&gt;&gt; d.is_empty()\r\n        True\r\n        &quot;&quot;&quot;</span>\r\n        <span class=\"hljs-keyword\">if</span> self.is_empty():\r\n            <span class=\"hljs-keyword\">raise</span> IndexError(<span class=\"hljs-string\">&quot;remove_first from empty list&quot;</span>)\r\n        <span class=\"hljs-keyword\">return</span> self._delete(self._header._<span class=\"hljs-built_in\">next</span>)\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">remove_last</span>(<span class=\"hljs-params\">self</span>):\r\n        <span class=\"hljs-string\">&quot;&quot;&quot;removal in the end\r\n        &gt;&gt;&gt; d = LinkedDeque()\r\n        &gt;&gt;&gt; d.is_empty()\r\n        True\r\n        &gt;&gt;&gt; d.remove_last()\r\n        Traceback (most recent call last):\r\n           ...\r\n        IndexError: remove_first from empty list\r\n        &gt;&gt;&gt; d.add_first(&#x27;A&#x27;) # doctest: +ELLIPSIS\r\n        &lt;data_structures.linked_list.deque_doubly.LinkedDeque object at ...\r\n        &gt;&gt;&gt; d.remove_last()\r\n        &#x27;A&#x27;\r\n        &gt;&gt;&gt; d.is_empty()\r\n        True\r\n        &quot;&quot;&quot;</span>\r\n        <span class=\"hljs-keyword\">if</span> self.is_empty():\r\n            <span class=\"hljs-keyword\">raise</span> IndexError(<span class=\"hljs-string\">&quot;remove_first from empty list&quot;</span>)\r\n        <span class=\"hljs-keyword\">return</span> self._delete(self._trailer._prev)\r\n"
    }
  },
  "contributors": [
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "CarsonHam",
      "email": "carson.ham@utexas.edu",
      "commits": 1
    },
    {
      "name": "matkosoric",
      "email": "soric.matko@gmail.com",
      "commits": 1
    },
    {
      "name": "Himanshu Bhatnagar",
      "email": "33115688+Himan10@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Dhruv Manilawala",
      "email": "dhruvmanila@gmail.com",
      "commits": 2
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}