{
  "slug": "gauss-seidel-method",
  "name": "Gauss Seidel Method",
  "categories": [
    "numericalmethods"
  ],
  "body": {},
  "implementations": {
    "c": {
      "dir": "numerical_methods\\gauss_seidel_method.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/numerical_methods\\gauss_seidel_method.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;math.h&gt;</span></span>\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\r\n\r\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\r\n{\r\n    <span class=\"hljs-type\">float</span> a, b, c, a1, a2, a3, b1, b2, b3, c1, c2, c3, d1, d2, d3, x1, x2, x3;\r\n\r\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Enter values of eq1:&quot;</span>);\r\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%f%f%f%f&quot;</span>, &amp;a1, &amp;a2, &amp;a3, &amp;d1);\r\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Enter values of eq2:&quot;</span>);\r\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%f%f%f%f&quot;</span>, &amp;b1, &amp;b2, &amp;b3, &amp;d2);\r\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Enter values of eq3:&quot;</span>);\r\n    <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%f%f%f%f&quot;</span>, &amp;c1, &amp;c2, &amp;c3, &amp;d3);\r\n    x1 = x2 = x3 = <span class=\"hljs-number\">0.0</span>;\r\n    <span class=\"hljs-keyword\">do</span>\r\n    {\r\n        a = x1;\r\n        b = x2;\r\n        c = x3;\r\n        x1 = (<span class=\"hljs-number\">1</span> / a1) * (d1 - (a2 * x2) - (a3 * x3));\r\n        x2 = (<span class=\"hljs-number\">1</span> / b2) * (d2 - (b1 * x1) - (b3 * x3));\r\n        x3 = (<span class=\"hljs-number\">1</span> / c3) * (d3 - (c1 * x1) - (c2 * x2));\r\n    } <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-built_in\">fabs</span>(x1 - a) &gt; <span class=\"hljs-number\">0.0001</span> &amp;&amp; <span class=\"hljs-built_in\">fabs</span>(x2 - b) &gt; <span class=\"hljs-number\">0.0001</span> &amp;&amp;\r\n             <span class=\"hljs-built_in\">fabs</span>(x3 - c) &gt; <span class=\"hljs-number\">0.0001</span>);\r\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;x1=%f\\nx2=%f\\nx3=%f&quot;</span>, x1, x2, x3);\r\n\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n}"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}