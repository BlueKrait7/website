{
  "slug": "first-come-first-served",
  "name": "First Come First Served",
  "categories": [
    "scheduling"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "scheduling\\first_come_first_served.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/scheduling\\first_come_first_served.py",
      "code": "<span class=\"hljs-comment\"># Implementation of First Come First Served scheduling algorithm</span>\r\n<span class=\"hljs-comment\"># In this Algorithm we just care about the order that the processes arrived</span>\r\n<span class=\"hljs-comment\"># without carring about their duration time</span>\r\n<span class=\"hljs-comment\"># https://en.wikipedia.org/wiki/Scheduling_(computing)#First_come,_first_served</span>\r\n<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">calculate_waiting_times</span>(<span class=\"hljs-params\">duration_times: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    This function calculates the waiting time of some processes that have a\r\n    specified duration time.\r\n        Return: The waiting time for each process.\r\n    &gt;&gt;&gt; calculate_waiting_times([5, 10, 15])\r\n    [0, 5, 15]\r\n    &gt;&gt;&gt; calculate_waiting_times([1, 2, 3, 4, 5])\r\n    [0, 1, 3, 6, 10]\r\n    &gt;&gt;&gt; calculate_waiting_times([10, 3])\r\n    [0, 10]\r\n    &quot;&quot;&quot;</span>\r\n    waiting_times = [<span class=\"hljs-number\">0</span>] * <span class=\"hljs-built_in\">len</span>(duration_times)\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-built_in\">len</span>(duration_times)):\r\n        waiting_times[i] = duration_times[i - <span class=\"hljs-number\">1</span>] + waiting_times[i - <span class=\"hljs-number\">1</span>]\r\n    <span class=\"hljs-keyword\">return</span> waiting_times\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">calculate_turnaround_times</span>(<span class=\"hljs-params\">\r\n    duration_times: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>], waiting_times: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]\r\n</span>) -&gt; <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    This function calculates the turnaround time of some processes.\r\n        Return: The time difference between the completion time and the\r\n                arrival time.\r\n                Practically waiting_time + duration_time\r\n    &gt;&gt;&gt; calculate_turnaround_times([5, 10, 15], [0, 5, 15])\r\n    [5, 15, 30]\r\n    &gt;&gt;&gt; calculate_turnaround_times([1, 2, 3, 4, 5], [0, 1, 3, 6, 10])\r\n    [1, 3, 6, 10, 15]\r\n    &gt;&gt;&gt; calculate_turnaround_times([10, 3], [0, 10])\r\n    [10, 13]\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">return</span> [\r\n        duration_time + waiting_times[i]\r\n        <span class=\"hljs-keyword\">for</span> i, duration_time <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(duration_times)\r\n    ]\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">calculate_average_turnaround_time</span>(<span class=\"hljs-params\">turnaround_times: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">float</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    This function calculates the average of the turnaround times\r\n        Return: The average of the turnaround times.\r\n    &gt;&gt;&gt; calculate_average_turnaround_time([0, 5, 16])\r\n    7.0\r\n    &gt;&gt;&gt; calculate_average_turnaround_time([1, 5, 8, 12])\r\n    6.5\r\n    &gt;&gt;&gt; calculate_average_turnaround_time([10, 24])\r\n    17.0\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">sum</span>(turnaround_times) / <span class=\"hljs-built_in\">len</span>(turnaround_times)\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">calculate_average_waiting_time</span>(<span class=\"hljs-params\">waiting_times: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]</span>) -&gt; <span class=\"hljs-built_in\">float</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    This function calculates the average of the waiting times\r\n        Return: The average of the waiting times.\r\n    &gt;&gt;&gt; calculate_average_waiting_time([0, 5, 16])\r\n    7.0\r\n    &gt;&gt;&gt; calculate_average_waiting_time([1, 5, 8, 12])\r\n    6.5\r\n    &gt;&gt;&gt; calculate_average_waiting_time([10, 24])\r\n    17.0\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">sum</span>(waiting_times) / <span class=\"hljs-built_in\">len</span>(waiting_times)\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-comment\"># process id&#x27;s</span>\r\n    processes = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]\r\n\r\n    <span class=\"hljs-comment\"># ensure that we actually have processes</span>\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(processes) == <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Zero amount of processes&quot;</span>)\r\n        exit()\r\n\r\n    <span class=\"hljs-comment\"># duration time of all processes</span>\r\n    duration_times = [<span class=\"hljs-number\">19</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>]\r\n\r\n    <span class=\"hljs-comment\"># ensure we can match each id to a duration time</span>\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(duration_times) != <span class=\"hljs-built_in\">len</span>(processes):\r\n        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Unable to match all id&#x27;s with their duration time&quot;</span>)\r\n        exit()\r\n\r\n    <span class=\"hljs-comment\"># get the waiting times and the turnaround times</span>\r\n    waiting_times = calculate_waiting_times(duration_times)\r\n    turnaround_times = calculate_turnaround_times(duration_times, waiting_times)\r\n\r\n    <span class=\"hljs-comment\"># get the average times</span>\r\n    average_waiting_time = calculate_average_waiting_time(waiting_times)\r\n    average_turnaround_time = calculate_average_turnaround_time(turnaround_times)\r\n\r\n    <span class=\"hljs-comment\"># print all the results</span>\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Process ID\\tDuration Time\\tWaiting Time\\tTurnaround Time&quot;</span>)\r\n    <span class=\"hljs-keyword\">for</span> i, process <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(processes):\r\n        <span class=\"hljs-built_in\">print</span>(\r\n            <span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{process}</span>\\t\\t<span class=\"hljs-subst\">{duration_times[i]}</span>\\t\\t<span class=\"hljs-subst\">{waiting_times[i]}</span>\\t\\t&quot;</span>\r\n            <span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{turnaround_times[i]}</span>&quot;</span>\r\n        )\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Average waiting time = <span class=\"hljs-subst\">{average_waiting_time}</span>&quot;</span>)\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Average turn around time = <span class=\"hljs-subst\">{average_turnaround_time}</span>&quot;</span>)\r\n"
    }
  },
  "contributors": [
    {
      "name": "onlinejudge95",
      "email": "44158581+onlinejudge95@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Shantanu Joshi",
      "email": "42472191+shan7030@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ale3androsS",
      "email": "37119970+Ale3androsS@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}