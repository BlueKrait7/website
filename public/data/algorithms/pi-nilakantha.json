{
  "slug": "pi-nilakantha",
  "name": "Pi Nilakantha",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\maths\\PiNilakantha.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\maths\\PiNilakantha.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.maths;\r\n\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">PiNilakantha</span> {\r\n\r\n    <span class=\"hljs-comment\">// Calculates Pi using Nilakantha&#x27;s infinite series</span>\r\n    <span class=\"hljs-comment\">// Method 2 in the following link explains the algorithm</span>\r\n    <span class=\"hljs-comment\">// https://en.scratch-wiki.info/wiki/Calculating_Pi</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">calculatePi</span><span class=\"hljs-params\">(<span class=\"hljs-number\">0</span>)</span> == <span class=\"hljs-number\">3.0</span>;\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">calculatePi</span><span class=\"hljs-params\">(<span class=\"hljs-number\">10</span>)</span> &gt; <span class=\"hljs-number\">3.0</span>;\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">calculatePi</span><span class=\"hljs-params\">(<span class=\"hljs-number\">100</span>)</span> &lt; <span class=\"hljs-number\">4.0</span>;\r\n\r\n        System.out.println(calculatePi(<span class=\"hljs-number\">500</span>));\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@param</span> iterations number of times the infinite series gets repeated Pi\r\n     * get more accurate the higher the value of iterations is Values from 0 up\r\n     * to 500 are allowed since double precision is not sufficient for more than\r\n     * about 500 repetitions of this algorithm\r\n     * <span class=\"hljs-doctag\">@return</span> the pi value of the calculation with a precision of x iteration\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">calculatePi</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> iterations)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (iterations &lt; <span class=\"hljs-number\">0</span> || iterations &gt; <span class=\"hljs-number\">500</span>) {\r\n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">IllegalArgumentException</span>(<span class=\"hljs-string\">&quot;Please input Integer Number between 0 and 500&quot;</span>);\r\n        }\r\n\r\n        <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">pi</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">3</span>;\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">divCounter</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">2</span>;\r\n\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; iterations; i++) {\r\n\r\n            <span class=\"hljs-keyword\">if</span> (i % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span>) {\r\n                pi = pi + <span class=\"hljs-number\">4.0</span> / (divCounter * (divCounter + <span class=\"hljs-number\">1</span>) * (divCounter + <span class=\"hljs-number\">2</span>));\r\n            } <span class=\"hljs-keyword\">else</span> {\r\n                pi = pi - <span class=\"hljs-number\">4.0</span> / (divCounter * (divCounter + <span class=\"hljs-number\">1</span>) * (divCounter + <span class=\"hljs-number\">2</span>));\r\n            }\r\n\r\n            divCounter += <span class=\"hljs-number\">2</span>;\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> pi;\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Waleet",
      "email": "82458509+Waleet@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}