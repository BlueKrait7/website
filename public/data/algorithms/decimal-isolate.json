{
  "slug": "decimal-isolate",
  "name": "Decimal Isolate",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths\\decimal_isolate.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths\\decimal_isolate.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nIsolate the Decimal part of a Number\r\nhttps://stackoverflow.com/questions/3886402/how-to-get-numbers-after-decimal-point\r\n&quot;&quot;&quot;</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">decimal_isolate</span>(<span class=\"hljs-params\">number, digitAmount</span>):\r\n\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Isolates the decimal part of a number.\r\n    If digitAmount &gt; 0 round to that decimal place, else print the entire decimal.\r\n    &gt;&gt;&gt; decimal_isolate(1.53, 0)\r\n    0.53\r\n    &gt;&gt;&gt; decimal_isolate(35.345, 1)\r\n    0.3\r\n    &gt;&gt;&gt; decimal_isolate(35.345, 2)\r\n    0.34\r\n    &gt;&gt;&gt; decimal_isolate(35.345, 3)\r\n    0.345\r\n    &gt;&gt;&gt; decimal_isolate(-14.789, 3)\r\n    -0.789\r\n    &gt;&gt;&gt; decimal_isolate(0, 2)\r\n    0\r\n    &gt;&gt;&gt; decimal_isolate(-14.123, 1)\r\n    -0.1\r\n    &gt;&gt;&gt; decimal_isolate(-14.123, 2)\r\n    -0.12\r\n    &gt;&gt;&gt; decimal_isolate(-14.123, 3)\r\n    -0.123\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> digitAmount &gt; <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">round</span>(number - <span class=\"hljs-built_in\">int</span>(number), digitAmount)\r\n    <span class=\"hljs-keyword\">return</span> number - <span class=\"hljs-built_in\">int</span>(number)\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-built_in\">print</span>(decimal_isolate(<span class=\"hljs-number\">1.53</span>, <span class=\"hljs-number\">0</span>))\r\n    <span class=\"hljs-built_in\">print</span>(decimal_isolate(<span class=\"hljs-number\">35.345</span>, <span class=\"hljs-number\">1</span>))\r\n    <span class=\"hljs-built_in\">print</span>(decimal_isolate(<span class=\"hljs-number\">35.345</span>, <span class=\"hljs-number\">2</span>))\r\n    <span class=\"hljs-built_in\">print</span>(decimal_isolate(<span class=\"hljs-number\">35.345</span>, <span class=\"hljs-number\">3</span>))\r\n    <span class=\"hljs-built_in\">print</span>(decimal_isolate(-<span class=\"hljs-number\">14.789</span>, <span class=\"hljs-number\">3</span>))\r\n    <span class=\"hljs-built_in\">print</span>(decimal_isolate(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>))\r\n    <span class=\"hljs-built_in\">print</span>(decimal_isolate(-<span class=\"hljs-number\">14.123</span>, <span class=\"hljs-number\">1</span>))\r\n    <span class=\"hljs-built_in\">print</span>(decimal_isolate(-<span class=\"hljs-number\">14.123</span>, <span class=\"hljs-number\">2</span>))\r\n    <span class=\"hljs-built_in\">print</span>(decimal_isolate(-<span class=\"hljs-number\">14.123</span>, <span class=\"hljs-number\">3</span>))\r\n"
    },
    "javascript": {
      "dir": "Maths\\DecimalIsolate.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths\\DecimalIsolate.js",
      "code": "<span class=\"hljs-comment\">/*\r\n * function isolates the decimal part of a number.\r\n * Take the number and subtract it from the floored number.\r\n * Return the result.\r\n */</span>\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">decimalIsolate</span> = (<span class=\"hljs-params\">number</span>) =&gt; {\r\n  <span class=\"hljs-keyword\">const</span> answer = <span class=\"hljs-built_in\">parseFloat</span>((number + <span class=\"hljs-string\">&#x27;&#x27;</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/^[-\\d]+./</span>, <span class=\"hljs-string\">&#x27;.&#x27;</span>))\r\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">isNaN</span>(answer) === <span class=\"hljs-literal\">true</span> ? <span class=\"hljs-number\">0</span> : answer\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Rak Laptudirm",
      "email": "raklaptudirm@gmail.com",
      "commits": 1
    },
    {
      "name": "Eric Lavault",
      "email": "39483232+lvlte@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Omkarnath Parida",
      "email": "pomkarnath98@gmail.com",
      "commits": 1
    },
    {
      "name": "Jake Gerber",
      "email": "jake.j.gerber@gmail.com",
      "commits": 4
    }
  ],
  "explanationUrl": {}
}