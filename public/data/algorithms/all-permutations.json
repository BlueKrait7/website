{
  "slug": "all-permutations",
  "name": "All Permutations",
  "categories": [
    "backtracking"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "backtracking\\all_permutations.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/backtracking\\all_permutations.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\n        In this problem, we want to determine all possible permutations\r\n        of the given sequence. We use backtracking to solve this problem.\r\n\r\n        Time complexity: O(n! * n),\r\n        where n denotes the length of the given sequence.\r\n&quot;&quot;&quot;</span>\r\n<span class=\"hljs-keyword\">from</span> __future__ <span class=\"hljs-keyword\">import</span> annotations\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">generate_all_permutations</span>(<span class=\"hljs-params\">sequence: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span> | <span class=\"hljs-built_in\">str</span>]</span>) -&gt; <span class=\"hljs-literal\">None</span>:\r\n    create_state_space_tree(sequence, [], <span class=\"hljs-number\">0</span>, [<span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(sequence))])\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">create_state_space_tree</span>(<span class=\"hljs-params\">\r\n    sequence: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span> | <span class=\"hljs-built_in\">str</span>],\r\n    current_sequence: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span> | <span class=\"hljs-built_in\">str</span>],\r\n    index: <span class=\"hljs-built_in\">int</span>,\r\n    index_used: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>],\r\n</span>) -&gt; <span class=\"hljs-literal\">None</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Creates a state space tree to iterate through each branch using DFS.\r\n    We know that each state has exactly len(sequence) - index children.\r\n    It terminates when it reaches the end of the given sequence.\r\n    &quot;&quot;&quot;</span>\r\n\r\n    <span class=\"hljs-keyword\">if</span> index == <span class=\"hljs-built_in\">len</span>(sequence):\r\n        <span class=\"hljs-built_in\">print</span>(current_sequence)\r\n        <span class=\"hljs-keyword\">return</span>\r\n\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(sequence)):\r\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> index_used[i]:\r\n            current_sequence.append(sequence[i])\r\n            index_used[i] = <span class=\"hljs-literal\">True</span>\r\n            create_state_space_tree(sequence, current_sequence, index + <span class=\"hljs-number\">1</span>, index_used)\r\n            current_sequence.pop()\r\n            index_used[i] = <span class=\"hljs-literal\">False</span>\r\n\r\n\r\n<span class=\"hljs-string\">&quot;&quot;&quot;\r\nremove the comment to take an input from the user\r\n\r\nprint(&quot;Enter the elements&quot;)\r\nsequence = list(map(int, input().split()))\r\n&quot;&quot;&quot;</span>\r\n\r\nsequence: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span> | <span class=\"hljs-built_in\">str</span>] = [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>]\r\ngenerate_all_permutations(sequence)\r\n\r\nsequence_2: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span> | <span class=\"hljs-built_in\">str</span>] = [<span class=\"hljs-string\">&quot;A&quot;</span>, <span class=\"hljs-string\">&quot;B&quot;</span>, <span class=\"hljs-string\">&quot;C&quot;</span>]\r\ngenerate_all_permutations(sequence_2)\r\n"
    }
  },
  "contributors": [
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 1
    },
    {
      "name": "John Law",
      "email": "johnlaw.po@gmail.com",
      "commits": 1
    },
    {
      "name": "Jenia Dysin",
      "email": "jenia90@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    },
    {
      "name": "Erfan Alimohammadi",
      "email": "erfan.aa@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}