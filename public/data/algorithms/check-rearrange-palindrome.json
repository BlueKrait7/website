{
  "slug": "check-rearrange-palindrome",
  "name": "Check Rearrange Palindrome",
  "categories": [
    "strings"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "String\\CheckRearrangePalindrome.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/String\\CheckRearrangePalindrome.js",
      "code": "<span class=\"hljs-comment\">/**\r\n  * What is a palindrome? https://en.wikipedia.org/wiki/Palindrome\r\n  * Receives a string and returns whether it can be rearranged to become a palindrome or not\r\n  * The string can only be a palindrome if the count of ALL characters is even or if the ONLY ONE character count is odd\r\n  * Input is a string\r\n  *\r\n  **/</span>\r\n\r\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">palindromeRearranging</span> = (<span class=\"hljs-params\">str</span>) =&gt; {\r\n  <span class=\"hljs-comment\">// check that input is a string</span>\r\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">typeof</span> str !== <span class=\"hljs-string\">&#x27;string&#x27;</span>) {\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Not a string&#x27;</span>\r\n  }\r\n  <span class=\"hljs-comment\">// Check if is a empty string</span>\r\n  <span class=\"hljs-keyword\">if</span> (str.<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">0</span>) {\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;Empty string&#x27;</span>\r\n  }\r\n\r\n  <span class=\"hljs-comment\">// First obtain the character count for each character in the string and store it in an object.</span>\r\n  <span class=\"hljs-comment\">// Filter the object&#x27;s values to only the odd character counts.</span>\r\n  <span class=\"hljs-keyword\">const</span> charCounts = [...str].<span class=\"hljs-title function_\">reduce</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">counts, char</span>) =&gt;</span> {\r\n    counts[char] = counts[char] ? counts[char] + <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">return</span> counts\r\n  }, {})\r\n  <span class=\"hljs-comment\">// If the length of the resulting array is 0 or 1, the string can be a palindrome.</span>\r\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">values</span>(charCounts).<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">count</span> =&gt;</span> count % <span class=\"hljs-number\">2</span> !== <span class=\"hljs-number\">0</span>).<span class=\"hljs-property\">length</span> &lt;= <span class=\"hljs-number\">1</span>\r\n}\r\n\r\n<span class=\"hljs-comment\">// testing</span>\r\n\r\n<span class=\"hljs-comment\">// &gt; palindromeRearranging(&#x27;aaeccrr&#x27;)</span>\r\n<span class=\"hljs-comment\">// true</span>\r\n\r\n<span class=\"hljs-comment\">// &gt; palindromeRearranging(&#x27;leve&#x27;)</span>\r\n<span class=\"hljs-comment\">// false</span>\r\n"
    }
  },
  "contributors": [
    {
      "name": "Eric Lavault",
      "email": "39483232+lvlte@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Maily Santos",
      "email": "mailysantos@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}