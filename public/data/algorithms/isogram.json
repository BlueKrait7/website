{
  "slug": "isogram",
  "name": "Isogram",
  "categories": [
    "exercism"
  ],
  "body": {},
  "implementations": {
    "c": {
      "dir": "exercism\\isogram\\isogram.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/exercism\\isogram\\isogram.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdbool.h&gt;</span></span>\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;string.h&gt;</span></span>\r\n\r\n<span class=\"hljs-comment\">/*\r\n    is_isogram: returns true if the given string a isogram, otherwise false.\r\n*/</span>\r\n<span class=\"hljs-type\">bool</span> <span class=\"hljs-title function_\">is_isogram</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> phrase[])</span>\r\n{\r\n    <span class=\"hljs-comment\">/* use &#x27;unsigned&#x27; because of the function strlen(...) */</span>\r\n    <span class=\"hljs-type\">unsigned</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>;\r\n    <span class=\"hljs-type\">unsigned</span> <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>;\r\n\r\n    <span class=\"hljs-comment\">/* the current read character in the first for-loop */</span>\r\n    <span class=\"hljs-type\">char</span> current_char = <span class=\"hljs-string\">&#x27; &#x27;</span>;\r\n\r\n    <span class=\"hljs-comment\">/* return status */</span>\r\n    <span class=\"hljs-type\">bool</span> status = <span class=\"hljs-literal\">true</span>;\r\n\r\n    <span class=\"hljs-comment\">/* contains the length of the given string */</span>\r\n    <span class=\"hljs-type\">unsigned</span> <span class=\"hljs-type\">int</span> len_phrase = <span class=\"hljs-built_in\">strlen</span>(phrase);\r\n\r\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; len_phrase; i++)\r\n    {\r\n        current_char = phrase[i];\r\n\r\n        <span class=\"hljs-comment\">/* makes sure the current character has no repetition */</span>\r\n        <span class=\"hljs-keyword\">for</span> (j = i + <span class=\"hljs-number\">1</span>; j &lt; len_phrase; j++)\r\n        {\r\n            <span class=\"hljs-keyword\">if</span> (current_char == phrase[j])\r\n            {\r\n                status = <span class=\"hljs-literal\">false</span>;\r\n\r\n                <span class=\"hljs-comment\">/*\r\n                    because the given string is none isogram.\r\n                    that means we can exit the nested for-loop.\r\n                */</span>\r\n                <span class=\"hljs-keyword\">goto</span> end;\r\n            }\r\n        }\r\n    }\r\n\r\n<span class=\"hljs-comment\">/* exit label */</span>\r\nend:\r\n    <span class=\"hljs-keyword\">return</span> status;\r\n}"
    }
  },
  "contributors": [
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}