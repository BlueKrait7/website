{
  "slug": "harmonic",
  "name": "Harmonic",
  "categories": [
    "math",
    "series"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths\\series\\harmonic.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths\\series\\harmonic.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nHarmonic mean\r\nReference: https://en.wikipedia.org/wiki/Harmonic_mean\r\n\r\nHarmonic series\r\nReference: https://en.wikipedia.org/wiki/Harmonic_series(mathematics)\r\n&quot;&quot;&quot;</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">is_harmonic_series</span>(<span class=\"hljs-params\">series: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">bool</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    checking whether the input series is arithmetic series or not\r\n    &gt;&gt;&gt; is_harmonic_series([ 1, 2/3, 1/2, 2/5, 1/3])\r\n    True\r\n    &gt;&gt;&gt; is_harmonic_series([ 1, 2/3, 2/5, 1/3])\r\n    False\r\n    &gt;&gt;&gt; is_harmonic_series([1, 2, 3])\r\n    False\r\n    &gt;&gt;&gt; is_harmonic_series([1/2, 1/3, 1/4])\r\n    True\r\n    &gt;&gt;&gt; is_harmonic_series([2/5, 2/10, 2/15, 2/20, 2/25])\r\n    True\r\n    &gt;&gt;&gt; is_harmonic_series(4)\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: Input series is not valid, valid series - [1, 2/3, 2]\r\n    &gt;&gt;&gt; is_harmonic_series([])\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: Input list must be a non empty list\r\n    &gt;&gt;&gt; is_harmonic_series([0])\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: Input series cannot have 0 as an element\r\n    &gt;&gt;&gt; is_harmonic_series([1,2,0,6])\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: Input series cannot have 0 as an element\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(series, <span class=\"hljs-built_in\">list</span>):\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input series is not valid, valid series - [1, 2/3, 2]&quot;</span>)\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(series) == <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input list must be a non empty list&quot;</span>)\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(series) == <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> series[<span class=\"hljs-number\">0</span>] != <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\r\n    rec_series = []\r\n    series_len = <span class=\"hljs-built_in\">len</span>(series)\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">0</span>, series_len):\r\n        <span class=\"hljs-keyword\">if</span> series[i] == <span class=\"hljs-number\">0</span>:\r\n            <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input series cannot have 0 as an element&quot;</span>)\r\n        rec_series.append(<span class=\"hljs-number\">1</span> / series[i])\r\n    common_diff = rec_series[<span class=\"hljs-number\">1</span>] - rec_series[<span class=\"hljs-number\">0</span>]\r\n    <span class=\"hljs-keyword\">for</span> index <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">2</span>, series_len):\r\n        <span class=\"hljs-keyword\">if</span> rec_series[index] - rec_series[index - <span class=\"hljs-number\">1</span>] != common_diff:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">False</span>\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">True</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">harmonic_mean</span>(<span class=\"hljs-params\">series: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">float</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    return the harmonic mean of series\r\n\r\n    &gt;&gt;&gt; harmonic_mean([1, 4, 4])\r\n    2.0\r\n    &gt;&gt;&gt; harmonic_mean([3, 6, 9, 12])\r\n    5.759999999999999\r\n    &gt;&gt;&gt; harmonic_mean(4)\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: Input series is not valid, valid series - [2, 4, 6]\r\n    &gt;&gt;&gt; harmonic_mean([1, 2, 3])\r\n    1.6363636363636365\r\n    &gt;&gt;&gt; harmonic_mean([])\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: Input list must be a non empty list\r\n\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> <span class=\"hljs-built_in\">isinstance</span>(series, <span class=\"hljs-built_in\">list</span>):\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input series is not valid, valid series - [2, 4, 6]&quot;</span>)\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(series) == <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input list must be a non empty list&quot;</span>)\r\n    answer = <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-keyword\">for</span> val <span class=\"hljs-keyword\">in</span> series:\r\n        answer += <span class=\"hljs-number\">1</span> / val\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">len</span>(series) / answer\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n"
    }
  },
  "contributors": [
    {
      "name": "Atharva Deshpande",
      "email": "atharva01.903@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}