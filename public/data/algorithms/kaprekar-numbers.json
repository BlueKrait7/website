{
  "slug": "kaprekar-numbers",
  "name": "Kaprekar Numbers",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\maths\\KaprekarNumbers.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\maths\\KaprekarNumbers.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.maths;\r\n<span class=\"hljs-keyword\">import</span> java.math.BigInteger;\r\n<span class=\"hljs-keyword\">import</span> java.util.*;\r\n\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">KaprekarNumbers</span> {\r\n\r\n\t<span class=\"hljs-comment\">/* This program demonstrates if a given number is Kaprekar Number or not.\r\n\tKaprekar Number: A Kaprekar number is an n-digit number which its square can be split into two parts where the right part has n\r\n\tdigits and sum of these parts is equal to the original number. */</span>\r\n\r\n\t<span class=\"hljs-comment\">// Provides a list of kaprekarNumber in a range</span>\r\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> ArrayList&lt;Long&gt; <span class=\"hljs-title function_\">kaprekarNumberInRange</span><span class=\"hljs-params\">(<span class=\"hljs-type\">long</span> start, <span class=\"hljs-type\">long</span> end)</span> <span class=\"hljs-keyword\">throws</span> Exception {\r\n\t\t<span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> end-start;\r\n\t\t<span class=\"hljs-keyword\">if</span> (n &lt;<span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Exception</span>(<span class=\"hljs-string\">&quot;Invalid range&quot;</span>);\r\n\t\tArrayList&lt;Long&gt; list = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();\r\n\r\n\t\t<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> start; i &lt;= end; i++) {\r\n\t\t\t<span class=\"hljs-keyword\">if</span> (isKaprekarNumber(i)) list.add(i);\r\n\t\t}\r\n\r\n\t\t<span class=\"hljs-keyword\">return</span> list;\r\n\t}\r\n\r\n\t<span class=\"hljs-comment\">// Checks whether a given number is Kaprekar Number or not</span>\r\n\t<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">isKaprekarNumber</span><span class=\"hljs-params\">(<span class=\"hljs-type\">long</span> num)</span> {\r\n\t\t<span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">number</span> <span class=\"hljs-operator\">=</span> Long.toString(num);\r\n\t\t<span class=\"hljs-type\">BigInteger</span> <span class=\"hljs-variable\">originalNumber</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigInteger</span>(number);\r\n\t\t<span class=\"hljs-type\">BigInteger</span> <span class=\"hljs-variable\">numberSquared</span> <span class=\"hljs-operator\">=</span> originalNumber.multiply(originalNumber);\r\n\t\t<span class=\"hljs-keyword\">if</span>(number.length() == numberSquared.toString().length()){\r\n\t\t\t<span class=\"hljs-keyword\">return</span> number.equals(numberSquared.toString());\r\n\t\t}\r\n\t\t<span class=\"hljs-keyword\">else</span>{\r\n\t\t\t<span class=\"hljs-type\">BigInteger</span> <span class=\"hljs-variable\">leftDigits1</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigInteger</span>(<span class=\"hljs-string\">&quot;0&quot;</span>);\r\n\t\t\tBigInteger leftDigits2;\r\n\t\t\t<span class=\"hljs-keyword\">if</span>(numberSquared.toString().contains(<span class=\"hljs-string\">&quot;0&quot;</span>)){\r\n\t\t\t\tleftDigits1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigInteger</span>(\r\n\t\t\t\t\t\tnumberSquared.toString().\r\n\t\t\t\t\t\t\t\tsubstring(<span class=\"hljs-number\">0</span>, numberSquared.toString().indexOf(<span class=\"hljs-string\">&quot;0&quot;</span>)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tleftDigits2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigInteger</span>(\r\n\t\t\t\t\tnumberSquared.toString()\r\n\t\t\t\t\t\t\t.substring(<span class=\"hljs-number\">0</span>, (numberSquared.toString().length() - number.length()))\r\n\t\t\t);\r\n\t\t\t<span class=\"hljs-type\">BigInteger</span> <span class=\"hljs-variable\">rightDigits</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">BigInteger</span>(numberSquared.toString().substring(numberSquared.toString().length() - number.length()));\r\n\t\t\t<span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">x</span> <span class=\"hljs-operator\">=</span> leftDigits1.add(rightDigits).toString();\r\n\t\t\t<span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">y</span> <span class=\"hljs-operator\">=</span> leftDigits2.add(rightDigits).toString();\r\n\t\t\t<span class=\"hljs-keyword\">return</span> (number.equals(x)) || (number.equals(y));\r\n\t\t}\t\t\r\n\t}\r\n\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "s-devran",
      "email": "78323181+s-devran@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Subhro Acharjee",
      "email": "88422396+subhroblkbox@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}