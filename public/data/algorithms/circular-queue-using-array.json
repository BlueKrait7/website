{
  "slug": "circular-queue-using-array",
  "name": "Circular Queue Using Array",
  "categories": [
    "operationsondatastructures"
  ],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "operations_on_datastructures\\circular_queue_using_array.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/operations_on_datastructures\\circular_queue_using_array.cpp",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\r\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;\r\n\r\n<span class=\"hljs-type\">int</span> queue[<span class=\"hljs-number\">10</span>];\r\n<span class=\"hljs-type\">int</span> front = <span class=\"hljs-number\">0</span>;\r\n<span class=\"hljs-type\">int</span> rear = <span class=\"hljs-number\">0</span>;\r\n<span class=\"hljs-type\">int</span> count = <span class=\"hljs-number\">0</span>;\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">Enque</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span> </span>{\r\n    <span class=\"hljs-keyword\">if</span> (count == <span class=\"hljs-number\">10</span>) {\r\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;\\nOverflow&quot;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> {\r\n        queue[rear] = x;\r\n        rear = (rear + <span class=\"hljs-number\">1</span>) % <span class=\"hljs-number\">10</span>;\r\n        count++;\r\n    }\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">Deque</span><span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-keyword\">if</span> (front == rear) {\r\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;\\nUnderflow&quot;</span>;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">else</span> {\r\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;\\n&quot;</span> &lt;&lt; queue[front] &lt;&lt; <span class=\"hljs-string\">&quot; deleted&quot;</span>;\r\n        front = (front + <span class=\"hljs-number\">1</span>) % <span class=\"hljs-number\">10</span>;\r\n        count--;\r\n    }\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">show</span><span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; count; i++) {\r\n        cout &lt;&lt; queue[(i + front) % <span class=\"hljs-number\">10</span>] &lt;&lt; <span class=\"hljs-string\">&quot;\\t&quot;</span>;\r\n    }\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-type\">int</span> ch, x;\r\n    <span class=\"hljs-keyword\">do</span> {\r\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;\\n1. Enque&quot;</span>;\r\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;\\n2. Deque&quot;</span>;\r\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;\\n3. Print&quot;</span>;\r\n        cout &lt;&lt; <span class=\"hljs-string\">&quot;\\nEnter Your Choice : &quot;</span>;\r\n        cin &gt;&gt; ch;\r\n        <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-number\">1</span>) {\r\n            cout &lt;&lt; <span class=\"hljs-string\">&quot;\\nInsert : &quot;</span>;\r\n            cin &gt;&gt; x;\r\n            <span class=\"hljs-built_in\">Enque</span>(x);\r\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-number\">2</span>) {\r\n            <span class=\"hljs-built_in\">Deque</span>();\r\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-number\">3</span>) {\r\n            <span class=\"hljs-built_in\">show</span>();\r\n        }\r\n    } <span class=\"hljs-keyword\">while</span> (ch != <span class=\"hljs-number\">0</span>);\r\n\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Bender",
      "email": "christianbender89@web.de",
      "commits": 1
    },
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Libin Yang",
      "email": "szuyanglb@outlook.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}