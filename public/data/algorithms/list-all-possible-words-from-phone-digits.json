{
  "slug": "list-all-possible-words-from-phone-digits",
  "name": "List All Possible Words From Phone Digits",
  "categories": [
    "strings"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\strings\\List_all_Possible_Words_From_Phone_Digits.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\strings\\List_all_Possible_Words_From_Phone_Digits.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.strings;\r\n\r\n<span class=\"hljs-keyword\">import</span> java.util.*;\r\n\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">List_all_Possible_Words_From_Phone_Digits</span> {\r\n\r\n    <span class=\"hljs-keyword\">static</span> Character[][] numberToCharMap;\r\n\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> List&lt;String&gt; <span class=\"hljs-title function_\">printWords</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] numbers,\r\n            <span class=\"hljs-type\">int</span> len,\r\n            <span class=\"hljs-type\">int</span> numIndex,\r\n            String s)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (len == numIndex) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;(Collections.singleton(s));\r\n        }\r\n\r\n        List&lt;String&gt; stringList = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">ArrayList</span>&lt;&gt;();\r\n\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\r\n                i &lt; numberToCharMap[numbers[numIndex]].length; i++) {\r\n            <span class=\"hljs-type\">String</span> <span class=\"hljs-variable\">sCopy</span>\r\n                    <span class=\"hljs-operator\">=</span> String.copyValueOf(s.toCharArray());\r\n            sCopy = sCopy.concat(\r\n                    numberToCharMap[numbers[numIndex]][i].toString());\r\n            stringList.addAll(printWords(numbers, len,\r\n                    numIndex + <span class=\"hljs-number\">1</span>,\r\n                    sCopy));\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> stringList;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">printWords</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] numbers)</span> {\r\n        generateNumberToCharMap();\r\n        List&lt;String&gt; stringList\r\n                = printWords(numbers, numbers.length, <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">&quot;&quot;</span>);\r\n        stringList.stream().forEach(System.out::println);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">generateNumberToCharMap</span><span class=\"hljs-params\">()</span> {\r\n        numberToCharMap = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[<span class=\"hljs-number\">10</span>][<span class=\"hljs-number\">5</span>];\r\n        numberToCharMap[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;\\0&#x27;</span>};\r\n        numberToCharMap[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;\\0&#x27;</span>};\r\n        numberToCharMap[<span class=\"hljs-number\">2</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;a&#x27;</span>, <span class=\"hljs-string\">&#x27;b&#x27;</span>, <span class=\"hljs-string\">&#x27;c&#x27;</span>};\r\n        numberToCharMap[<span class=\"hljs-number\">3</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;d&#x27;</span>, <span class=\"hljs-string\">&#x27;e&#x27;</span>, <span class=\"hljs-string\">&#x27;f&#x27;</span>};\r\n        numberToCharMap[<span class=\"hljs-number\">4</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;g&#x27;</span>, <span class=\"hljs-string\">&#x27;h&#x27;</span>, <span class=\"hljs-string\">&#x27;i&#x27;</span>};\r\n        numberToCharMap[<span class=\"hljs-number\">5</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;j&#x27;</span>, <span class=\"hljs-string\">&#x27;k&#x27;</span>, <span class=\"hljs-string\">&#x27;l&#x27;</span>};\r\n        numberToCharMap[<span class=\"hljs-number\">6</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;m&#x27;</span>, <span class=\"hljs-string\">&#x27;n&#x27;</span>, <span class=\"hljs-string\">&#x27;o&#x27;</span>};\r\n        numberToCharMap[<span class=\"hljs-number\">7</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;p&#x27;</span>, <span class=\"hljs-string\">&#x27;q&#x27;</span>, <span class=\"hljs-string\">&#x27;r&#x27;</span>, <span class=\"hljs-string\">&#x27;s&#x27;</span>};\r\n        numberToCharMap[<span class=\"hljs-number\">8</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;t&#x27;</span>, <span class=\"hljs-string\">&#x27;u&#x27;</span>, <span class=\"hljs-string\">&#x27;v&#x27;</span>};\r\n        numberToCharMap[<span class=\"hljs-number\">9</span>] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Character</span>[]{<span class=\"hljs-string\">&#x27;w&#x27;</span>, <span class=\"hljs-string\">&#x27;x&#x27;</span>, <span class=\"hljs-string\">&#x27;y&#x27;</span>, <span class=\"hljs-string\">&#x27;z&#x27;</span>};\r\n    }\r\n\r\n<span class=\"hljs-comment\">// Driver code </span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        <span class=\"hljs-type\">int</span> number[] = {<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>};\r\n        printWords(number);\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "RITWEEK RAJ",
      "email": "67289913+ritweekraj2802@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}