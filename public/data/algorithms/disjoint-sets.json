{
  "slug": "disjoint-sets",
  "name": "Disjoint Sets",
  "categories": [
    "datastructures"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\datastructures\\disjointsets\\DisjointSets.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\datastructures\\disjointsets\\DisjointSets.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.datastructures.disjointsets;\r\n\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">DisjointSets</span>&lt;T&gt; {\r\n\r\n    <span class=\"hljs-keyword\">public</span> Node&lt;T&gt; <span class=\"hljs-title function_\">MakeSet</span><span class=\"hljs-params\">(T x)</span> {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Node</span>&lt;T&gt;(x);\r\n    }\r\n\r\n    ;\r\n\r\n    <span class=\"hljs-keyword\">public</span> Node&lt;T&gt; <span class=\"hljs-title function_\">FindSet</span><span class=\"hljs-params\">(Node&lt;T&gt; node)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (node != node.parent) {\r\n            node.parent = FindSet(node.parent);\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">return</span> node.parent;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">UnionSet</span><span class=\"hljs-params\">(Node&lt;T&gt; x, Node&lt;T&gt; y)</span> {\r\n        Node&lt;T&gt; nx = FindSet(x);\r\n        Node&lt;T&gt; ny = FindSet(y);\r\n\r\n        <span class=\"hljs-keyword\">if</span> (nx == ny) {\r\n            <span class=\"hljs-keyword\">return</span>;\r\n        }\r\n        <span class=\"hljs-keyword\">if</span> (nx.rank &gt; ny.rank) {\r\n            ny.parent = nx;\r\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (ny.rank &gt; nx.rank) {\r\n            nx.parent = ny;\r\n        } <span class=\"hljs-keyword\">else</span> {\r\n            nx.parent = ny;\r\n            ny.rank++;\r\n        }\r\n    }\r\n}\r\n"
    },
    "ruby": {
      "dir": "data_structures\\disjoint_sets\\disjoint_sets.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/data_structures\\disjoint_sets\\disjoint_sets.rb",
      "code": "<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Node</span></span>\r\n  <span class=\"hljs-keyword\">attr_accessor</span> <span class=\"hljs-symbol\">:data</span>, <span class=\"hljs-symbol\">:parent</span>, <span class=\"hljs-symbol\">:rank</span>, <span class=\"hljs-symbol\">:parent</span>, <span class=\"hljs-symbol\">:rank</span>\r\n\r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">initialize</span><span class=\"hljs-params\">(data)</span></span>\r\n    <span class=\"hljs-variable\">@data</span> = data\r\n    <span class=\"hljs-variable\">@parent</span> = <span class=\"hljs-keyword\">self</span>\r\n    <span class=\"hljs-variable\">@rank</span> = <span class=\"hljs-number\">0</span>\r\n  <span class=\"hljs-keyword\">end</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DisjointSets</span></span>\r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">make_set</span><span class=\"hljs-params\">(d)</span></span>\r\n    Node.new(d)\r\n  <span class=\"hljs-keyword\">end</span>\r\n\r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">find_set</span><span class=\"hljs-params\">(x)</span></span>\r\n    raise ArgumentError <span class=\"hljs-keyword\">unless</span> x.<span class=\"hljs-keyword\">class</span> &lt;= Node\r\n\r\n    x.parent = (find_set(x.parent)) <span class=\"hljs-keyword\">unless</span> x.parent == x\r\n    x.parent\r\n  <span class=\"hljs-keyword\">end</span>\r\n\r\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">union_set</span><span class=\"hljs-params\">(x, y)</span></span>\r\n    px = find_set(x)\r\n    py = find_set(y)\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">if</span> px == py\r\n\r\n    <span class=\"hljs-keyword\">if</span> px.rank &gt; py.rank\r\n      py.parent = px\r\n    <span class=\"hljs-keyword\">elsif</span> py.rank &gt; px.rank\r\n      px.parent = py\r\n    <span class=\"hljs-keyword\">else</span>\r\n      px.parent = py\r\n      py.rank += <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">end</span>\r\n  <span class=\"hljs-keyword\">end</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\nds = DisjointSets.new\r\none = ds.make_set(<span class=\"hljs-number\">1</span>)\r\ntwo = ds.make_set(<span class=\"hljs-number\">2</span>)\r\nthree = ds.make_set(<span class=\"hljs-number\">3</span>)\r\nds.union_set(one, two)\r\nputs ds.find_set(one) == ds.find_set(two) <span class=\"hljs-comment\"># should be true</span>\r\nds.union_set(one, three)\r\nputs ds.find_set(two) == ds.find_set(three) <span class=\"hljs-comment\"># should be true</span>\r\nputs one.rank + two.rank + three.rank == <span class=\"hljs-number\">1</span> <span class=\"hljs-comment\"># should be true</span>\r\n"
    }
  },
  "contributors": [
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 1
    },
    {
      "name": "NimrodRak",
      "email": "68863114+NimrodRak@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Nimrod Rak",
      "email": "nimrod.rak@mail.huji.ac.il",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}