{
  "slug": "board-path",
  "name": "Board Path",
  "categories": [
    "dynamicprogramming"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\dynamicprogramming\\BoardPath.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\dynamicprogramming\\BoardPath.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.dynamicprogramming;\r\n\r\n<span class=\"hljs-comment\">/*\r\n* this is an important Algo in which\r\n* we have starting and ending of board and we have to reach\r\n* we have to count no. of ways\r\n* that help to reach end point i.e number by rolling dice\r\n* which have 1 to 6 digits\r\n\r\nTest Case:\r\nhere target is 10\r\n\r\nint n=10;\r\n\t\tstartAlgo();\r\n\t\tSystem.out.println(bpR(0,n));\r\n\t\tSystem.out.println(endAlgo()+&quot;ms&quot;);\r\n\t\tint[] strg=new int [n+1];\r\n\t\tstartAlgo();\r\n\t\tSystem.out.println(bpRS(0,n,strg));\r\n\t\tSystem.out.println(endAlgo()+&quot;ms&quot;);\r\n\t\tstartAlgo();\r\n\t\tSystem.out.println(bpIS(0,n,strg));\r\n\t\tSystem.out.println(endAlgo()+&quot;ms&quot;);\r\n\r\n\r\n\r\n */</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">BoardPath</span> {\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">long</span> startTime;\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">long</span> endTime;\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">startAlgo</span><span class=\"hljs-params\">()</span> {\r\n        startTime = System.currentTimeMillis();\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">long</span> <span class=\"hljs-title function_\">endAlgo</span><span class=\"hljs-params\">()</span> {\r\n        endTime = System.currentTimeMillis();\r\n        <span class=\"hljs-keyword\">return</span> endTime - startTime;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">bpR</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> start, <span class=\"hljs-type\">int</span> end)</span> {\r\n        <span class=\"hljs-keyword\">if</span> (start == end) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\r\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (start &gt; end) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n        }\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">count</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">dice</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>; dice &lt;= <span class=\"hljs-number\">6</span>; dice++) {\r\n            count += bpR(start + dice, end);\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> count;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">bpRS</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> curr, <span class=\"hljs-type\">int</span> end, <span class=\"hljs-type\">int</span> strg[])</span> {\r\n        <span class=\"hljs-keyword\">if</span> (curr == end) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\r\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (curr &gt; end) {\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n        }\r\n        <span class=\"hljs-keyword\">if</span> (strg[curr] != <span class=\"hljs-number\">0</span>) {\r\n            <span class=\"hljs-keyword\">return</span> strg[curr];\r\n        }\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">count</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">dice</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>; dice &lt;= <span class=\"hljs-number\">6</span>; dice++) {\r\n            count += bpRS(curr + dice, end, strg);\r\n        }\r\n        strg[curr] = count;\r\n        <span class=\"hljs-keyword\">return</span> count;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">bpIS</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> curr, <span class=\"hljs-type\">int</span> end, <span class=\"hljs-type\">int</span>[] strg)</span> {\r\n        strg[end] = <span class=\"hljs-number\">1</span>;\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> end - <span class=\"hljs-number\">1</span>; i &gt;= <span class=\"hljs-number\">0</span>; i--) {\r\n            <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">count</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\r\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">dice</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">1</span>; dice &lt;= <span class=\"hljs-number\">6</span> &amp;&amp; dice + i &lt; strg.length; dice++) {\r\n                count += strg[i + dice];\r\n            }\r\n            strg[i] = count;\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> strg[<span class=\"hljs-number\">0</span>];\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ritik2604",
      "email": "49342895+Ritik2604@users.noreply.github.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}