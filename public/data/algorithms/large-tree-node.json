{
  "slug": "large-tree-node",
  "name": "Large Tree Node",
  "categories": [
    "devutils",
    "nodes"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\devutils\\nodes\\LargeTreeNode.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\devutils\\nodes\\LargeTreeNode.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.devutils.nodes;\r\n\r\n<span class=\"hljs-keyword\">import</span> java.util.Collection;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * {<span class=\"hljs-doctag\">@link</span> TreeNode} extension that holds a {<span class=\"hljs-doctag\">@link</span> Collection} of refrences to\r\n * child Nodes.\r\n *\r\n * <span class=\"hljs-doctag\">@param</span> &lt;E&gt; The type of the data held in the Node.\r\n *\r\n * <span class=\"hljs-doctag\">@author</span> &lt;a href=&quot;https://github.com/aitorfi&quot;&gt;aitorfi&lt;/a&gt;\r\n */</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">LargeTreeNode</span>&lt;E&gt; <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">TreeNode</span>&lt;E&gt; {\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * {<span class=\"hljs-doctag\">@link</span> Collection} that holds the Nodes&#x27; child nodes.\r\n     */</span>\r\n    <span class=\"hljs-keyword\">private</span> Collection&lt;LargeTreeNode&lt;E&gt;&gt; childNodes;\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * Empty contructor.\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">LargeTreeNode</span><span class=\"hljs-params\">()</span> {\r\n        <span class=\"hljs-built_in\">super</span>();\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * Initializes the Nodes&#x27; data.\r\n     *\r\n     * <span class=\"hljs-doctag\">@param</span> data Value to which data will be initialized.\r\n     * <span class=\"hljs-doctag\">@see</span> TreeNode#TreeNode(Object)\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">LargeTreeNode</span><span class=\"hljs-params\">(E data)</span> {\r\n        <span class=\"hljs-built_in\">super</span>(data);\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * Initializes the Nodes&#x27; data and parent node reference.\r\n     *\r\n     * <span class=\"hljs-doctag\">@param</span> data Value to which data will be initialized.\r\n     * <span class=\"hljs-doctag\">@param</span> parentNode Value to which the nodes&#x27; parent reference will be set.\r\n     * <span class=\"hljs-doctag\">@see</span> TreeNode#TreeNode(Object, Node)\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">LargeTreeNode</span><span class=\"hljs-params\">(E data, LargeTreeNode&lt;E&gt; parentNode)</span> {\r\n        <span class=\"hljs-built_in\">super</span>(data, parentNode);\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * Initializes the Nodes&#x27; data and parent and child nodes references.\r\n     *\r\n     * <span class=\"hljs-doctag\">@param</span> data Value to which data will be initialized.\r\n     * <span class=\"hljs-doctag\">@param</span> parentNode Value to which the nodes&#x27; parent reference will be set.\r\n     * <span class=\"hljs-doctag\">@param</span> childNodes {<span class=\"hljs-doctag\">@link</span> Collection} of child Nodes.\r\n     * <span class=\"hljs-doctag\">@see</span> TreeNode#TreeNode(Object, Node)\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-title function_\">LargeTreeNode</span><span class=\"hljs-params\">(E data, LargeTreeNode&lt;E&gt; parentNode, Collection&lt;LargeTreeNode&lt;E&gt;&gt; childNodes)</span> {\r\n        <span class=\"hljs-built_in\">super</span>(data, parentNode);\r\n        <span class=\"hljs-built_in\">this</span>.childNodes = childNodes;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * <span class=\"hljs-doctag\">@return</span> True if the node is a leaf node, otherwise false.\r\n     * <span class=\"hljs-doctag\">@see</span> TreeNode#isLeafNode()\r\n     */</span>\r\n    <span class=\"hljs-meta\">@Override</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-type\">boolean</span> <span class=\"hljs-title function_\">isLeafNode</span><span class=\"hljs-params\">()</span> {\r\n        <span class=\"hljs-keyword\">return</span> (childNodes == <span class=\"hljs-literal\">null</span> || childNodes.size() == <span class=\"hljs-number\">0</span>);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> Collection&lt;LargeTreeNode&lt;E&gt;&gt; <span class=\"hljs-title function_\">getChildNodes</span><span class=\"hljs-params\">()</span> {\r\n        <span class=\"hljs-keyword\">return</span> childNodes;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">setChildNodes</span><span class=\"hljs-params\">(Collection&lt;LargeTreeNode&lt;E&gt;&gt; childNodes)</span> {\r\n        <span class=\"hljs-built_in\">this</span>.childNodes = childNodes;\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}