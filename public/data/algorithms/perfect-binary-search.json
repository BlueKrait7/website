{
  "slug": "perfect-binary-search",
  "name": "Perfect Binary Search",
  "categories": [
    "searches"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\searches\\PerfectBinarySearch.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\searches\\PerfectBinarySearch.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.searches;\r\n\r\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">PerfectBinarySearch</span> {\r\n\r\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">binarySearch</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] arr, <span class=\"hljs-type\">int</span> target)</span> {\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">low</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">high</span> <span class=\"hljs-operator\">=</span> arr.length - <span class=\"hljs-number\">1</span>;\r\n\r\n        <span class=\"hljs-keyword\">while</span> (low &lt;= high) {\r\n            <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">mid</span> <span class=\"hljs-operator\">=</span> (low + high) / <span class=\"hljs-number\">2</span>;\r\n\r\n            <span class=\"hljs-keyword\">if</span> (arr[mid] == target) {\r\n                <span class=\"hljs-keyword\">return</span> mid;\r\n            } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (arr[mid] &gt; target) {\r\n                high = mid - <span class=\"hljs-number\">1</span>;\r\n            } <span class=\"hljs-keyword\">else</span> {\r\n                low = mid + <span class=\"hljs-number\">1</span>;\r\n            }\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span>;\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        <span class=\"hljs-type\">PerfectBinarySearch</span> <span class=\"hljs-variable\">BinarySearch</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PerfectBinarySearch</span>();\r\n        <span class=\"hljs-type\">int</span>[] array = {<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">10</span>};\r\n        <span class=\"hljs-keyword\">assert</span> BinarySearch.binarySearch(array, -<span class=\"hljs-number\">1</span>) == -<span class=\"hljs-number\">1</span>;\r\n        <span class=\"hljs-keyword\">assert</span> BinarySearch.binarySearch(array, <span class=\"hljs-number\">11</span>) == -<span class=\"hljs-number\">1</span>;\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "CodingCookieRookie",
      "email": "38324769+CodingCookieRookie@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Stepfen Shawn",
      "email": "m18824909883@163.com",
      "commits": 2
    },
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}