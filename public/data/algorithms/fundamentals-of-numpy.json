{
  "slug": "fundamentals-of-numpy",
  "name": "Fundamentals of Numpy",
  "categories": [
    "machinelearning",
    "numpy"
  ],
  "body": {
    "en": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>",
    "zh_Hans": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>",
    "ml": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>",
    "fr": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>",
    "de": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>",
    "eo": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>",
    "es": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>",
    "it": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>",
    "hr": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>",
    "uk": "<div class=\"nb-notebook\"><div class=\"nb-worksheet\"><div class=\"nb-cell nb-markdown-cell\"><h1 id=\"fundametal-of-numpy\">Fundametal of Numpy</h1>\n</div><div class=\"nb-cell nb-markdown-cell\"><p>Numpy is linear algebra library for python .\nthis is importent library because all pydata ecosystem rely on numpy.</p>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-keyword\">import</span> numpy <span class=\"hljs-keyword\">as</span> np\n\narr = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>]\narr</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">[1, 2, 3]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"2\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(arr)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"2\"><pre class=\"nb-text-output\">array([1, 2, 3])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">6</span>],[<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">9</span>]]\n\nmy_mat\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"3\"><pre class=\"nb-text-output\">[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.array(my_mat)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([[1, 2, 3],\n       [4, 5, 6],\n       [7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">my_mat[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">2</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"arange\">Arange</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"7\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># np.arange(start , last , offset)</span>\n\nnp.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">10</span>)  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"7\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">1</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([0, 1, 2, 3, 4])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.arange(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">12</span>,<span class=\"hljs-number\">2</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"zeros\">Zeros</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Zeros </span>\n\nnp.zeros(<span class=\"hljs-number\">3</span>)  <span class=\"hljs-comment\"># one dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([0., 0., 0.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"13\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.zeros((<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>))  <span class=\"hljs-comment\"># two dimensional</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"13\"><pre class=\"nb-text-output\">array([[0., 0., 0.],\n       [0., 0., 0.],\n       [0., 0., 0.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"ones\">One's</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"14\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># one's</span>\n\nnp.ones(<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"14\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.ones((<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">2</span>))</code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([[1., 1.],\n       [1., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"linespace\">linespace</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"16\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># linspace -&amp;gt; (start , end , how many point u want in between start to end)</span>\n\nnp.linspace(<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"16\"><pre class=\"nb-text-output\">array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"eye\">eye</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"17\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># Diagonal element </span>\n\nnp.eye(<span class=\"hljs-number\">3</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"17\"><pre class=\"nb-text-output\">array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random-function\">Random Function</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random -&amp;gt; (number of points in between )</span>\n\nnp.random.rand(<span class=\"hljs-number\">5</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">array([[0.93087129, 0.30534035, 0.2508104 ],\n       [0.05900399, 0.39901502, 0.00206355],\n       [0.10066378, 0.67083509, 0.95297132]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.random.rand(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">3</span>)    </code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([[0.29917792, 0.88770559, 0.0923786 ],\n       [0.33748283, 0.56245829, 0.88557374],\n       [0.88111555, 0.40227034, 0.28943298]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random based on standard normal distrubution</span>\n\nnp.random.randn(<span class=\"hljs-number\">3</span>)\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([ 0.65926802, -0.18545583, -0.5672595 ])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"27\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># random number between start to end anything in interger format</span>\n\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"27\"><pre class=\"nb-text-output\">8</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#  start , end , numbers of points in between </span>\nnp.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([18, 12, 16,  3,  4])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"reshape\">Reshape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># reshape</span>\n\n<span class=\"hljs-comment\"># we can reshape the arr into 2 dimesional</span>\n<span class=\"hljs-comment\"># we can't resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5</span>\n                \narray = np.arange(<span class=\"hljs-number\">10</span>)</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"35\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">array.reshape(<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">5</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"35\"><pre class=\"nb-text-output\">array([[0, 1, 2, 3, 4],\n       [5, 6, 7, 8, 9]])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"random\">Random</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"44\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">number = np.random.randint(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">max</span>())\n<span class=\"hljs-built_in\">print</span>(number.<span class=\"hljs-built_in\">min</span>())\n<span class=\"hljs-built_in\">print</span>(number.argmax())  <span class=\"hljs-comment\"># return location where max is stored</span>\n<span class=\"hljs-built_in\">print</span>(number.argmin())  <span class=\"hljs-comment\"># return location where min is stored</span>\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"44\"><pre class=\"nb-stdout\">17\n2\n0\n2\n</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"shape\">Shape</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"46\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"> array.shape  <span class=\"hljs-comment\">#because its one dimesional </span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"46\"><pre class=\"nb-text-output\">(10,)</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"dtype\">dtype</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"49\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># type</span>\narray.dtype\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"49\"><pre class=\"nb-text-output\">dtype('int32')</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># instead of writing like these -&amp;gt; np.random.randint(1,20)</span>\n<span class=\"hljs-keyword\">from</span> numpy.random <span class=\"hljs-keyword\">import</span> randint\n\n<span class=\"hljs-comment\"># then we can directly call randint which will return random number in between 3 to 10 </span>\nrandint(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">10</span>)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">3</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"3\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 = np.arange(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">20</span>)</code></pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"mathematical-operator\">mathematical operator</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"4\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 </code></pre></div><div class=\"nb-output\" data-prompt-number=\"4\"><pre class=\"nb-text-output\">array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"6\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 + arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"6\"><pre class=\"nb-text-output\">array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\n       36, 38])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"10\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 * arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"10\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"8\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 - arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"8\"><pre class=\"nb-text-output\">array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"11\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1 / arr_1</code></pre></div><div class=\"nb-output\" data-prompt-number=\"11\"><pre class=\"nb-text-output\">array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n       1., 1.])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"12\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1*<span class=\"hljs-number\">10</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"12\"><pre class=\"nb-text-output\">array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\n       140, 150, 160, 170, 180, 190])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"15\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_1**<span class=\"hljs-number\">2</span></code></pre></div><div class=\"nb-output\" data-prompt-number=\"15\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"21\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.square(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"21\"><pre class=\"nb-text-output\">array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\n       196, 225, 256, 289, 324, 361], dtype=int32)</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"22\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.<span class=\"hljs-built_in\">max</span>(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"22\"><pre class=\"nb-text-output\">19</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"23\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.sqrt(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"23\"><pre class=\"nb-text-output\">array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\n       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\n       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\n       4.        , 4.12310563, 4.24264069, 4.35889894])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"25\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.exp(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"25\"><pre class=\"nb-text-output\">array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\n       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\n       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\n       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\n       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"28\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\"># mathematical operator</span>\nnp.sin(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"28\"><pre class=\"nb-text-output\">array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\n       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\n       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\n       -0.28790332, -0.96139749, -0.75098725,  0.14987721])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"29\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">np.log(arr_1)</code></pre></div><div class=\"nb-output\" data-prompt-number=\"29\"><pre class=\"nb-text-output\">array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\n       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\n       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\n       2.77258872, 2.83321334, 2.89037176, 2.94443898])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"><h2 id=\"numpy-indexing-and-selection\">Numpy indexing and selection</h2>\n</div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"31\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d = np.array([+.\n                   [<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">10</span>,<span class=\"hljs-number\">15</span>],[<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">23</span>,<span class=\"hljs-number\">45</span>],[<span class=\"hljs-number\">78</span>,<span class=\"hljs-number\">54</span>,<span class=\"hljs-number\">12</span>]])\n</code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"32\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d</code></pre></div><div class=\"nb-output\" data-prompt-number=\"32\"><pre class=\"nb-text-output\">array([[ 5, 10, 15],\n       [20, 23, 45],\n       [78, 54, 12]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"33\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"33\"><pre class=\"nb-text-output\">10</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"34\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"><span class=\"hljs-comment\">#Grab Everything from row 2 which is starting from column 1 to onwords</span>\narr_2d[:<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">1</span>:]\n</code></pre></div><div class=\"nb-output\" data-prompt-number=\"34\"><pre class=\"nb-text-output\">array([[10, 15],\n       [23, 45]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"42\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1</span>:]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"42\"><pre class=\"nb-text-output\">array([23, 45])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"47\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean = arr_2d &amp;gt; <span class=\"hljs-number\">30</span></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"48\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">boolean</code></pre></div><div class=\"nb-output\" data-prompt-number=\"48\"><pre class=\"nb-text-output\">array([[False, False, False],\n       [False, False,  True],\n       [ True,  True, False]])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"50\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[boolean]  </code></pre></div><div class=\"nb-output\" data-prompt-number=\"50\"><pre class=\"nb-text-output\">array([45, 78, 54])</pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"51\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\">arr_2d[arr_2d&amp;gt;<span class=\"hljs-number\">20</span>]</code></pre></div><div class=\"nb-output\" data-prompt-number=\"51\"><pre class=\"nb-text-output\">array([23, 45, 78, 54])</pre></div></div><div class=\"nb-cell nb-markdown-cell\"></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\" data-prompt-number=\"1\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div><div class=\"nb-cell nb-code-cell\"><div class=\"nb-input\"><pre class=\"\"><code class=\"lang-python hljs\" data-language=\"python\"></code></pre></div></div></div></div>"
  },
  "implementations": {
    "jupyter": {
      "dir": "machine_learning\\Numpy\\Fundamentals of Numpy.ipynb",
      "url": "https://github.com/TheAlgorithms/jupyter/tree/master/machine_learning\\Numpy\\Fundamentals of Numpy.ipynb",
      "code": "<span class=\"hljs-punctuation\">{</span>\r\n <span class=\"hljs-attr\">&quot;cells&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# Fundametal of Numpy&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;Numpy is linear algebra library for python .\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;this is importent library because all pydata ecosystem rely on numpy.&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;[1, 2, 3]&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;import numpy as np\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;arr = [1,2,3]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;arr&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([1, 2, 3])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.array(arr)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;[[1, 2, 3], [4, 5, 6], [7, 8, 9]]&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;my_mat = [[1,2,3],[4,5,6],[7,8,9]]\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;my_mat\\n&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[1, 2, 3],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [4, 5, 6],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [7, 8, 9]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.array(my_mat)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">6</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;2&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">6</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;my_mat[0][1]&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## Arange&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# np.arange(start , last , offset)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.arange(0,10)  &quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">10</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([0, 1, 2, 3, 4])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">10</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.arange(0,5,1)\\n&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">11</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([ 2,  4,  6,  8, 10])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">11</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.arange(2,12,2)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## Zeros &quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">12</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([0., 0., 0.])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">12</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# Zeros \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.zeros(3)  # one dimensional&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">13</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[0., 0., 0.],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [0., 0., 0.],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [0., 0., 0.]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">13</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.zeros((3,3))  # two dimensional&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## One&#x27;s&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">14</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([1., 1., 1., 1., 1.])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">14</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# one&#x27;s\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.ones(5)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[1., 1.],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [1., 1.]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.ones((2,2))&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## linespace&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">16</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">16</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# linspace -&gt; (start , end , how many point u want in between start to end)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.linspace(0,5,10)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## eye&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">17</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[1., 0., 0.],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [0., 1., 0.],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [0., 0., 1.]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">17</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# Diagonal element \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.eye(3)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## Random Function&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">22</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[0.93087129, 0.30534035, 0.2508104 ],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [0.05900399, 0.39901502, 0.00206355],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [0.10066378, 0.67083509, 0.95297132]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">22</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# random -&gt; (number of points in between )\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.random.rand(5)\\n&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">23</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[0.29917792, 0.88770559, 0.0923786 ],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [0.33748283, 0.56245829, 0.88557374],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [0.88111555, 0.40227034, 0.28943298]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">23</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.random.rand(3,3)    &quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">25</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([ 0.65926802, -0.18545583, -0.5672595 ])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">25</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# random based on standard normal distrubution\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.random.randn(3)\\n&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">27</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;8&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">27</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# random number between start to end anything in interger format\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.random.randint(1,20)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">29</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([18, 12, 16,  3,  4])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">29</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;#  start , end , numbers of points in between \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.random.randint(1,20,5)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## Reshape&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">33</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# reshape\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;# we can reshape the arr into 2 dimesional\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;# we can&#x27;t resize 10 into 2 row and 3 column or anything we have to reshape into row 2 and column 5\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;                \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;array = np.arange(10)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">35</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[0, 1, 2, 3, 4],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [5, 6, 7, 8, 9]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">35</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;array.reshape(2,5)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## Random &quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">44</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stdout&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;stream&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;text&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n      <span class=\"hljs-string\">&quot;17\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n      <span class=\"hljs-string\">&quot;2\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n      <span class=\"hljs-string\">&quot;0\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n      <span class=\"hljs-string\">&quot;2\\n&quot;</span>\r\n     <span class=\"hljs-punctuation\">]</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;number = np.random.randint(1,20,5);\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;print(number.max())\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;print(number.min())\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;print(number.argmax())  # return location where max is stored\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;print(number.argmin())  # return location where min is stored\\n&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## Shape&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">46</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;(10,)&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">46</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot; array.shape  #because its one dimesional &quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## dtype&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">49</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;dtype(&#x27;int32&#x27;)&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">49</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# type\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;array.dtype\\n&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">51</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;3&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">51</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# instead of writing like these -&gt; np.random.randint(1,20)\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;from numpy.random import randint\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;# then we can directly call randint which will return random number in between 3 to 10 \\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;randint(3,10)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_1 = np.arange(1,20)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## mathematical operator&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       18, 19])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_1 &quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">6</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([ 2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       36, 38])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">6</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_1 + arr_1&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">10</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       196, 225, 256, 289, 324, 361])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">10</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_1 * arr_1&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">8</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">8</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_1 - arr_1&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">11</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       1., 1.])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">11</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_1 / arr_1&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">12</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([ 10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       140, 150, 160, 170, 180, 190])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">12</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_1*10&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       196, 225, 256, 289, 324, 361], dtype=int32)&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">15</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_1**2&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">21</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([  1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144, 169,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       196, 225, 256, 289, 324, 361], dtype=int32)&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">21</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.square(arr_1)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">22</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;19&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">22</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.max(arr_1)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">23</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([1.        , 1.41421356, 1.73205081, 2.        , 2.23606798,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       2.44948974, 2.64575131, 2.82842712, 3.        , 3.16227766,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       3.31662479, 3.46410162, 3.60555128, 3.74165739, 3.87298335,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       4.        , 4.12310563, 4.24264069, 4.35889894])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">23</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.sqrt(arr_1)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">25</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([2.71828183e+00, 7.38905610e+00, 2.00855369e+01, 5.45981500e+01,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       1.48413159e+02, 4.03428793e+02, 1.09663316e+03, 2.98095799e+03,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       8.10308393e+03, 2.20264658e+04, 5.98741417e+04, 1.62754791e+05,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       4.42413392e+05, 1.20260428e+06, 3.26901737e+06, 8.88611052e+06,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       2.41549528e+07, 6.56599691e+07, 1.78482301e+08])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">25</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.exp(arr_1)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">28</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([ 0.84147098,  0.90929743,  0.14112001, -0.7568025 , -0.95892427,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       -0.2794155 ,  0.6569866 ,  0.98935825,  0.41211849, -0.54402111,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       -0.99999021, -0.53657292,  0.42016704,  0.99060736,  0.65028784,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       -0.28790332, -0.96139749, -0.75098725,  0.14987721])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">28</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;# mathematical operator\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;np.sin(arr_1)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">29</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([0.        , 0.69314718, 1.09861229, 1.38629436, 1.60943791,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       1.79175947, 1.94591015, 2.07944154, 2.19722458, 2.30258509,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       2.39789527, 2.48490665, 2.56494936, 2.63905733, 2.7080502 ,\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       2.77258872, 2.83321334, 2.89037176, 2.94443898])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">29</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;np.log(arr_1)&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;## Numpy indexing and selection&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">31</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_2d = np.array([+.\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;                   [5,10,15],[20,23,45],[78,54,12]])\\n&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">32</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[ 5, 10, 15],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [20, 23, 45],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [78, 54, 12]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">32</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_2d&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">33</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;10&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">33</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_2d[0][1]&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">34</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[10, 15],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [23, 45]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">34</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;#Grab Everything from row 2 which is starting from column 1 to onwords\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-string\">&quot;arr_2d[:2,1:]\\n&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">42</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([23, 45])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">42</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_2d[1,1:]&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">47</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;boolean = arr_2d &gt; 30&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">48</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([[False, False, False],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [False, False,  True],\\n&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n       <span class=\"hljs-string\">&quot;       [ True,  True, False]])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">48</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;boolean&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">50</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([45, 78, 54])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">50</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_2d[boolean]  &quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">51</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-punctuation\">{</span>\r\n     <span class=\"hljs-attr\">&quot;data&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n      <span class=\"hljs-attr\">&quot;text/plain&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n       <span class=\"hljs-string\">&quot;array([23, 45, 78, 54])&quot;</span>\r\n      <span class=\"hljs-punctuation\">]</span>\r\n     <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">51</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n     <span class=\"hljs-attr\">&quot;output_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;execute_result&quot;</span>\r\n    <span class=\"hljs-punctuation\">}</span>\r\n   <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\r\n    <span class=\"hljs-string\">&quot;arr_2d[arr_2d&gt;20]&quot;</span>\r\n   <span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;markdown&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">1</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;cell_type&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;code&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;execution_count&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">null</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span><span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;outputs&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;source&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">]</span>\r\n  <span class=\"hljs-punctuation\">}</span>\r\n <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\r\n <span class=\"hljs-attr\">&quot;metadata&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n  <span class=\"hljs-attr\">&quot;kernelspec&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;display_name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Python 3&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;language&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python3&quot;</span>\r\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n  <span class=\"hljs-attr\">&quot;language_info&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n   <span class=\"hljs-attr\">&quot;codemirror_mode&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\r\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ipython&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n    <span class=\"hljs-attr\">&quot;version&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">3</span>\r\n   <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;file_extension&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.py&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;mimetype&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;text/x-python&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;nbconvert_exporter&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;python&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;pygments_lexer&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ipython3&quot;</span><span class=\"hljs-punctuation\">,</span>\r\n   <span class=\"hljs-attr\">&quot;version&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;3.6.8&quot;</span>\r\n  <span class=\"hljs-punctuation\">}</span>\r\n <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\r\n <span class=\"hljs-attr\">&quot;nbformat&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">4</span><span class=\"hljs-punctuation\">,</span>\r\n <span class=\"hljs-attr\">&quot;nbformat_minor&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">2</span>\r\n<span class=\"hljs-punctuation\">}</span>\r\n"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}