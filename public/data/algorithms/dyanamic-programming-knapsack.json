{
  "slug": "dyanamic-programming-knapsack",
  "name": "Dyanamic Programming Knapsack",
  "categories": [
    "dynamicprogramming"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\dynamicprogramming\\DyanamicProgrammingKnapsack.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\dynamicprogramming\\DyanamicProgrammingKnapsack.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.dynamicprogramming;\r\n\r\n<span class=\"hljs-comment\">// A Dynamic Programming based solution</span>\r\n<span class=\"hljs-comment\">// for 0-1 Knapsack problem</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">DyanamicProgrammingKnapsack</span> {\r\n\r\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">max</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a, <span class=\"hljs-type\">int</span> b)</span> {\r\n        <span class=\"hljs-keyword\">return</span> (a &gt; b) ? a : b;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">// Returns the maximum value that can</span>\r\n    <span class=\"hljs-comment\">// be put in a knapsack of capacity W</span>\r\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">knapSack</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> W, <span class=\"hljs-type\">int</span> wt[], <span class=\"hljs-type\">int</span> val[], <span class=\"hljs-type\">int</span> n)</span> {\r\n        <span class=\"hljs-type\">int</span> i, w;\r\n        <span class=\"hljs-type\">int</span> K[][] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[n + <span class=\"hljs-number\">1</span>][W + <span class=\"hljs-number\">1</span>];\r\n\r\n        <span class=\"hljs-comment\">// Build table K[][] in bottom up manner</span>\r\n        <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt;= n; i++) {\r\n            <span class=\"hljs-keyword\">for</span> (w = <span class=\"hljs-number\">0</span>; w &lt;= W; w++) {\r\n                <span class=\"hljs-keyword\">if</span> (i == <span class=\"hljs-number\">0</span> || w == <span class=\"hljs-number\">0</span>) {\r\n                    K[i][w] = <span class=\"hljs-number\">0</span>;\r\n                } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (wt[i - <span class=\"hljs-number\">1</span>] &lt;= w) {\r\n                    K[i][w] = max(val[i - <span class=\"hljs-number\">1</span>] + K[i - <span class=\"hljs-number\">1</span>][w - wt[i - <span class=\"hljs-number\">1</span>]], K[i - <span class=\"hljs-number\">1</span>][w]);\r\n                } <span class=\"hljs-keyword\">else</span> {\r\n                    K[i][w] = K[i - <span class=\"hljs-number\">1</span>][w];\r\n                }\r\n            }\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">return</span> K[n][W];\r\n    }\r\n\r\n    <span class=\"hljs-comment\">// Driver code</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String args[])</span> {\r\n        <span class=\"hljs-type\">int</span> val[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">60</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">120</span>};\r\n        <span class=\"hljs-type\">int</span> wt[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">int</span>[]{<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>};\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">W</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">50</span>;\r\n        <span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">n</span> <span class=\"hljs-operator\">=</span> val.length;\r\n        System.out.println(knapSack(W, wt, val, n));\r\n    }\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Rajat Jain",
      "email": "rajatjain.jain29@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}