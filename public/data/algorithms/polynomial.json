{
  "slug": "polynomial",
  "name": "Polynomial",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths\\test\\Polynomial.test.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths\\test\\Polynomial.test.js",
      "code": "<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Polynomial</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../Polynomial&#x27;</span>\r\n\r\n<span class=\"hljs-title function_\">describe</span>(<span class=\"hljs-string\">&#x27;Polynomial&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should not return a expression for zero&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> polynomial = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Polynomial</span>([<span class=\"hljs-number\">0</span>])\r\n    <span class=\"hljs-title function_\">expect</span>(polynomial.<span class=\"hljs-title function_\">display</span>()).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should not return an expression for zero values&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> polynomial = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Polynomial</span>([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>])\r\n    <span class=\"hljs-title function_\">expect</span>(polynomial.<span class=\"hljs-title function_\">display</span>()).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return an expression for single a non zero value&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> polynomial = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Polynomial</span>([<span class=\"hljs-number\">9</span>])\r\n    <span class=\"hljs-title function_\">expect</span>(polynomial.<span class=\"hljs-title function_\">display</span>()).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-string\">&#x27;(9)&#x27;</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return an expression for two values&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> polynomial = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Polynomial</span>([<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>])\r\n    <span class=\"hljs-title function_\">expect</span>(polynomial.<span class=\"hljs-title function_\">display</span>()).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-string\">&#x27;(2x) + (3)&#x27;</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return an expression for values including zero&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> polynomial = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Polynomial</span>([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>])\r\n    <span class=\"hljs-title function_\">expect</span>(polynomial.<span class=\"hljs-title function_\">display</span>()).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-string\">&#x27;(2x)&#x27;</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should return an expression and evaluate it&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> polynomial = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Polynomial</span>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>])\r\n    <span class=\"hljs-title function_\">expect</span>(polynomial.<span class=\"hljs-title function_\">display</span>()).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-string\">&#x27;(4x^3) + (3x^2) + (2x) + (1)&#x27;</span>)\r\n    <span class=\"hljs-title function_\">expect</span>(polynomial.evaluate(<span class=\"hljs-number\">2</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-number\">49</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should evaluate 0 for zero values&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> polynomial = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Polynomial</span>([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>])\r\n    <span class=\"hljs-title function_\">expect</span>(polynomial.evaluate(<span class=\"hljs-number\">5</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-number\">0</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;should evaluate for negative values&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-keyword\">const</span> polynomial = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Polynomial</span>([-<span class=\"hljs-number\">1</span>, -<span class=\"hljs-number\">3</span>, -<span class=\"hljs-number\">4</span>, -<span class=\"hljs-number\">7</span>])\r\n    <span class=\"hljs-title function_\">expect</span>(polynomial.evaluate(-<span class=\"hljs-number\">5</span>)).<span class=\"hljs-title function_\">toBe</span>(<span class=\"hljs-number\">789</span>)\r\n  })\r\n})\r\n"
    }
  },
  "contributors": [
    {
      "name": "Rak Laptudirm",
      "email": "68542775+raklaptudirm@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Divyajyoti Ukirde",
      "email": "30872426+divyajyotiuk@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ephraim Atta-Duncan",
      "email": "55143799+dephraiim@users.noreply.github.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}