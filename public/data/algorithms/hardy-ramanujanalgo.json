{
  "slug": "hardy-ramanujanalgo",
  "name": "Hardy Ramanujanalgo",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "maths\\hardy_ramanujanalgo.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/maths\\hardy_ramanujanalgo.py",
      "code": "<span class=\"hljs-comment\"># This theorem states that the number of prime factors of n</span>\r\n<span class=\"hljs-comment\"># will be approximately log(log(n)) for most natural numbers n</span>\r\n\r\n<span class=\"hljs-keyword\">import</span> math\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">exactPrimeFactorCount</span>(<span class=\"hljs-params\">n</span>):\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    &gt;&gt;&gt; exactPrimeFactorCount(51242183)\r\n    3\r\n    &quot;&quot;&quot;</span>\r\n    count = <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-keyword\">if</span> n % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span>:\r\n        count += <span class=\"hljs-number\">1</span>\r\n        <span class=\"hljs-keyword\">while</span> n % <span class=\"hljs-number\">2</span> == <span class=\"hljs-number\">0</span>:\r\n            n = <span class=\"hljs-built_in\">int</span>(n / <span class=\"hljs-number\">2</span>)\r\n    <span class=\"hljs-comment\"># the n input value must be odd so that</span>\r\n    <span class=\"hljs-comment\"># we can skip one element (ie i += 2)</span>\r\n\r\n    i = <span class=\"hljs-number\">3</span>\r\n\r\n    <span class=\"hljs-keyword\">while</span> i &lt;= <span class=\"hljs-built_in\">int</span>(math.sqrt(n)):\r\n        <span class=\"hljs-keyword\">if</span> n % i == <span class=\"hljs-number\">0</span>:\r\n            count += <span class=\"hljs-number\">1</span>\r\n            <span class=\"hljs-keyword\">while</span> n % i == <span class=\"hljs-number\">0</span>:\r\n                n = <span class=\"hljs-built_in\">int</span>(n / i)\r\n        i = i + <span class=\"hljs-number\">2</span>\r\n\r\n    <span class=\"hljs-comment\"># this condition checks the prime</span>\r\n    <span class=\"hljs-comment\"># number n is greater than 2</span>\r\n\r\n    <span class=\"hljs-keyword\">if</span> n &gt; <span class=\"hljs-number\">2</span>:\r\n        count += <span class=\"hljs-number\">1</span>\r\n    <span class=\"hljs-keyword\">return</span> count\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    n = <span class=\"hljs-number\">51242183</span>\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;The number of distinct prime factors is/are <span class=\"hljs-subst\">{exactPrimeFactorCount(n)}</span>&quot;</span>)\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;The value of log(log(n)) is <span class=\"hljs-subst\">{math.log(math.log(n)):<span class=\"hljs-number\">.4</span>f}</span>&quot;</span>)\r\n\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    The number of distinct prime factors is/are 3\r\n    The value of log(log(n)) is 2.8765\r\n    &quot;&quot;&quot;</span>\r\n"
    }
  },
  "contributors": [
    {
      "name": "Alfin_William",
      "email": "alfinwilliam@gmail.com",
      "commits": 1
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}