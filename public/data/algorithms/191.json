{
  "slug": "191",
  "name": "191",
  "categories": [
    "leetcode"
  ],
  "body": {},
  "implementations": {
    "c": {
      "dir": "leetcode\\src\\191.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/leetcode\\src\\191.c",
      "code": "<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">hammingWeight</span><span class=\"hljs-params\">(<span class=\"hljs-type\">uint32_t</span> n)</span>\r\n{\r\n    <span class=\"hljs-type\">int</span> TotalBits = <span class=\"hljs-number\">32</span>;\r\n    <span class=\"hljs-type\">int</span> i, weight = <span class=\"hljs-number\">0</span>;\r\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; TotalBits; i++)\r\n    {\r\n        <span class=\"hljs-keyword\">if</span> (n &amp;\r\n            (UINT32_C(<span class=\"hljs-number\">1</span>)\r\n             &lt;&lt; i))  <span class=\"hljs-comment\">// if the bit on the ith position of 32 bit input is 1,</span>\r\n                     <span class=\"hljs-comment\">// then proceed Further note the use of UINT32_C to</span>\r\n                     <span class=\"hljs-comment\">// convert 1 to unsigned 32 bit int, as just 1 is treated</span>\r\n                     <span class=\"hljs-comment\">// as int which cannot be shifted left more than 30 times</span>\r\n            weight += <span class=\"hljs-number\">1</span>;\r\n    }\r\n    <span class=\"hljs-keyword\">return</span> weight;\r\n}"
    }
  },
  "contributors": [
    {
      "name": "SaurusXI",
      "email": "vermashantanu@hotmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}