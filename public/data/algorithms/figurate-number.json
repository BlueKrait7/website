{
  "slug": "figurate-number",
  "name": "Figurate Number",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "javascript": {
      "dir": "Maths\\test\\FigurateNumber.test.js",
      "url": "https://github.com/TheAlgorithms/javascript/tree/master/Maths\\test\\FigurateNumber.test.js",
      "code": "<span class=\"hljs-keyword\">import</span> {\r\n  isTriangular,\r\n  isTetrahedral,\r\n  isPentatope,\r\n  checkAll\r\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;../FigurateNumber&#x27;</span>\r\n\r\n<span class=\"hljs-title function_\">describe</span>(<span class=\"hljs-string\">&#x27;FigurateNumber&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Triangular : should return true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isTriangular</span>(<span class=\"hljs-number\">1</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">true</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Triangular : should return true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isTriangular</span>(<span class=\"hljs-number\">3</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">true</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Triangular : should return false&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isTriangular</span>(<span class=\"hljs-number\">5</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">false</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Triangular : should return true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isTriangular</span>(<span class=\"hljs-number\">171</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">true</span>)\r\n  })\r\n  <span class=\"hljs-comment\">/** End */</span>\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Tetrahedral : should return true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isTetrahedral</span>(<span class=\"hljs-number\">1</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">true</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Tetrahedral : should return true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isTetrahedral</span>(<span class=\"hljs-number\">4</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">true</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Tetrahedral : should return false&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isTetrahedral</span>(<span class=\"hljs-number\">3</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">false</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Tetrahedral : should return true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isTetrahedral</span>(<span class=\"hljs-number\">165</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">true</span>)\r\n  })\r\n\r\n  <span class=\"hljs-comment\">/** End */</span>\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Pentatope : should return true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isPentatope</span>(<span class=\"hljs-number\">1</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">true</span>)\r\n  })\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Pentatope : should return true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isPentatope</span>(<span class=\"hljs-number\">5</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">true</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Pentatope : should return false&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isPentatope</span>(<span class=\"hljs-number\">3</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">false</span>)\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Pentatope : should return true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">isPentatope</span>(<span class=\"hljs-number\">1001</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">true</span>)\r\n  })\r\n  <span class=\"hljs-comment\">/** End */</span>\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Check All : should return all true&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">checkAll</span>(<span class=\"hljs-number\">1</span>)).<span class=\"hljs-title function_\">toEqual</span>({\r\n      <span class=\"hljs-attr\">isTriangular</span>: <span class=\"hljs-literal\">true</span>,\r\n      <span class=\"hljs-attr\">isTetrahedral</span>: <span class=\"hljs-literal\">true</span>,\r\n      <span class=\"hljs-attr\">isPentatope</span>: <span class=\"hljs-literal\">true</span>\r\n    })\r\n  })\r\n\r\n  <span class=\"hljs-title function_\">it</span>(<span class=\"hljs-string\">&#x27;Check All : should return all true,true,false&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> {\r\n    <span class=\"hljs-title function_\">expect</span>(<span class=\"hljs-title function_\">checkAll</span>(<span class=\"hljs-number\">15</span>)).<span class=\"hljs-title function_\">toEqual</span>({\r\n      <span class=\"hljs-attr\">isTriangular</span>: <span class=\"hljs-literal\">true</span>,\r\n      <span class=\"hljs-attr\">isTetrahedral</span>: <span class=\"hljs-literal\">false</span>,\r\n      <span class=\"hljs-attr\">isPentatope</span>: <span class=\"hljs-literal\">true</span>\r\n    })\r\n  })\r\n})\r\n"
    }
  },
  "contributors": [
    {
      "name": "Rak Laptudirm",
      "email": "raklaptudirm@gmail.com",
      "commits": 1
    },
    {
      "name": "Badhusha",
      "email": "37366257+Badhusha-Akhthaar@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "VinWare",
      "email": "28603906+VinWare@users.noreply.github.com",
      "commits": 2
    },
    {
      "name": "Badhusha-Akhthaar",
      "email": "aashiquemd2212@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}