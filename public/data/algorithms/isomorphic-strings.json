{
  "slug": "isomorphic-strings",
  "name": "Isomorphic Strings",
  "categories": [
    "datastructures",
    "hashtable"
  ],
  "body": {},
  "implementations": {
    "ruby": {
      "dir": "data_structures\\hash_table\\isomorphic_strings.rb",
      "url": "https://github.com/TheAlgorithms/ruby/tree/master/data_structures\\hash_table\\isomorphic_strings.rb",
      "code": "<span class=\"hljs-comment\"># Challenge name: Isomorphic Strings</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># Given two strings s and t, determine if they are isomorphic.</span>\r\n<span class=\"hljs-comment\"># Two strings s and t are isomorphic if the characters in s can be replaced to get t.</span>\r\n<span class=\"hljs-comment\"># All occurrences of a character must be replaced with another character while preserving the order of characters.</span>\r\n<span class=\"hljs-comment\"># No two characters may map to the same character, but a character may map to itself.</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># Example 1:</span>\r\n<span class=\"hljs-comment\"># Input: s = &quot;egg&quot;, t = &quot;add&quot;</span>\r\n<span class=\"hljs-comment\"># Output: true</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># Example 2:</span>\r\n<span class=\"hljs-comment\"># Input: s = &quot;foo&quot;, t = &quot;bar&quot;</span>\r\n<span class=\"hljs-comment\"># Output: false</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># Example 3:</span>\r\n<span class=\"hljs-comment\"># Input: s = &quot;paper&quot;, t = &quot;title&quot;</span>\r\n<span class=\"hljs-comment\"># Output: true</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># Constraints:</span>\r\n<span class=\"hljs-comment\"># 1 &lt;= s.length &lt;= 5 * 104</span>\r\n<span class=\"hljs-comment\"># t.length == s.length</span>\r\n<span class=\"hljs-comment\"># s and t consist of any valid ascii character.</span>\r\n\r\n<span class=\"hljs-comment\"># Approach 1: Hash Map</span>\r\n<span class=\"hljs-comment\"># Time Complexity: O(N)</span>\r\n<span class=\"hljs-comment\"># Space Complexity: O(N)</span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">isomorphic_strings_check</span><span class=\"hljs-params\">(s, t)</span></span>\r\n  <span class=\"hljs-comment\"># store character mappings</span>\r\n  map = {}\r\n  <span class=\"hljs-comment\"># store already mapped characters</span>\r\n  set = []\r\n\r\n  (<span class=\"hljs-number\">0</span>..s.length - <span class=\"hljs-number\">1</span>).each <span class=\"hljs-keyword\">do</span> <span class=\"hljs-params\">|i|</span>\r\n    <span class=\"hljs-comment\"># store characters to compare</span>\r\n    char1 = s[i]\r\n    char2 = t[i]\r\n\r\n    <span class=\"hljs-comment\"># if char1 is mapped</span>\r\n    <span class=\"hljs-keyword\">if</span> map[char1]\r\n      <span class=\"hljs-comment\"># return false if char1 is mapped to a different character than already present</span>\r\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">if</span> map[char1] != char2\r\n    <span class=\"hljs-comment\"># if char1 is not mapped</span>\r\n    <span class=\"hljs-keyword\">else</span>\r\n      <span class=\"hljs-comment\"># return false if char2 is already mapped to a different character</span>\r\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span> <span class=\"hljs-keyword\">if</span> set.<span class=\"hljs-keyword\">include</span>?(char2)\r\n\r\n      <span class=\"hljs-comment\"># checks passed: add new character map and track that char2 has been mapped</span>\r\n      map[char1] = char2\r\n      set &lt;&lt; char2\r\n    <span class=\"hljs-keyword\">end</span>\r\n  <span class=\"hljs-keyword\">end</span>\r\n  <span class=\"hljs-literal\">true</span>\r\n<span class=\"hljs-keyword\">end</span>\r\n\r\nputs isomorphic_strings_check(<span class=\"hljs-string\">&#x27;egg&#x27;</span>, <span class=\"hljs-string\">&#x27;add&#x27;</span>)\r\n<span class=\"hljs-comment\"># =&gt; true</span>\r\n\r\nputs isomorphic_strings_check(<span class=\"hljs-string\">&#x27;foo&#x27;</span>, <span class=\"hljs-string\">&#x27;bar&#x27;</span>)\r\n<span class=\"hljs-comment\"># =&gt; false</span>\r\n\r\nputs isomorphic_strings_check(<span class=\"hljs-string\">&#x27;paper&#x27;</span>, <span class=\"hljs-string\">&#x27;title&#x27;</span>)\r\n<span class=\"hljs-comment\"># =&gt; true</span>\r\n"
    }
  },
  "contributors": [
    {
      "name": "Vitor Oliveira",
      "email": "vbrazo@gmail.com",
      "commits": 1
    },
    {
      "name": "Jessica Kwok",
      "email": "60627484+jsca-kwok@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Jessica Kwok",
      "email": "jessicatckwok@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}