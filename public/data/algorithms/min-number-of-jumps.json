{
  "slug": "min-number-of-jumps",
  "name": "Min Number of Jumps",
  "categories": [
    "dynamicprogramming"
  ],
  "body": {},
  "implementations": {
    "dart": {
      "dir": "dynamic_programming\\min_number_of_jumps.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/dynamic_programming\\min_number_of_jumps.dart",
      "code": "<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;dart:math&#x27;</span>;\r\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">&#x27;package:test/test.dart&#x27;</span>;\r\n\r\n<span class=\"hljs-built_in\">int</span> minimumNumberOfJumps(<span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; array) {\r\n  <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; jumps = <span class=\"hljs-built_in\">List</span>.generate((array.length), (index) =&gt; <span class=\"hljs-number\">1000000000000</span>);\r\n  jumps[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">0</span>;\r\n  <span class=\"hljs-built_in\">int</span> length = array.length;\r\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt; length; i++) {\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-built_in\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; i; j++) {\r\n      <span class=\"hljs-keyword\">if</span> (array[j] + j &gt;= i) {\r\n        jumps[i] = min(jumps[j] + <span class=\"hljs-number\">1</span>, jumps[i]);\r\n      }\r\n    }\r\n  }\r\n  <span class=\"hljs-keyword\">return</span> jumps[length - <span class=\"hljs-number\">1</span>];\r\n}\r\n\r\n<span class=\"hljs-keyword\">void</span> main() {\r\n  <span class=\"hljs-built_in\">List</span>&lt;<span class=\"hljs-built_in\">int</span>&gt; array;\r\n  test(<span class=\"hljs-string\">&#x27;test 1&#x27;</span>, () {\r\n    array = [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>];\r\n    expect(minimumNumberOfJumps(array), <span class=\"hljs-number\">4</span>);\r\n  });\r\n  test(<span class=\"hljs-string\">&#x27;test 2&#x27;</span>, () {\r\n    array = [<span class=\"hljs-number\">1</span>];\r\n    expect(minimumNumberOfJumps(array), <span class=\"hljs-number\">0</span>);\r\n  });\r\n  test(<span class=\"hljs-string\">&#x27;test 3&#x27;</span>, () {\r\n    array = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>];\r\n    expect(minimumNumberOfJumps(array), <span class=\"hljs-number\">1</span>);\r\n  });\r\n  test(<span class=\"hljs-string\">&#x27;test 4&#x27;</span>, () {\r\n    array = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>];\r\n    expect(minimumNumberOfJumps(array), <span class=\"hljs-number\">2</span>);\r\n  });\r\n  test(<span class=\"hljs-string\">&#x27;test 5&#x27;</span>, () {\r\n    array = [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>];\r\n    expect(minimumNumberOfJumps(array), <span class=\"hljs-number\">3</span>);\r\n  });\r\n  test(<span class=\"hljs-string\">&#x27;test 6&#x27;</span>, () {\r\n    array = [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>];\r\n    expect(minimumNumberOfJumps(array), <span class=\"hljs-number\">7</span>);\r\n  });\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Akash G Krishnan",
      "email": "krishnanag1996@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}