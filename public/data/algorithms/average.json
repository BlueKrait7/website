{
  "slug": "average",
  "name": "Average",
  "categories": [
    "math"
  ],
  "body": {},
  "implementations": {
    "java": {
      "dir": "src\\main\\java\\com\\thealgorithms\\maths\\Average.java",
      "url": "https://github.com/TheAlgorithms/java/tree/master/src\\main\\java\\com\\thealgorithms\\maths\\Average.java",
      "code": "<span class=\"hljs-keyword\">package</span> com.thealgorithms.maths;\r\n\r\n<span class=\"hljs-comment\">/**\r\n * Calculate average of a list of numbers\r\n */</span>\r\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Average</span> {\r\n\r\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">SMALL_VALUE</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0.00001f</span>;\r\n\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">(String[] args)</span> {\r\n        <span class=\"hljs-keyword\">assert</span> Math.abs(average(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">double</span>[]{<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">21</span>}) - <span class=\"hljs-number\">12</span>) &lt; SMALL_VALUE;\r\n        <span class=\"hljs-keyword\">assert</span> Math.abs(average(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">double</span>[]{<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">35</span>}) - <span class=\"hljs-number\">20</span>) &lt; SMALL_VALUE;\r\n        <span class=\"hljs-keyword\">assert</span> Math.abs(average(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">double</span>[]{<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>}) - <span class=\"hljs-number\">4.5</span>) &lt; SMALL_VALUE;\r\n        <span class=\"hljs-type\">int</span>[] array = {<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">10</span>};\r\n        <span class=\"hljs-keyword\">assert</span> <span class=\"hljs-title function_\">average</span><span class=\"hljs-params\">(array)</span> == <span class=\"hljs-number\">5</span>;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * Calculate average of a list of numbers\r\n     *\r\n     * <span class=\"hljs-doctag\">@param</span> numbers array to store numbers\r\n     * <span class=\"hljs-doctag\">@return</span> mean of given numbers\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-title function_\">average</span><span class=\"hljs-params\">(<span class=\"hljs-type\">double</span>[] numbers)</span> {\r\n        <span class=\"hljs-type\">double</span> <span class=\"hljs-variable\">sum</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">double</span> number : numbers) {\r\n            sum += number;\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> sum / numbers.length;\r\n    }\r\n\r\n    <span class=\"hljs-comment\">/**\r\n     * find average value of int array\r\n     *\r\n     * <span class=\"hljs-doctag\">@param</span> array the array contains element and the sum does not excess long\r\n     * value limit\r\n     * <span class=\"hljs-doctag\">@return</span> average value\r\n     */</span>\r\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">average</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span>[] array)</span> {\r\n        <span class=\"hljs-type\">long</span> <span class=\"hljs-variable\">sum</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>;\r\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> <span class=\"hljs-variable\">i</span> <span class=\"hljs-operator\">=</span> <span class=\"hljs-number\">0</span>; i &lt; array.length; ++i) {\r\n            sum += array[i];\r\n        }\r\n        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-type\">int</span>) (sum / array.length);\r\n    }\r\n}\r\n"
    },
    "dart": {
      "dir": "maths\\average.dart",
      "url": "https://github.com/TheAlgorithms/dart/tree/master/maths\\average.dart",
      "code": "<span class=\"hljs-comment\">//Find mean of a list of numbers.</span>\r\n\r\naverage(<span class=\"hljs-built_in\">List</span> numbers) {\r\n  <span class=\"hljs-keyword\">var</span> sum = <span class=\"hljs-number\">0</span>;\r\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> x <span class=\"hljs-keyword\">in</span> numbers) {\r\n    sum += x;\r\n  }\r\n  <span class=\"hljs-keyword\">var</span> avg = sum / numbers.length;\r\n  <span class=\"hljs-built_in\">print</span>(avg);\r\n  <span class=\"hljs-keyword\">return</span> avg;\r\n}\r\n\r\n<span class=\"hljs-keyword\">void</span> main() {\r\n  average([<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">60</span>]);\r\n}\r\n"
    },
    "kotlin": {
      "dir": "src\\main\\kotlin\\math\\Average.kt",
      "url": "https://github.com/TheAlgorithms/kotlin/tree/master/src\\main\\kotlin\\math\\Average.kt",
      "code": "<span class=\"hljs-keyword\">package</span> math\r\n\r\n\r\n<span class=\"hljs-comment\">/**\r\n * Calculate the average of a list of Double\r\n *\r\n * <span class=\"hljs-doctag\">@param</span> numbers array to store numbers\r\n * <span class=\"hljs-doctag\">@return</span> average of given numbers\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">average</span><span class=\"hljs-params\">(numbers: <span class=\"hljs-type\">Array</span>&lt;<span class=\"hljs-type\">Double</span>&gt;)</span></span>: <span class=\"hljs-built_in\">Double</span> {\r\n    <span class=\"hljs-keyword\">var</span> sum = <span class=\"hljs-number\">0.0</span>\r\n    <span class=\"hljs-keyword\">for</span> (number <span class=\"hljs-keyword\">in</span> numbers) {\r\n        sum += number\r\n    }\r\n    <span class=\"hljs-keyword\">return</span> sum / numbers.size\r\n}\r\n\r\n<span class=\"hljs-comment\">/**\r\n * Calculate the average of a list of Int\r\n *\r\n * <span class=\"hljs-doctag\">@param</span> numbers array to store numbers\r\n * <span class=\"hljs-doctag\">@return</span> average of given numbers\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">average</span><span class=\"hljs-params\">(numbers: <span class=\"hljs-type\">Array</span>&lt;<span class=\"hljs-type\">Int</span>&gt;)</span></span> : <span class=\"hljs-built_in\">Int</span> {\r\n    <span class=\"hljs-keyword\">var</span> sum = <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-keyword\">for</span> (number <span class=\"hljs-keyword\">in</span> numbers) {\r\n        sum += number\r\n    }\r\n    <span class=\"hljs-keyword\">return</span> sum / numbers.size\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Stepfen Shawn",
      "email": "m18824909883@163.com",
      "commits": 1
    },
    {
      "name": "PatOnTheBack",
      "email": "51241310+PatOnTheBack@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Aitor Fidalgo SÃ¡nchez",
      "email": "64830228+aitorfi@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "rabbit",
      "email": "d_rabbit@21cn.com",
      "commits": 1
    },
    {
      "name": "Adeoti Ayodeji",
      "email": "33290249+Lord-sarcastic@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Michael Fried",
      "email": "mikelfried@gmail.com",
      "commits": 1
    },
    {
      "name": "laurelr2020",
      "email": "reganlaurell@gmail.com",
      "commits": 2
    },
    {
      "name": "shellhub",
      "email": "shellhub.me@gmail.com",
      "commits": 2
    }
  ],
  "explanationUrl": {}
}