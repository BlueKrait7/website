{
  "slug": "password-generator",
  "name": "Password Generator",
  "categories": [
    "others"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "other\\password_generator.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/other\\password_generator.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;Password Generator allows you to generate a random password of length N.&quot;&quot;&quot;</span>\r\n<span class=\"hljs-keyword\">from</span> random <span class=\"hljs-keyword\">import</span> choice, shuffle\r\n<span class=\"hljs-keyword\">from</span> string <span class=\"hljs-keyword\">import</span> ascii_letters, digits, punctuation\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">password_generator</span>(<span class=\"hljs-params\">length=<span class=\"hljs-number\">8</span></span>):\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    &gt;&gt;&gt; len(password_generator())\r\n    8\r\n    &gt;&gt;&gt; len(password_generator(length=16))\r\n    16\r\n    &gt;&gt;&gt; len(password_generator(257))\r\n    257\r\n    &gt;&gt;&gt; len(password_generator(length=0))\r\n    0\r\n    &gt;&gt;&gt; len(password_generator(-1))\r\n    0\r\n    &quot;&quot;&quot;</span>\r\n    chars = ascii_letters + digits + punctuation\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>.join(choice(chars) <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(length))\r\n\r\n\r\n<span class=\"hljs-comment\"># ALTERNATIVE METHODS</span>\r\n<span class=\"hljs-comment\"># ctbi= characters that must be in password</span>\r\n<span class=\"hljs-comment\"># i= how many letters or characters the password length will be</span>\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">alternative_password_generator</span>(<span class=\"hljs-params\">ctbi, i</span>):\r\n    <span class=\"hljs-comment\"># Password Generator = full boot with random_number, random_letters, and</span>\r\n    <span class=\"hljs-comment\"># random_character FUNCTIONS</span>\r\n    <span class=\"hljs-comment\"># Put your code here...</span>\r\n    i = i - <span class=\"hljs-built_in\">len</span>(ctbi)\r\n    quotient = <span class=\"hljs-built_in\">int</span>(i / <span class=\"hljs-number\">3</span>)\r\n    remainder = i % <span class=\"hljs-number\">3</span>\r\n    <span class=\"hljs-comment\"># chars = ctbi + random_letters(ascii_letters, i / 3 + remainder) +</span>\r\n    <span class=\"hljs-comment\">#     random_number(digits, i / 3) + random_characters(punctuation, i / 3)</span>\r\n    chars = (\r\n        ctbi\r\n        + random(ascii_letters, quotient + remainder)\r\n        + random(digits, quotient)\r\n        + random(punctuation, quotient)\r\n    )\r\n    chars = <span class=\"hljs-built_in\">list</span>(chars)\r\n    shuffle(chars)\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>.join(chars)\r\n\r\n    <span class=\"hljs-comment\"># random is a generalised function for letters, characters and numbers</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">random</span>(<span class=\"hljs-params\">ctbi, i</span>):\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>.join(choice(ctbi) <span class=\"hljs-keyword\">for</span> x <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(i))\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">random_number</span>(<span class=\"hljs-params\">ctbi, i</span>):\r\n    <span class=\"hljs-keyword\">pass</span>  <span class=\"hljs-comment\"># Put your code here...</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">random_letters</span>(<span class=\"hljs-params\">ctbi, i</span>):\r\n    <span class=\"hljs-keyword\">pass</span>  <span class=\"hljs-comment\"># Put your code here...</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">random_characters</span>(<span class=\"hljs-params\">ctbi, i</span>):\r\n    <span class=\"hljs-keyword\">pass</span>  <span class=\"hljs-comment\"># Put your code here...</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>():\r\n    length = <span class=\"hljs-built_in\">int</span>(<span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Please indicate the max length of your password: &quot;</span>).strip())\r\n    ctbi = <span class=\"hljs-built_in\">input</span>(\r\n        <span class=\"hljs-string\">&quot;Please indicate the characters that must be in your password: &quot;</span>\r\n    ).strip()\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;Password generated:&quot;</span>, password_generator(length))\r\n    <span class=\"hljs-built_in\">print</span>(\r\n        <span class=\"hljs-string\">&quot;Alternative Password generated:&quot;</span>, alternative_password_generator(ctbi, length)\r\n    )\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;[If you are thinking of using this passsword, You better save it.]&quot;</span>)\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    main()\r\n"
    }
  },
  "contributors": [
    {
      "name": "Harshil Darji",
      "email": "darjiharshil2994@gmail.com",
      "commits": 1
    },
    {
      "name": "CodeB9",
      "email": "codeb38@gmail.com",
      "commits": 1
    },
    {
      "name": "Hector S",
      "email": "hfsam88@gmail.com",
      "commits": 1
    },
    {
      "name": "Goodness Ezeh",
      "email": "88127727+GoodnessEzeh@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Ankur Chattopadhyay",
      "email": "39518771+chttrjeankr@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "akankshamahajan99",
      "email": "47140026+akankshamahajan99@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "97arushisharma",
      "email": "97arushisharma@gmail.com",
      "commits": 1
    },
    {
      "name": "Ridiculous Ate",
      "email": "programmingdedication@gmail.com",
      "commits": 1
    },
    {
      "name": "edawine",
      "email": "sutanto.maxedwin@gmail.com",
      "commits": 1
    },
    {
      "name": "cclauss",
      "email": "cclauss@bluewin.ch",
      "commits": 2
    },
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 3
    }
  ],
  "explanationUrl": {}
}