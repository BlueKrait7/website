{
  "slug": "finding-bridges",
  "name": "Finding Bridges",
  "categories": [
    "graphs"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "graphs\\finding_bridges.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/graphs\\finding_bridges.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nAn edge is a bridge if, after removing it count of connected components in graph will\r\nbe increased by one. Bridges represent vulnerabilities in a connected network and are\r\nuseful for designing reliable networks. For example, in a wired computer network, an\r\narticulation point indicates the critical computers and a bridge indicates the critical\r\nwires or connections.\r\n\r\nFor more details, refer this article:\r\nhttps://www.geeksforgeeks.org/bridge-in-a-graph/\r\n&quot;&quot;&quot;</span>\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__get_demo_graph</span>(<span class=\"hljs-params\">index</span>):\r\n    <span class=\"hljs-keyword\">return</span> [\r\n        {\r\n            <span class=\"hljs-number\">0</span>: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>],\r\n            <span class=\"hljs-number\">1</span>: [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>],\r\n            <span class=\"hljs-number\">2</span>: [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>],\r\n            <span class=\"hljs-number\">3</span>: [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>],\r\n            <span class=\"hljs-number\">4</span>: [<span class=\"hljs-number\">3</span>],\r\n            <span class=\"hljs-number\">5</span>: [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span>],\r\n            <span class=\"hljs-number\">6</span>: [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>],\r\n            <span class=\"hljs-number\">7</span>: [<span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span>],\r\n            <span class=\"hljs-number\">8</span>: [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>],\r\n        },\r\n        {\r\n            <span class=\"hljs-number\">0</span>: [<span class=\"hljs-number\">6</span>],\r\n            <span class=\"hljs-number\">1</span>: [<span class=\"hljs-number\">9</span>],\r\n            <span class=\"hljs-number\">2</span>: [<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>],\r\n            <span class=\"hljs-number\">3</span>: [<span class=\"hljs-number\">4</span>],\r\n            <span class=\"hljs-number\">4</span>: [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>],\r\n            <span class=\"hljs-number\">5</span>: [<span class=\"hljs-number\">2</span>],\r\n            <span class=\"hljs-number\">6</span>: [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">7</span>],\r\n            <span class=\"hljs-number\">7</span>: [<span class=\"hljs-number\">6</span>],\r\n            <span class=\"hljs-number\">8</span>: [],\r\n            <span class=\"hljs-number\">9</span>: [<span class=\"hljs-number\">1</span>],\r\n        },\r\n        {\r\n            <span class=\"hljs-number\">0</span>: [<span class=\"hljs-number\">4</span>],\r\n            <span class=\"hljs-number\">1</span>: [<span class=\"hljs-number\">6</span>],\r\n            <span class=\"hljs-number\">2</span>: [],\r\n            <span class=\"hljs-number\">3</span>: [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>],\r\n            <span class=\"hljs-number\">4</span>: [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">6</span>],\r\n            <span class=\"hljs-number\">5</span>: [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>],\r\n            <span class=\"hljs-number\">6</span>: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">7</span>],\r\n            <span class=\"hljs-number\">7</span>: [<span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>],\r\n            <span class=\"hljs-number\">8</span>: [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>],\r\n            <span class=\"hljs-number\">9</span>: [<span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>],\r\n        },\r\n        {\r\n            <span class=\"hljs-number\">0</span>: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>],\r\n            <span class=\"hljs-number\">1</span>: [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>],\r\n            <span class=\"hljs-number\">2</span>: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>],\r\n            <span class=\"hljs-number\">3</span>: [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>],\r\n            <span class=\"hljs-number\">4</span>: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>],\r\n        },\r\n    ][index]\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">compute_bridges</span>(<span class=\"hljs-params\">graph: <span class=\"hljs-built_in\">dict</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">int</span>]]</span>) -&gt; <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">tuple</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">int</span>]]:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Return the list of undirected graph bridges [(a1, b1), ..., (ak, bk)]; ai &lt;= bi\r\n    &gt;&gt;&gt; compute_bridges(__get_demo_graph(0))\r\n    [(3, 4), (2, 3), (2, 5)]\r\n    &gt;&gt;&gt; compute_bridges(__get_demo_graph(1))\r\n    [(6, 7), (0, 6), (1, 9), (3, 4), (2, 4), (2, 5)]\r\n    &gt;&gt;&gt; compute_bridges(__get_demo_graph(2))\r\n    [(1, 6), (4, 6), (0, 4)]\r\n    &gt;&gt;&gt; compute_bridges(__get_demo_graph(3))\r\n    []\r\n    &gt;&gt;&gt; compute_bridges({})\r\n    []\r\n    &quot;&quot;&quot;</span>\r\n\r\n    <span class=\"hljs-built_in\">id</span> = <span class=\"hljs-number\">0</span>\r\n    n = <span class=\"hljs-built_in\">len</span>(graph)  <span class=\"hljs-comment\"># No of vertices in graph</span>\r\n    low = [<span class=\"hljs-number\">0</span>] * n\r\n    visited = [<span class=\"hljs-literal\">False</span>] * n\r\n\r\n    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">dfs</span>(<span class=\"hljs-params\">at, parent, bridges, <span class=\"hljs-built_in\">id</span></span>):\r\n        visited[at] = <span class=\"hljs-literal\">True</span>\r\n        low[at] = <span class=\"hljs-built_in\">id</span>\r\n        <span class=\"hljs-built_in\">id</span> += <span class=\"hljs-number\">1</span>\r\n        <span class=\"hljs-keyword\">for</span> to <span class=\"hljs-keyword\">in</span> graph[at]:\r\n            <span class=\"hljs-keyword\">if</span> to == parent:\r\n                <span class=\"hljs-keyword\">pass</span>\r\n            <span class=\"hljs-keyword\">elif</span> <span class=\"hljs-keyword\">not</span> visited[to]:\r\n                dfs(to, at, bridges, <span class=\"hljs-built_in\">id</span>)\r\n                low[at] = <span class=\"hljs-built_in\">min</span>(low[at], low[to])\r\n                <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">id</span> &lt;= low[to]:\r\n                    bridges.append((at, to) <span class=\"hljs-keyword\">if</span> at &lt; to <span class=\"hljs-keyword\">else</span> (to, at))\r\n            <span class=\"hljs-keyword\">else</span>:\r\n                <span class=\"hljs-comment\"># This edge is a back edge and cannot be a bridge</span>\r\n                low[at] = <span class=\"hljs-built_in\">min</span>(low[at], low[to])\r\n\r\n    bridges: <span class=\"hljs-built_in\">list</span>[<span class=\"hljs-built_in\">tuple</span>[<span class=\"hljs-built_in\">int</span>, <span class=\"hljs-built_in\">int</span>]] = []\r\n    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(n):\r\n        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> visited[i]:\r\n            dfs(i, -<span class=\"hljs-number\">1</span>, bridges, <span class=\"hljs-built_in\">id</span>)\r\n    <span class=\"hljs-keyword\">return</span> bridges\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "AlexDvorak",
      "email": "opti.jawsome@gmail.com",
      "commits": 1
    },
    {
      "name": "Rohan R Bharadwaj",
      "email": "rohanrbharadwaj@gmail.com",
      "commits": 1
    },
    {
      "name": "Boris Galochkin",
      "email": "spore17@mail.ru",
      "commits": 1
    },
    {
      "name": "William Zhang",
      "email": "39932068+WilliamHYZhang@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Farhan",
      "email": "farhankasmani956@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}