{
  "slug": "dutch-national-flag-sort",
  "name": "Dutch National Flag Sort",
  "categories": [
    "sorts"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "sorts\\dutch_national_flag_sort.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/sorts\\dutch_national_flag_sort.py",
      "code": "<span class=\"hljs-string\">&quot;&quot;&quot;\r\nA pure implementation of Dutch national flag (DNF) sort algorithm in Python.\r\nDutch National Flag algorithm is an algorithm originally designed by Edsger Dijkstra.\r\nIt is the most optimal sort for 3 unique values (eg. 0, 1, 2) in a sequence.  DNF can\r\nsort a sequence of n size with [0 &lt;= a[i] &lt;= 2] at guaranteed O(n) complexity in a\r\nsingle pass.\r\n\r\nThe flag of the Netherlands consists of three colors: white, red, and blue.\r\nThe task is to randomly arrange balls of white, red, and blue in such a way that balls\r\nof the same color are placed together.  DNF sorts a sequence of 0, 1, and 2&#x27;s in linear\r\ntime that does not consume any extra space.  This algorithm can be implemented only on\r\na sequence that contains three unique elements.\r\n\r\n1) Time complexity is O(n).\r\n2) Space complexity is O(1).\r\n\r\nMore info on: https://en.wikipedia.org/wiki/Dutch_national_flag_problem\r\n\r\nFor doctests run following command:\r\npython3 -m doctest -v dutch_national_flag_sort.py\r\n\r\nFor manual testing run:\r\npython dnf_sort.py\r\n&quot;&quot;&quot;</span>\r\n\r\n\r\n<span class=\"hljs-comment\"># Python program to sort a sequence containing only 0, 1 and 2 in a single pass.</span>\r\nred = <span class=\"hljs-number\">0</span>  <span class=\"hljs-comment\"># The first color of the flag.</span>\r\nwhite = <span class=\"hljs-number\">1</span>  <span class=\"hljs-comment\"># The second color of the flag.</span>\r\nblue = <span class=\"hljs-number\">2</span>  <span class=\"hljs-comment\"># The third color of the flag.</span>\r\ncolors = (red, white, blue)\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">dutch_national_flag_sort</span>(<span class=\"hljs-params\">sequence: <span class=\"hljs-built_in\">list</span></span>) -&gt; <span class=\"hljs-built_in\">list</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    A pure Python implementation of Dutch National Flag sort algorithm.\r\n    :param data: 3 unique integer values (e.g., 0, 1, 2) in an sequence\r\n    :return: The same collection in ascending order\r\n\r\n    &gt;&gt;&gt; dutch_national_flag_sort([])\r\n    []\r\n    &gt;&gt;&gt; dutch_national_flag_sort([0])\r\n    [0]\r\n    &gt;&gt;&gt; dutch_national_flag_sort([2, 1, 0, 0, 1, 2])\r\n    [0, 0, 1, 1, 2, 2]\r\n    &gt;&gt;&gt; dutch_national_flag_sort([0, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1])\r\n    [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2]\r\n    &gt;&gt;&gt; dutch_national_flag_sort(&quot;abacab&quot;)\r\n    Traceback (most recent call last):\r\n      ...\r\n    ValueError: The elements inside the sequence must contains only (0, 1, 2) values\r\n    &gt;&gt;&gt; dutch_national_flag_sort(&quot;Abacab&quot;)\r\n    Traceback (most recent call last):\r\n      ...\r\n    ValueError: The elements inside the sequence must contains only (0, 1, 2) values\r\n    &gt;&gt;&gt; dutch_national_flag_sort([3, 2, 3, 1, 3, 0, 3])\r\n    Traceback (most recent call last):\r\n      ...\r\n    ValueError: The elements inside the sequence must contains only (0, 1, 2) values\r\n    &gt;&gt;&gt; dutch_national_flag_sort([-1, 2, -1, 1, -1, 0, -1])\r\n    Traceback (most recent call last):\r\n      ...\r\n    ValueError: The elements inside the sequence must contains only (0, 1, 2) values\r\n    &gt;&gt;&gt; dutch_national_flag_sort([1.1, 2, 1.1, 1, 1.1, 0, 1.1])\r\n    Traceback (most recent call last):\r\n      ...\r\n    ValueError: The elements inside the sequence must contains only (0, 1, 2) values\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> sequence:\r\n        <span class=\"hljs-keyword\">return</span> []\r\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(sequence) == <span class=\"hljs-number\">1</span>:\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">list</span>(sequence)\r\n    low = <span class=\"hljs-number\">0</span>\r\n    high = <span class=\"hljs-built_in\">len</span>(sequence) - <span class=\"hljs-number\">1</span>\r\n    mid = <span class=\"hljs-number\">0</span>\r\n    <span class=\"hljs-keyword\">while</span> mid &lt;= high:\r\n        <span class=\"hljs-keyword\">if</span> sequence[mid] == colors[<span class=\"hljs-number\">0</span>]:\r\n            sequence[low], sequence[mid] = sequence[mid], sequence[low]\r\n            low += <span class=\"hljs-number\">1</span>\r\n            mid += <span class=\"hljs-number\">1</span>\r\n        <span class=\"hljs-keyword\">elif</span> sequence[mid] == colors[<span class=\"hljs-number\">1</span>]:\r\n            mid += <span class=\"hljs-number\">1</span>\r\n        <span class=\"hljs-keyword\">elif</span> sequence[mid] == colors[<span class=\"hljs-number\">2</span>]:\r\n            sequence[mid], sequence[high] = sequence[high], sequence[mid]\r\n            high -= <span class=\"hljs-number\">1</span>\r\n        <span class=\"hljs-keyword\">else</span>:\r\n            <span class=\"hljs-keyword\">raise</span> ValueError(\r\n                <span class=\"hljs-string\">f&quot;The elements inside the sequence must contains only <span class=\"hljs-subst\">{colors}</span> values&quot;</span>\r\n            )\r\n    <span class=\"hljs-keyword\">return</span> sequence\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n\r\n    user_input = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Enter numbers separated by commas:\\n&quot;</span>).strip()\r\n    unsorted = [<span class=\"hljs-built_in\">int</span>(item.strip()) <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> user_input.split(<span class=\"hljs-string\">&quot;,&quot;</span>)]\r\n    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">{dutch_national_flag_sort(unsorted)}</span>&quot;</span>)\r\n"
    }
  },
  "contributors": [
    {
      "name": "Kiran Hipparagi",
      "email": "49370990+KiranHipparagi@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}