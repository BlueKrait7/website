{
  "slug": "binary-count-trailing-zeros",
  "name": "Binary Count Trailing Zeros",
  "categories": [
    "bitmanipulation"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "bit_manipulation\\binary_count_trailing_zeros.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/bit_manipulation\\binary_count_trailing_zeros.py",
      "code": "<span class=\"hljs-keyword\">from</span> math <span class=\"hljs-keyword\">import</span> log2\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">binary_count_trailing_zeros</span>(<span class=\"hljs-params\">a: <span class=\"hljs-built_in\">int</span></span>) -&gt; <span class=\"hljs-built_in\">int</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    Take in 1 integer, return a number that is\r\n    the number of trailing zeros in binary representation of that number.\r\n\r\n    &gt;&gt;&gt; binary_count_trailing_zeros(25)\r\n    0\r\n    &gt;&gt;&gt; binary_count_trailing_zeros(36)\r\n    2\r\n    &gt;&gt;&gt; binary_count_trailing_zeros(16)\r\n    4\r\n    &gt;&gt;&gt; binary_count_trailing_zeros(58)\r\n    1\r\n    &gt;&gt;&gt; binary_count_trailing_zeros(4294967296)\r\n    32\r\n    &gt;&gt;&gt; binary_count_trailing_zeros(0)\r\n    0\r\n    &gt;&gt;&gt; binary_count_trailing_zeros(-10)\r\n    Traceback (most recent call last):\r\n        ...\r\n    ValueError: Input value must be a positive integer\r\n    &gt;&gt;&gt; binary_count_trailing_zeros(0.8)\r\n    Traceback (most recent call last):\r\n        ...\r\n    TypeError: Input value must be a &#x27;int&#x27; type\r\n    &gt;&gt;&gt; binary_count_trailing_zeros(&quot;0&quot;)\r\n    Traceback (most recent call last):\r\n        ...\r\n    TypeError: &#x27;&lt;&#x27; not supported between instances of &#x27;str&#x27; and &#x27;int&#x27;\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">if</span> a &lt; <span class=\"hljs-number\">0</span>:\r\n        <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Input value must be a positive integer&quot;</span>)\r\n    <span class=\"hljs-keyword\">elif</span> <span class=\"hljs-built_in\">isinstance</span>(a, <span class=\"hljs-built_in\">float</span>):\r\n        <span class=\"hljs-keyword\">raise</span> TypeError(<span class=\"hljs-string\">&quot;Input value must be a &#x27;int&#x27; type&quot;</span>)\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-keyword\">if</span> (a == <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">int</span>(log2(a &amp; -a))\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    <span class=\"hljs-keyword\">import</span> doctest\r\n\r\n    doctest.testmod()\r\n"
    }
  },
  "contributors": [
    {
      "name": "Vivek Patel",
      "email": "vicky.p8980@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}