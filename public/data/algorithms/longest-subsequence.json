{
  "slug": "longest-subsequence",
  "name": "Longest Subsequence",
  "categories": [
    "others"
  ],
  "body": {},
  "implementations": {
    "c": {
      "dir": "misc\\longest_subsequence.c",
      "url": "https://github.com/TheAlgorithms/c/tree/master/misc\\longest_subsequence.c",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdio.h&gt;</span></span>\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;stdlib.h&gt;</span></span>\r\n\r\n<span class=\"hljs-type\">void</span> <span class=\"hljs-title function_\">longestSub</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> *ARRAY, <span class=\"hljs-type\">int</span> ARRAY_LENGTH, <span class=\"hljs-type\">int</span> **RESULT, <span class=\"hljs-type\">int</span> *RESULT_LENGTH)</span>\r\n{  <span class=\"hljs-comment\">// RESULT and RESULT_LENGTH will be modified by their pointers</span>\r\n\r\n    <span class=\"hljs-keyword\">if</span> (ARRAY_LENGTH &lt;= <span class=\"hljs-number\">1</span>)\r\n    {\r\n        *RESULT = ARRAY;\r\n        *RESULT_LENGTH = ARRAY_LENGTH;\r\n    }\r\n    <span class=\"hljs-keyword\">else</span>\r\n    {\r\n        <span class=\"hljs-type\">int</span> PIVOT = ARRAY[<span class=\"hljs-number\">0</span>];\r\n        <span class=\"hljs-type\">int</span> *LONGEST_SUB = <span class=\"hljs-literal\">NULL</span>;\r\n        <span class=\"hljs-type\">int</span> i, j, LONGEST_SUB_LENGTH = <span class=\"hljs-number\">0</span>;\r\n        <span class=\"hljs-type\">int</span> TEMPORARY_ARRAY_LENGTH = <span class=\"hljs-number\">0</span>, *TEMPORARY_ARRAY = <span class=\"hljs-literal\">NULL</span>;\r\n\r\n        <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">1</span>; i &lt; ARRAY_LENGTH; i++)\r\n        {\r\n            <span class=\"hljs-keyword\">if</span> (ARRAY[i] &lt; PIVOT)\r\n            {\r\n                TEMPORARY_ARRAY_LENGTH = <span class=\"hljs-number\">0</span>;\r\n                TEMPORARY_ARRAY = <span class=\"hljs-literal\">NULL</span>;\r\n\r\n                <span class=\"hljs-keyword\">for</span> (j = i + <span class=\"hljs-number\">1</span>; j &lt; ARRAY_LENGTH; j++)\r\n                {\r\n                    <span class=\"hljs-keyword\">if</span> (ARRAY[j] &gt;= ARRAY[i])\r\n                    {\r\n                        TEMPORARY_ARRAY_LENGTH++;\r\n                        TEMPORARY_ARRAY = (<span class=\"hljs-type\">int</span> *)<span class=\"hljs-built_in\">realloc</span>(\r\n                            TEMPORARY_ARRAY,\r\n                            TEMPORARY_ARRAY_LENGTH * <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">int</span>));\r\n                        TEMPORARY_ARRAY[TEMPORARY_ARRAY_LENGTH - <span class=\"hljs-number\">1</span>] = ARRAY[j];\r\n                    }\r\n                }\r\n\r\n                longestSub(TEMPORARY_ARRAY, TEMPORARY_ARRAY_LENGTH,\r\n                           &amp;TEMPORARY_ARRAY, &amp;TEMPORARY_ARRAY_LENGTH);\r\n                <span class=\"hljs-keyword\">if</span> (LONGEST_SUB_LENGTH &lt; TEMPORARY_ARRAY_LENGTH + <span class=\"hljs-number\">1</span>)\r\n                {\r\n                    LONGEST_SUB_LENGTH = TEMPORARY_ARRAY_LENGTH + <span class=\"hljs-number\">1</span>;\r\n                    LONGEST_SUB = (<span class=\"hljs-type\">int</span> *)<span class=\"hljs-built_in\">realloc</span>(\r\n                        LONGEST_SUB, LONGEST_SUB_LENGTH * <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">int</span>));\r\n                    LONGEST_SUB[<span class=\"hljs-number\">0</span>] = ARRAY[i];\r\n\r\n                    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">1</span>; i &lt; LONGEST_SUB_LENGTH; i++)\r\n                        LONGEST_SUB[i] = TEMPORARY_ARRAY[i - <span class=\"hljs-number\">1</span>];\r\n                }\r\n            }\r\n        }\r\n\r\n        TEMPORARY_ARRAY = <span class=\"hljs-literal\">NULL</span>;\r\n        TEMPORARY_ARRAY_LENGTH = <span class=\"hljs-number\">0</span>;\r\n        <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">1</span>; i &lt; ARRAY_LENGTH; i++)\r\n        {\r\n            <span class=\"hljs-keyword\">if</span> (ARRAY[i] &gt;= PIVOT)\r\n            {\r\n                TEMPORARY_ARRAY_LENGTH++;\r\n                TEMPORARY_ARRAY = (<span class=\"hljs-type\">int</span> *)<span class=\"hljs-built_in\">realloc</span>(\r\n                    TEMPORARY_ARRAY, TEMPORARY_ARRAY_LENGTH * <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">int</span>));\r\n                TEMPORARY_ARRAY[TEMPORARY_ARRAY_LENGTH - <span class=\"hljs-number\">1</span>] = ARRAY[i];\r\n            }\r\n        }\r\n\r\n        longestSub(TEMPORARY_ARRAY, TEMPORARY_ARRAY_LENGTH, &amp;TEMPORARY_ARRAY,\r\n                   &amp;TEMPORARY_ARRAY_LENGTH);\r\n        <span class=\"hljs-keyword\">if</span> (TEMPORARY_ARRAY_LENGTH + <span class=\"hljs-number\">1</span> &gt; LONGEST_SUB_LENGTH)\r\n        {\r\n            LONGEST_SUB_LENGTH = TEMPORARY_ARRAY_LENGTH + <span class=\"hljs-number\">1</span>;\r\n            LONGEST_SUB =\r\n                (<span class=\"hljs-type\">int</span> *)<span class=\"hljs-built_in\">realloc</span>(LONGEST_SUB, LONGEST_SUB_LENGTH * <span class=\"hljs-keyword\">sizeof</span>(<span class=\"hljs-type\">int</span>));\r\n            LONGEST_SUB[<span class=\"hljs-number\">0</span>] = PIVOT;\r\n            <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">1</span>; i &lt; LONGEST_SUB_LENGTH; i++)\r\n                LONGEST_SUB[i] = TEMPORARY_ARRAY[i - <span class=\"hljs-number\">1</span>];\r\n        }\r\n        *RESULT = LONGEST_SUB;\r\n        *RESULT_LENGTH = LONGEST_SUB_LENGTH;\r\n    }\r\n}\r\n\r\n<span class=\"hljs-type\">int</span> <span class=\"hljs-title function_\">main</span><span class=\"hljs-params\">()</span>\r\n{\r\n    <span class=\"hljs-type\">int</span> EXAMPLE_LENGTH = <span class=\"hljs-number\">8</span>;\r\n    <span class=\"hljs-type\">int</span> EXAMPLE[] = {<span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">11</span>, <span class=\"hljs-number\">12</span>};\r\n\r\n    <span class=\"hljs-type\">int</span> *RESULT = <span class=\"hljs-literal\">NULL</span>;\r\n    <span class=\"hljs-type\">int</span> RESULT_LENGTH, i;\r\n\r\n    longestSub(EXAMPLE, EXAMPLE_LENGTH, &amp;RESULT, &amp;RESULT_LENGTH);\r\n\r\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;Longest Sub Sequence length: %d and it&#x27;s:\\n&quot;</span>, RESULT_LENGTH);\r\n    <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; RESULT_LENGTH; i++) <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%d &quot;</span>, RESULT[i]);\r\n    <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;\\n&quot;</span>);\r\n\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n}"
    }
  },
  "contributors": [],
  "explanationUrl": {}
}