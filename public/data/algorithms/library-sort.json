{
  "slug": "library-sort",
  "name": "Library Sort",
  "categories": [
    "sorts"
  ],
  "body": {},
  "implementations": {
    "c-plus-plus": {
      "dir": "sorting\\library_sort.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/sorting\\library_sort.cpp",
      "code": "<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">librarySort</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> *index, <span class=\"hljs-type\">int</span> n)</span> </span>{\r\n    <span class=\"hljs-type\">int</span> lib_size, index_pos,\r\n        *gaps,        <span class=\"hljs-comment\">// gaps</span>\r\n        *library[<span class=\"hljs-number\">2</span>];  <span class=\"hljs-comment\">// libraries</span>\r\n\r\n    <span class=\"hljs-type\">bool</span> target_lib, *numbered;\r\n\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">2</span>; i++) library[i] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">int</span>[n];\r\n\r\n    gaps = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">int</span>[n + <span class=\"hljs-number\">1</span>];\r\n    numbered = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-type\">bool</span>[n + <span class=\"hljs-number\">1</span>];\r\n\r\n    lib_size = <span class=\"hljs-number\">1</span>;\r\n    index_pos = <span class=\"hljs-number\">1</span>;\r\n    target_lib = <span class=\"hljs-number\">0</span>;\r\n    library[target_lib][<span class=\"hljs-number\">0</span>] = index[<span class=\"hljs-number\">0</span>];\r\n\r\n    <span class=\"hljs-keyword\">while</span> (index_pos &lt; n) {\r\n        <span class=\"hljs-comment\">// binary search</span>\r\n        <span class=\"hljs-type\">int</span> insert = std::<span class=\"hljs-built_in\">distance</span>(\r\n            library[target_lib],\r\n            std::<span class=\"hljs-built_in\">lower_bound</span>(library[target_lib],\r\n                             library[target_lib] + lib_size, index[index_pos]));\r\n\r\n        <span class=\"hljs-comment\">// if there is no gap to insert a new index ...</span>\r\n\r\n        <span class=\"hljs-keyword\">if</span> (numbered[insert] == <span class=\"hljs-literal\">true</span>) {\r\n            <span class=\"hljs-type\">int</span> prov_size = <span class=\"hljs-number\">0</span>, next_target_lib = !target_lib;\r\n\r\n            <span class=\"hljs-comment\">// update library and clear gaps</span>\r\n\r\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;= n; i++) {\r\n                <span class=\"hljs-keyword\">if</span> (numbered[i] == <span class=\"hljs-literal\">true</span>) {\r\n                    library[next_target_lib][prov_size] = gaps[i];\r\n                    prov_size++;\r\n                    numbered[i] = <span class=\"hljs-literal\">false</span>;\r\n                }\r\n\r\n                <span class=\"hljs-keyword\">if</span> (i &lt;= lib_size) {\r\n                    library[next_target_lib][prov_size] =\r\n                        library[target_lib][i];\r\n                    prov_size++;\r\n                }\r\n            }\r\n\r\n            target_lib = next_target_lib;\r\n            lib_size = prov_size - <span class=\"hljs-number\">1</span>;\r\n        } <span class=\"hljs-keyword\">else</span> {\r\n            numbered[insert] = <span class=\"hljs-literal\">true</span>;\r\n            gaps[insert] = index[index_pos];\r\n            index_pos++;\r\n        }\r\n    }\r\n\r\n    <span class=\"hljs-type\">int</span> index_pos_for_output = <span class=\"hljs-number\">0</span>;\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; index_pos_for_output &lt; n; i++) {\r\n        <span class=\"hljs-keyword\">if</span> (numbered[i] == <span class=\"hljs-literal\">true</span>) {\r\n            <span class=\"hljs-comment\">// std::cout &lt;&lt; gaps[i] &lt;&lt; std::endl;</span>\r\n            index[index_pos_for_output] = gaps[i];\r\n            index_pos_for_output++;\r\n        }\r\n\r\n        <span class=\"hljs-keyword\">if</span> (i &lt; lib_size) {\r\n            <span class=\"hljs-comment\">// std::cout &lt;&lt; library[target_lib][i] &lt;&lt; std::endl;</span>\r\n            index[index_pos_for_output] = library[target_lib][i];\r\n            index_pos_for_output++;\r\n        }\r\n    }\r\n}\r\n\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-comment\">// ---example--</span>\r\n    <span class=\"hljs-type\">int</span> index_ex[] = {<span class=\"hljs-number\">-6</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">-8</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">-12</span>};\r\n    <span class=\"hljs-type\">int</span> n_ex = <span class=\"hljs-built_in\">sizeof</span>(index_ex) / <span class=\"hljs-built_in\">sizeof</span>(index_ex[<span class=\"hljs-number\">0</span>]);\r\n\r\n    <span class=\"hljs-built_in\">librarySort</span>(index_ex, n_ex);\r\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;sorted array :&quot;</span> &lt;&lt; std::endl;\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; n_ex; i++) std::cout &lt;&lt; index_ex[i] &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span>;\r\n    std::cout &lt;&lt; std::endl;\r\n\r\n    <span class=\"hljs-comment\">/* --output--\r\n    sorted array :\r\n    -12 -8 -6 0 1 1 1 4 5 9 9\r\n    */</span>\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Krishna Vedala",
      "email": "7001608+kvedala@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Perukii",
      "email": "57752033+Perukii@users.noreply.github.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}