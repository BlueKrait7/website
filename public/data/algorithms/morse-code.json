{
  "slug": "morse-code",
  "name": "Morse Code",
  "categories": [
    "ciphers"
  ],
  "body": {},
  "implementations": {
    "python": {
      "dir": "ciphers\\morse_code.py",
      "url": "https://github.com/TheAlgorithms/python/tree/master/ciphers\\morse_code.py",
      "code": "<span class=\"hljs-comment\">#!/usr/bin/env python3</span>\r\n\r\n<span class=\"hljs-string\">&quot;&quot;&quot;\r\nPython program to translate to and from Morse code.\r\n\r\nhttps://en.wikipedia.org/wiki/Morse_code\r\n&quot;&quot;&quot;</span>\r\n\r\n<span class=\"hljs-comment\"># fmt: off</span>\r\nMORSE_CODE_DICT = {\r\n    <span class=\"hljs-string\">&quot;A&quot;</span>: <span class=\"hljs-string\">&quot;.-&quot;</span>, <span class=\"hljs-string\">&quot;B&quot;</span>: <span class=\"hljs-string\">&quot;-...&quot;</span>, <span class=\"hljs-string\">&quot;C&quot;</span>: <span class=\"hljs-string\">&quot;-.-.&quot;</span>, <span class=\"hljs-string\">&quot;D&quot;</span>: <span class=\"hljs-string\">&quot;-..&quot;</span>, <span class=\"hljs-string\">&quot;E&quot;</span>: <span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;F&quot;</span>: <span class=\"hljs-string\">&quot;..-.&quot;</span>, <span class=\"hljs-string\">&quot;G&quot;</span>: <span class=\"hljs-string\">&quot;--.&quot;</span>,\r\n    <span class=\"hljs-string\">&quot;H&quot;</span>: <span class=\"hljs-string\">&quot;....&quot;</span>, <span class=\"hljs-string\">&quot;I&quot;</span>: <span class=\"hljs-string\">&quot;..&quot;</span>, <span class=\"hljs-string\">&quot;J&quot;</span>: <span class=\"hljs-string\">&quot;.---&quot;</span>, <span class=\"hljs-string\">&quot;K&quot;</span>: <span class=\"hljs-string\">&quot;-.-&quot;</span>, <span class=\"hljs-string\">&quot;L&quot;</span>: <span class=\"hljs-string\">&quot;.-..&quot;</span>, <span class=\"hljs-string\">&quot;M&quot;</span>: <span class=\"hljs-string\">&quot;--&quot;</span>, <span class=\"hljs-string\">&quot;N&quot;</span>: <span class=\"hljs-string\">&quot;-.&quot;</span>,\r\n    <span class=\"hljs-string\">&quot;O&quot;</span>: <span class=\"hljs-string\">&quot;---&quot;</span>, <span class=\"hljs-string\">&quot;P&quot;</span>: <span class=\"hljs-string\">&quot;.--.&quot;</span>, <span class=\"hljs-string\">&quot;Q&quot;</span>: <span class=\"hljs-string\">&quot;--.-&quot;</span>, <span class=\"hljs-string\">&quot;R&quot;</span>: <span class=\"hljs-string\">&quot;.-.&quot;</span>, <span class=\"hljs-string\">&quot;S&quot;</span>: <span class=\"hljs-string\">&quot;...&quot;</span>, <span class=\"hljs-string\">&quot;T&quot;</span>: <span class=\"hljs-string\">&quot;-&quot;</span>, <span class=\"hljs-string\">&quot;U&quot;</span>: <span class=\"hljs-string\">&quot;..-&quot;</span>,\r\n    <span class=\"hljs-string\">&quot;V&quot;</span>: <span class=\"hljs-string\">&quot;...-&quot;</span>, <span class=\"hljs-string\">&quot;W&quot;</span>: <span class=\"hljs-string\">&quot;.--&quot;</span>, <span class=\"hljs-string\">&quot;X&quot;</span>: <span class=\"hljs-string\">&quot;-..-&quot;</span>, <span class=\"hljs-string\">&quot;Y&quot;</span>: <span class=\"hljs-string\">&quot;-.--&quot;</span>, <span class=\"hljs-string\">&quot;Z&quot;</span>: <span class=\"hljs-string\">&quot;--..&quot;</span>, <span class=\"hljs-string\">&quot;1&quot;</span>: <span class=\"hljs-string\">&quot;.----&quot;</span>,\r\n    <span class=\"hljs-string\">&quot;2&quot;</span>: <span class=\"hljs-string\">&quot;..---&quot;</span>, <span class=\"hljs-string\">&quot;3&quot;</span>: <span class=\"hljs-string\">&quot;...--&quot;</span>, <span class=\"hljs-string\">&quot;4&quot;</span>: <span class=\"hljs-string\">&quot;....-&quot;</span>, <span class=\"hljs-string\">&quot;5&quot;</span>: <span class=\"hljs-string\">&quot;.....&quot;</span>, <span class=\"hljs-string\">&quot;6&quot;</span>: <span class=\"hljs-string\">&quot;-....&quot;</span>, <span class=\"hljs-string\">&quot;7&quot;</span>: <span class=\"hljs-string\">&quot;--...&quot;</span>,\r\n    <span class=\"hljs-string\">&quot;8&quot;</span>: <span class=\"hljs-string\">&quot;---..&quot;</span>, <span class=\"hljs-string\">&quot;9&quot;</span>: <span class=\"hljs-string\">&quot;----.&quot;</span>, <span class=\"hljs-string\">&quot;0&quot;</span>: <span class=\"hljs-string\">&quot;-----&quot;</span>, <span class=\"hljs-string\">&quot;&amp;&quot;</span>: <span class=\"hljs-string\">&quot;.-...&quot;</span>, <span class=\"hljs-string\">&quot;@&quot;</span>: <span class=\"hljs-string\">&quot;.--.-.&quot;</span>,\r\n    <span class=\"hljs-string\">&quot;:&quot;</span>: <span class=\"hljs-string\">&quot;---...&quot;</span>, <span class=\"hljs-string\">&quot;,&quot;</span>: <span class=\"hljs-string\">&quot;--..--&quot;</span>, <span class=\"hljs-string\">&quot;.&quot;</span>: <span class=\"hljs-string\">&quot;.-.-.-&quot;</span>, <span class=\"hljs-string\">&quot;&#x27;&quot;</span>: <span class=\"hljs-string\">&quot;.----.&quot;</span>, <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>: <span class=\"hljs-string\">&quot;.-..-.&quot;</span>,\r\n    <span class=\"hljs-string\">&quot;?&quot;</span>: <span class=\"hljs-string\">&quot;..--..&quot;</span>, <span class=\"hljs-string\">&quot;/&quot;</span>: <span class=\"hljs-string\">&quot;-..-.&quot;</span>, <span class=\"hljs-string\">&quot;=&quot;</span>: <span class=\"hljs-string\">&quot;-...-&quot;</span>, <span class=\"hljs-string\">&quot;+&quot;</span>: <span class=\"hljs-string\">&quot;.-.-.&quot;</span>, <span class=\"hljs-string\">&quot;-&quot;</span>: <span class=\"hljs-string\">&quot;-....-&quot;</span>,\r\n    <span class=\"hljs-string\">&quot;(&quot;</span>: <span class=\"hljs-string\">&quot;-.--.&quot;</span>, <span class=\"hljs-string\">&quot;)&quot;</span>: <span class=\"hljs-string\">&quot;-.--.-&quot;</span>, <span class=\"hljs-string\">&quot;!&quot;</span>: <span class=\"hljs-string\">&quot;-.-.--&quot;</span>, <span class=\"hljs-string\">&quot; &quot;</span>: <span class=\"hljs-string\">&quot;/&quot;</span>\r\n}  <span class=\"hljs-comment\"># Exclamation mark is not in ITU-R recommendation</span>\r\n<span class=\"hljs-comment\"># fmt: on</span>\r\nREVERSE_DICT = {value: key <span class=\"hljs-keyword\">for</span> key, value <span class=\"hljs-keyword\">in</span> MORSE_CODE_DICT.items()}\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">encrypt</span>(<span class=\"hljs-params\">message: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    &gt;&gt;&gt; encrypt(&quot;Sos!&quot;)\r\n    &#x27;... --- ... -.-.--&#x27;\r\n    &gt;&gt;&gt; encrypt(&quot;SOS!&quot;) == encrypt(&quot;sos!&quot;)\r\n    True\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot; &quot;</span>.join(MORSE_CODE_DICT[char] <span class=\"hljs-keyword\">for</span> char <span class=\"hljs-keyword\">in</span> message.upper())\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">decrypt</span>(<span class=\"hljs-params\">message: <span class=\"hljs-built_in\">str</span></span>) -&gt; <span class=\"hljs-built_in\">str</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    &gt;&gt;&gt; decrypt(&#x27;... --- ... -.-.--&#x27;)\r\n    &#x27;SOS!&#x27;\r\n    &quot;&quot;&quot;</span>\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>.join(REVERSE_DICT[char] <span class=\"hljs-keyword\">for</span> char <span class=\"hljs-keyword\">in</span> message.split())\r\n\r\n\r\n<span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>() -&gt; <span class=\"hljs-literal\">None</span>:\r\n    <span class=\"hljs-string\">&quot;&quot;&quot;\r\n    &gt;&gt;&gt; s = &quot;&quot;.join(MORSE_CODE_DICT)\r\n    &gt;&gt;&gt; decrypt(encrypt(s)) == s\r\n    True\r\n    &quot;&quot;&quot;</span>\r\n    message = <span class=\"hljs-string\">&quot;Morse code here!&quot;</span>\r\n    <span class=\"hljs-built_in\">print</span>(message)\r\n    message = encrypt(message)\r\n    <span class=\"hljs-built_in\">print</span>(message)\r\n    message = decrypt(message)\r\n    <span class=\"hljs-built_in\">print</span>(message)\r\n\r\n\r\n<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:\r\n    main()\r\n"
    },
    "c-plus-plus": {
      "dir": "ciphers\\morse_code.cpp",
      "url": "https://github.com/TheAlgorithms/c-plus-plus/tree/master/ciphers\\morse_code.cpp",
      "code": "<span class=\"hljs-comment\">/**\r\n * @file\r\n * @author [Deep Raval](https://github.com/imdeep2905)\r\n *\r\n * @brief Implementation of [Morse Code]\r\n * (https://en.wikipedia.org/wiki/Morse_code).\r\n *\r\n * @details\r\n * Morse code is a method used in telecommunication to encode text characters\r\n * as standardized sequences of two different signal durations, called dots\r\n * and dashes or dits and dahs. Morse code is named after Samuel Morse, an\r\n * inventor of the telegraph.\r\n */</span>\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cassert&gt;</span></span>\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;string&gt;</span></span>\r\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;vector&gt;</span></span>\r\n\r\n<span class=\"hljs-comment\">/** \\namespace ciphers\r\n * \\brief Algorithms for encryption and decryption\r\n */</span>\r\n<span class=\"hljs-keyword\">namespace</span> ciphers {\r\n<span class=\"hljs-comment\">/** \\namespace morse\r\n * \\brief Functions for [Morse Code]\r\n * (https://en.wikipedia.org/wiki/Morse_code).\r\n */</span>\r\n<span class=\"hljs-keyword\">namespace</span> morse {\r\n<span class=\"hljs-comment\">/**\r\n * Get the morse representation for given character.\r\n * @param c Character\r\n * @returns morse representation string of character\r\n */</span>\r\n<span class=\"hljs-function\">std::string <span class=\"hljs-title\">char_to_morse</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> &amp;c)</span> </span>{\r\n    <span class=\"hljs-comment\">// return corresponding morse code</span>\r\n    <span class=\"hljs-keyword\">switch</span> (c) {\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;a&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;.-&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;b&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-...&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;c&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-.-.&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;d&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-..&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;e&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;.&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;f&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;..-.&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;g&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;--.&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;h&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;....&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;i&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;..&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;j&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;.---&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;k&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-.-&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;l&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;.-..&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;m&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;--&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;n&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-.&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;o&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;---&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;p&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;.--.&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;q&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;--.-&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;r&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;.-.&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;s&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;...&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;t&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;u&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;..-&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;v&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;...-&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;w&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;.--&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;x&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-..-&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;y&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-.--&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;z&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;--..&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;1&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;.----&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;2&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;..---&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;3&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;...--&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;4&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;....-&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;5&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;.....&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;6&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-....&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;7&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;--...&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;8&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;---..&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;9&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;----.&quot;</span>;\r\n        <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">&#x27;0&#x27;</span>:\r\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;-----&quot;</span>;\r\n        <span class=\"hljs-keyword\">default</span>:\r\n            std::cerr &lt;&lt; <span class=\"hljs-string\">&quot;Found invalid character: &quot;</span> &lt;&lt; c &lt;&lt; <span class=\"hljs-string\">&#x27; &#x27;</span> &lt;&lt; std::endl;\r\n            std::<span class=\"hljs-built_in\">exit</span>(<span class=\"hljs-number\">0</span>);\r\n    }\r\n}\r\n<span class=\"hljs-comment\">/**\r\n * Get character from the morse representation.\r\n * @param s Morse representation\r\n * @returns corresponding character\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">char</span> <span class=\"hljs-title\">morse_to_char</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> std::string &amp;s)</span> </span>{\r\n    <span class=\"hljs-comment\">// return corresponding character</span>\r\n    <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;.-&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;a&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-...&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;b&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-.-.&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;c&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-..&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;d&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;.&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;e&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;..-.&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;f&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;--.&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;g&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;....&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;h&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;..&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;i&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;.---&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;j&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-.-&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;k&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;.-..&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;l&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;--&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;m&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-.&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;n&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;---&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;o&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;.--.&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;p&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;--.-&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;q&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;.-.&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;r&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;...&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;s&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;t&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;..-&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;u&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;...-&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;v&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;.--&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;w&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-..-&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;x&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-.--&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;y&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;--..&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;z&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;.----&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;1&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;..---&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;2&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;...--&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;3&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;....-&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;4&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;.....&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;5&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-....&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;6&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;--...&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;7&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;---..&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;8&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;----.&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;9&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (s == <span class=\"hljs-string\">&quot;-----&quot;</span>) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;0&#x27;</span>;\r\n    } <span class=\"hljs-keyword\">else</span> {\r\n        std::cerr &lt;&lt; <span class=\"hljs-string\">&quot;Found invalid Morse code: &quot;</span> &lt;&lt; s &lt;&lt; <span class=\"hljs-string\">&#x27; &#x27;</span> &lt;&lt; std::endl;\r\n        std::<span class=\"hljs-built_in\">exit</span>(<span class=\"hljs-number\">0</span>);\r\n    }\r\n}\r\n<span class=\"hljs-comment\">/**\r\n * Encrypt given text using morse code.\r\n * @param text text to be encrypted\r\n * @returns new encrypted text\r\n */</span>\r\n<span class=\"hljs-function\">std::string <span class=\"hljs-title\">encrypt</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> std::string &amp;text)</span> </span>{\r\n    std::string encrypted_text = <span class=\"hljs-string\">&quot;&quot;</span>;  <span class=\"hljs-comment\">// Empty string to store encrypted text</span>\r\n    <span class=\"hljs-comment\">// Going through each character of text and converting it</span>\r\n    <span class=\"hljs-comment\">// to morse representation</span>\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> &amp;c : text) {\r\n        encrypted_text += ciphers::morse::<span class=\"hljs-built_in\">char_to_morse</span>(c) + <span class=\"hljs-string\">&quot; &quot;</span>;\r\n    }\r\n    <span class=\"hljs-keyword\">return</span> encrypted_text;  <span class=\"hljs-comment\">// Returning encrypted text</span>\r\n}\r\n<span class=\"hljs-comment\">/**\r\n * Decrypt given morse coded text.\r\n * @param text text to be decrypted\r\n * @returns new decrypted text\r\n */</span>\r\n<span class=\"hljs-function\">std::string <span class=\"hljs-title\">decrypt</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> std::string &amp;text)</span> </span>{\r\n    <span class=\"hljs-comment\">// Going through each character of text and converting it</span>\r\n    <span class=\"hljs-comment\">// back to normal representation.</span>\r\n    std::string decrypted_text = <span class=\"hljs-string\">&quot;&quot;</span>;  <span class=\"hljs-comment\">// Empty string to store decrypted text</span>\r\n    <span class=\"hljs-comment\">// Spliting string (with delimiter = &quot; &quot;) and storing it</span>\r\n    <span class=\"hljs-comment\">// in vector</span>\r\n    std::<span class=\"hljs-type\">size_t</span> pos_start = <span class=\"hljs-number\">0</span>, pos_end = <span class=\"hljs-number\">0</span>, delim_len = <span class=\"hljs-number\">1</span>;\r\n    std::vector&lt;std::string&gt; splits;\r\n    <span class=\"hljs-keyword\">while</span> ((pos_end = text.<span class=\"hljs-built_in\">find</span>(<span class=\"hljs-string\">&#x27; &#x27;</span>, pos_start)) != std::string::npos) {\r\n        std::string token = text.<span class=\"hljs-built_in\">substr</span>(pos_start, pos_end - pos_start);\r\n        pos_start = pos_end + delim_len;\r\n        splits.<span class=\"hljs-built_in\">push_back</span>(token);\r\n    }\r\n\r\n    <span class=\"hljs-comment\">// Traversing through each morse code string</span>\r\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">const</span> std::string &amp;s : splits) {\r\n        <span class=\"hljs-comment\">// Add corresponding character</span>\r\n        decrypted_text += ciphers::morse::<span class=\"hljs-built_in\">morse_to_char</span>(s);\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">return</span> decrypted_text;  <span class=\"hljs-comment\">// Returning decrypted text</span>\r\n}\r\n}  <span class=\"hljs-comment\">// namespace morse</span>\r\n}  <span class=\"hljs-comment\">// namespace ciphers</span>\r\n\r\n<span class=\"hljs-comment\">/**\r\n * @brief Function to test above algorithm\r\n * @returns void\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">static</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-comment\">// Test 1</span>\r\n    std::string text1 = <span class=\"hljs-string\">&quot;01234567890&quot;</span>;\r\n    std::string encrypted1 = ciphers::morse::<span class=\"hljs-built_in\">encrypt</span>(text1);\r\n    std::string decrypted1 = ciphers::morse::<span class=\"hljs-built_in\">decrypt</span>(encrypted1);\r\n    <span class=\"hljs-built_in\">assert</span>(text1 == decrypted1);\r\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Original text : &quot;</span> &lt;&lt; text1 &lt;&lt; std::endl;\r\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Encrypted text : &quot;</span> &lt;&lt; encrypted1 &lt;&lt; std::endl;\r\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Decrypted text : &quot;</span> &lt;&lt; decrypted1 &lt;&lt; std::endl;\r\n    <span class=\"hljs-comment\">// Test 2</span>\r\n    std::string text2 = <span class=\"hljs-string\">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>;\r\n    std::string encrypted2 = ciphers::morse::<span class=\"hljs-built_in\">encrypt</span>(text2);\r\n    std::string decrypted2 = ciphers::morse::<span class=\"hljs-built_in\">decrypt</span>(encrypted2);\r\n    <span class=\"hljs-built_in\">assert</span>(text2 == decrypted2);\r\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Original text : &quot;</span> &lt;&lt; text2 &lt;&lt; std::endl;\r\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Encrypted text : &quot;</span> &lt;&lt; encrypted2 &lt;&lt; std::endl;\r\n    std::cout &lt;&lt; <span class=\"hljs-string\">&quot;Decrypted text : &quot;</span> &lt;&lt; decrypted2 &lt;&lt; std::endl;\r\n}\r\n\r\n<span class=\"hljs-comment\">/**\r\n * @brief Main function\r\n * @returns 0 on exit\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span> </span>{\r\n    <span class=\"hljs-comment\">// Testing</span>\r\n    <span class=\"hljs-built_in\">test</span>();\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\r\n}\r\n"
    },
    "rust": {
      "dir": "src\\ciphers\\morse_code.rs",
      "url": "https://github.com/TheAlgorithms/rust/tree/master/src\\ciphers\\morse_code.rs",
      "code": "<span class=\"hljs-keyword\">use</span> std::collections::HashMap;\r\n<span class=\"hljs-keyword\">use</span> std::io;\r\n\r\n<span class=\"hljs-keyword\">const</span> UNKNOWN_CHARACTER: &amp;<span class=\"hljs-type\">str</span> = <span class=\"hljs-string\">&quot;........&quot;</span>;\r\n<span class=\"hljs-keyword\">const</span> _UNKNOWN_MORSE_CHARACTER: &amp;<span class=\"hljs-type\">str</span> = <span class=\"hljs-string\">&quot;_&quot;</span>;\r\n\r\n<span class=\"hljs-keyword\">pub</span> <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">encode</span>(message: &amp;<span class=\"hljs-type\">str</span>) <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">String</span> {\r\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">dictionary</span> = _morse_dictionary();\r\n    message\r\n        .<span class=\"hljs-title function_ invoke__\">chars</span>()\r\n        .<span class=\"hljs-title function_ invoke__\">into_iter</span>()\r\n        .<span class=\"hljs-title function_ invoke__\">map</span>(|<span class=\"hljs-type\">char</span>| <span class=\"hljs-type\">char</span>.<span class=\"hljs-title function_ invoke__\">to_uppercase</span>().<span class=\"hljs-title function_ invoke__\">to_string</span>())\r\n        .<span class=\"hljs-title function_ invoke__\">map</span>(|letter| dictionary.<span class=\"hljs-title function_ invoke__\">get</span>(letter.<span class=\"hljs-title function_ invoke__\">as_str</span>()))\r\n        .<span class=\"hljs-title function_ invoke__\">map</span>(|option| option.<span class=\"hljs-title function_ invoke__\">unwrap_or</span>(&amp;UNKNOWN_CHARACTER).<span class=\"hljs-title function_ invoke__\">to_string</span>())\r\n        .collect::&lt;<span class=\"hljs-type\">Vec</span>&lt;<span class=\"hljs-type\">String</span>&gt;&gt;()\r\n        .<span class=\"hljs-title function_ invoke__\">join</span>(<span class=\"hljs-string\">&quot; &quot;</span>)\r\n}\r\n\r\n<span class=\"hljs-comment\">// Declaritive macro for creating readable map declarations, for more info see https://doc.rust-lang.org/book/ch19-06-macros.html</span>\r\n<span class=\"hljs-built_in\">macro_rules!</span> map {\r\n    ($($key:expr =&gt; $value:expr),* $(,)?) =&gt; {\r\n        std::iter::<span class=\"hljs-built_in\">Iterator</span>::<span class=\"hljs-title function_ invoke__\">collect</span>(std::array::IntoIter::<span class=\"hljs-title function_ invoke__\">new</span>([$(($key, $value),)*]))\r\n    };\r\n}\r\n\r\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">_morse_dictionary</span>() <span class=\"hljs-punctuation\">-&gt;</span> HashMap&lt;&amp;<span class=\"hljs-symbol\">&#x27;static</span> <span class=\"hljs-type\">str</span>, &amp;<span class=\"hljs-symbol\">&#x27;static</span> <span class=\"hljs-type\">str</span>&gt; {\r\n    map! {\r\n        <span class=\"hljs-string\">&quot;A&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-&quot;</span>,      <span class=\"hljs-string\">&quot;B&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-...&quot;</span>,    <span class=\"hljs-string\">&quot;C&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.-.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;D&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-..&quot;</span>,     <span class=\"hljs-string\">&quot;E&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.&quot;</span>,       <span class=\"hljs-string\">&quot;F&quot;</span> =&gt; <span class=\"hljs-string\">&quot;..-.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;G&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--.&quot;</span>,     <span class=\"hljs-string\">&quot;H&quot;</span> =&gt; <span class=\"hljs-string\">&quot;....&quot;</span>,    <span class=\"hljs-string\">&quot;I&quot;</span> =&gt; <span class=\"hljs-string\">&quot;..&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;J&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.---&quot;</span>,    <span class=\"hljs-string\">&quot;K&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.-&quot;</span>,     <span class=\"hljs-string\">&quot;L&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-..&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;M&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--&quot;</span>,      <span class=\"hljs-string\">&quot;N&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.&quot;</span>,      <span class=\"hljs-string\">&quot;O&quot;</span> =&gt; <span class=\"hljs-string\">&quot;---&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;P&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.--.&quot;</span>,    <span class=\"hljs-string\">&quot;Q&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--.-&quot;</span>,    <span class=\"hljs-string\">&quot;R&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;S&quot;</span> =&gt; <span class=\"hljs-string\">&quot;...&quot;</span>,     <span class=\"hljs-string\">&quot;T&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-&quot;</span>,       <span class=\"hljs-string\">&quot;U&quot;</span> =&gt; <span class=\"hljs-string\">&quot;..-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;V&quot;</span> =&gt; <span class=\"hljs-string\">&quot;...-&quot;</span>,    <span class=\"hljs-string\">&quot;W&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.--&quot;</span>,     <span class=\"hljs-string\">&quot;X&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-..-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;Y&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.--&quot;</span>,    <span class=\"hljs-string\">&quot;Z&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--..&quot;</span>,\r\n\r\n        <span class=\"hljs-string\">&quot;1&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.----&quot;</span>,   <span class=\"hljs-string\">&quot;2&quot;</span> =&gt; <span class=\"hljs-string\">&quot;..---&quot;</span>,   <span class=\"hljs-string\">&quot;3&quot;</span> =&gt; <span class=\"hljs-string\">&quot;...--&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;4&quot;</span> =&gt; <span class=\"hljs-string\">&quot;....-&quot;</span>,   <span class=\"hljs-string\">&quot;5&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.....&quot;</span>,   <span class=\"hljs-string\">&quot;6&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-....&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;7&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--...&quot;</span>,   <span class=\"hljs-string\">&quot;8&quot;</span> =&gt; <span class=\"hljs-string\">&quot;---..&quot;</span>,   <span class=\"hljs-string\">&quot;9&quot;</span> =&gt; <span class=\"hljs-string\">&quot;----.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;0&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-----&quot;</span>,\r\n\r\n        <span class=\"hljs-string\">&quot;&amp;&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-...&quot;</span>,   <span class=\"hljs-string\">&quot;@&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.--.-.&quot;</span>,  <span class=\"hljs-string\">&quot;:&quot;</span> =&gt; <span class=\"hljs-string\">&quot;---...&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;,&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--..--&quot;</span>,  <span class=\"hljs-string\">&quot;.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-.-.-&quot;</span>,  <span class=\"hljs-string\">&quot;&#x27;&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.----.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;\\&quot;&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-..-.&quot;</span>, <span class=\"hljs-string\">&quot;?&quot;</span> =&gt; <span class=\"hljs-string\">&quot;..--..&quot;</span>,  <span class=\"hljs-string\">&quot;/&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-..-.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;=&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-...-&quot;</span>,   <span class=\"hljs-string\">&quot;+&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-.-.&quot;</span>,   <span class=\"hljs-string\">&quot;-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-....-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;(&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.--.&quot;</span>,   <span class=\"hljs-string\">&quot;)&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.--.-&quot;</span>,  <span class=\"hljs-string\">&quot; &quot;</span> =&gt; <span class=\"hljs-string\">&quot;/&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;!&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.-.--&quot;</span>,\r\n    }\r\n}\r\n\r\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">_morse_to_alphanumeric_dictionary</span>() <span class=\"hljs-punctuation\">-&gt;</span> HashMap&lt;&amp;<span class=\"hljs-symbol\">&#x27;static</span> <span class=\"hljs-type\">str</span>, &amp;<span class=\"hljs-symbol\">&#x27;static</span> <span class=\"hljs-type\">str</span>&gt; {\r\n    map! {\r\n        <span class=\"hljs-string\">&quot;.-&quot;</span>   =&gt;  <span class=\"hljs-string\">&quot;A&quot;</span>,      <span class=\"hljs-string\">&quot;-...&quot;</span> =&gt; <span class=\"hljs-string\">&quot;B&quot;</span>,    <span class=\"hljs-string\">&quot;-.-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;C&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-..&quot;</span>  =&gt;  <span class=\"hljs-string\">&quot;D&quot;</span>,      <span class=\"hljs-string\">&quot;.&quot;</span>    =&gt; <span class=\"hljs-string\">&quot;E&quot;</span>,       <span class=\"hljs-string\">&quot;..-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;F&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;--.&quot;</span>  =&gt;  <span class=\"hljs-string\">&quot;G&quot;</span>,      <span class=\"hljs-string\">&quot;....&quot;</span> =&gt; <span class=\"hljs-string\">&quot;H&quot;</span>,    <span class=\"hljs-string\">&quot;..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;I&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.---&quot;</span> =&gt;  <span class=\"hljs-string\">&quot;J&quot;</span>,     <span class=\"hljs-string\">&quot;-.-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;K&quot;</span>,     <span class=\"hljs-string\">&quot;.-..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;L&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;--&quot;</span>   =&gt;  <span class=\"hljs-string\">&quot;M&quot;</span>,       <span class=\"hljs-string\">&quot;-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;N&quot;</span>,      <span class=\"hljs-string\">&quot;---&quot;</span> =&gt; <span class=\"hljs-string\">&quot;O&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.--.&quot;</span> =&gt;  <span class=\"hljs-string\">&quot;P&quot;</span>,     <span class=\"hljs-string\">&quot;--.-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;Q&quot;</span>,    <span class=\"hljs-string\">&quot;.-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;R&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;...&quot;</span>  =&gt;  <span class=\"hljs-string\">&quot;S&quot;</span>,      <span class=\"hljs-string\">&quot;-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;T&quot;</span>,       <span class=\"hljs-string\">&quot;..-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;U&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;...-&quot;</span> =&gt;  <span class=\"hljs-string\">&quot;V&quot;</span>,     <span class=\"hljs-string\">&quot;.--&quot;</span> =&gt; <span class=\"hljs-string\">&quot;W&quot;</span>,     <span class=\"hljs-string\">&quot;-..-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;X&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-.--&quot;</span> =&gt;  <span class=\"hljs-string\">&quot;Y&quot;</span>,     <span class=\"hljs-string\">&quot;--..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;Z&quot;</span>,\r\n\r\n        <span class=\"hljs-string\">&quot;.----&quot;</span> =&gt; <span class=\"hljs-string\">&quot;1&quot;</span>,    <span class=\"hljs-string\">&quot;..---&quot;</span> =&gt; <span class=\"hljs-string\">&quot;2&quot;</span>,   <span class=\"hljs-string\">&quot;...--&quot;</span> =&gt; <span class=\"hljs-string\">&quot;3&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;....-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;4&quot;</span>,    <span class=\"hljs-string\">&quot;.....&quot;</span> =&gt; <span class=\"hljs-string\">&quot;5&quot;</span>,   <span class=\"hljs-string\">&quot;-....&quot;</span> =&gt; <span class=\"hljs-string\">&quot;6&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;--...&quot;</span> =&gt; <span class=\"hljs-string\">&quot;7&quot;</span>,    <span class=\"hljs-string\">&quot;---..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;8&quot;</span>,   <span class=\"hljs-string\">&quot;----.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;9&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-----&quot;</span> =&gt; <span class=\"hljs-string\">&quot;0&quot;</span>,\r\n\r\n        <span class=\"hljs-string\">&quot;.-...&quot;</span> =&gt; <span class=\"hljs-string\">&quot;&amp;&quot;</span>,    <span class=\"hljs-string\">&quot;.--.-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;@&quot;</span>,  <span class=\"hljs-string\">&quot;---...&quot;</span> =&gt; <span class=\"hljs-string\">&quot;:&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;--..--&quot;</span> =&gt; <span class=\"hljs-string\">&quot;,&quot;</span>,   <span class=\"hljs-string\">&quot;.-.-.-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.&quot;</span>,  <span class=\"hljs-string\">&quot;.----.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;&#x27;&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.-..-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;\\&quot;&quot;</span>,  <span class=\"hljs-string\">&quot;..--..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;?&quot;</span>,  <span class=\"hljs-string\">&quot;-..-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;/&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-...-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;=&quot;</span>,   <span class=\"hljs-string\">&quot;.-.-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;+&quot;</span>,   <span class=\"hljs-string\">&quot;-....-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-.--.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;(&quot;</span>,   <span class=\"hljs-string\">&quot;-.--.-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;)&quot;</span>,  <span class=\"hljs-string\">&quot;/&quot;</span> =&gt; <span class=\"hljs-string\">&quot; &quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-.-.--&quot;</span> =&gt; <span class=\"hljs-string\">&quot;!&quot;</span>,  <span class=\"hljs-string\">&quot; &quot;</span> =&gt; <span class=\"hljs-string\">&quot; &quot;</span>,       <span class=\"hljs-string\">&quot;&quot;</span> =&gt; <span class=\"hljs-string\">&quot;&quot;</span>\r\n    }\r\n}\r\n\r\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">_check_part</span>(string: &amp;<span class=\"hljs-type\">str</span>) <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">bool</span> {\r\n    <span class=\"hljs-keyword\">for</span> <span class=\"hljs-variable\">c</span> <span class=\"hljs-keyword\">in</span> string.<span class=\"hljs-title function_ invoke__\">chars</span>() {\r\n        <span class=\"hljs-keyword\">match</span> c {\r\n            <span class=\"hljs-string\">&#x27;.&#x27;</span> | <span class=\"hljs-string\">&#x27;-&#x27;</span> | <span class=\"hljs-string\">&#x27; &#x27;</span> =&gt; (),\r\n            _ =&gt; <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>,\r\n        }\r\n    }\r\n    <span class=\"hljs-literal\">true</span>\r\n}\r\n\r\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">_check_all_parts</span>(string: &amp;<span class=\"hljs-type\">str</span>) <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">bool</span> {\r\n    string.<span class=\"hljs-title function_ invoke__\">split</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>).<span class=\"hljs-title function_ invoke__\">all</span>(_check_part)\r\n}\r\n\r\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">_decode_token</span>(string: &amp;<span class=\"hljs-type\">str</span>) <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">String</span> {\r\n    _morse_to_alphanumeric_dictionary()\r\n        .<span class=\"hljs-title function_ invoke__\">get</span>(string)\r\n        .<span class=\"hljs-title function_ invoke__\">unwrap_or</span>(&amp;_UNKNOWN_MORSE_CHARACTER)\r\n        .<span class=\"hljs-title function_ invoke__\">to_string</span>()\r\n}\r\n\r\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">_decode_part</span>(string: &amp;<span class=\"hljs-type\">str</span>) <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">String</span> {\r\n    string\r\n        .<span class=\"hljs-title function_ invoke__\">split</span>(<span class=\"hljs-string\">&#x27; &#x27;</span>)\r\n        .<span class=\"hljs-title function_ invoke__\">map</span>(_decode_token)\r\n        .collect::&lt;<span class=\"hljs-type\">Vec</span>&lt;<span class=\"hljs-type\">String</span>&gt;&gt;()\r\n        .<span class=\"hljs-title function_ invoke__\">join</span>(<span class=\"hljs-string\">&quot;&quot;</span>)\r\n}\r\n\r\n<span class=\"hljs-comment\">/// Convert morse code to ascii.</span>\r\n<span class=\"hljs-comment\">///</span>\r\n<span class=\"hljs-comment\">/// Given a morse code, return the corresponding message.</span>\r\n<span class=\"hljs-comment\">/// If the code is invalid, the undecipherable part of the code is replaced by `_`.</span>\r\n<span class=\"hljs-keyword\">pub</span> <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">decode</span>(string: &amp;<span class=\"hljs-type\">str</span>) <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">Result</span>&lt;<span class=\"hljs-type\">String</span>, io::Error&gt; {\r\n    <span class=\"hljs-keyword\">if</span> !_check_all_parts(string) {\r\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_ invoke__\">Err</span>(io::Error::<span class=\"hljs-title function_ invoke__\">new</span>(\r\n            io::ErrorKind::InvalidData,\r\n            <span class=\"hljs-string\">&quot;Invalid morse code&quot;</span>,\r\n        ));\r\n    }\r\n\r\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">partitions</span>: <span class=\"hljs-type\">Vec</span>&lt;<span class=\"hljs-type\">String</span>&gt; = <span class=\"hljs-built_in\">vec!</span>[];\r\n\r\n    <span class=\"hljs-keyword\">for</span> <span class=\"hljs-variable\">part</span> <span class=\"hljs-keyword\">in</span> string.<span class=\"hljs-title function_ invoke__\">split</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>) {\r\n        partitions.<span class=\"hljs-title function_ invoke__\">push</span>(_decode_part(part));\r\n    }\r\n\r\n    <span class=\"hljs-title function_ invoke__\">Ok</span>(partitions.<span class=\"hljs-title function_ invoke__\">join</span>(<span class=\"hljs-string\">&quot; &quot;</span>))\r\n}\r\n\r\n<span class=\"hljs-meta\">#[cfg(test)]</span>\r\n<span class=\"hljs-keyword\">mod</span> tests {\r\n    <span class=\"hljs-keyword\">use</span> super::*;\r\n\r\n    <span class=\"hljs-meta\">#[test]</span>\r\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">encrypt_only_letters</span>() {\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">message</span> = <span class=\"hljs-string\">&quot;Hello Morse&quot;</span>;\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">cipher</span> = <span class=\"hljs-title function_ invoke__\">encode</span>(message);\r\n        <span class=\"hljs-built_in\">assert_eq!</span>(\r\n            cipher,\r\n            <span class=\"hljs-string\">&quot;.... . .-.. .-.. --- / -- --- .-. ... .&quot;</span>.<span class=\"hljs-title function_ invoke__\">to_string</span>()\r\n        )\r\n    }\r\n\r\n    <span class=\"hljs-meta\">#[test]</span>\r\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">encrypt_letters_and_special_characters</span>() {\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">message</span> = <span class=\"hljs-string\">&quot;What&#x27;s a great day!&quot;</span>;\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">cipher</span> = <span class=\"hljs-title function_ invoke__\">encode</span>(message);\r\n        <span class=\"hljs-built_in\">assert_eq!</span>(\r\n            cipher,\r\n            <span class=\"hljs-string\">&quot;.-- .... .- - .----. ... / .- / --. .-. . .- - / -.. .- -.-- -.-.--&quot;</span>.<span class=\"hljs-title function_ invoke__\">to_string</span>()\r\n        )\r\n    }\r\n\r\n    <span class=\"hljs-meta\">#[test]</span>\r\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">encrypt_message_with_unsupported_character</span>() {\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">message</span> = <span class=\"hljs-string\">&quot;Error?? {}&quot;</span>;\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">cipher</span> = <span class=\"hljs-title function_ invoke__\">encode</span>(message);\r\n        <span class=\"hljs-built_in\">assert_eq!</span>(\r\n            cipher,\r\n            <span class=\"hljs-string\">&quot;. .-. .-. --- .-. ..--.. ..--.. / ........ ........&quot;</span>.<span class=\"hljs-title function_ invoke__\">to_string</span>()\r\n        )\r\n    }\r\n\r\n    <span class=\"hljs-meta\">#[test]</span>\r\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">decrypt_valid_morsecode_with_spaces</span>() {\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">expected</span> = <span class=\"hljs-string\">&quot;Hello Morse! How&#x27;s it goin, \\&quot;eh\\&quot;?&quot;</span>\r\n            .<span class=\"hljs-title function_ invoke__\">to_string</span>()\r\n            .<span class=\"hljs-title function_ invoke__\">to_uppercase</span>();\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">encypted</span> = <span class=\"hljs-title function_ invoke__\">encode</span>(&amp;expected);\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">result</span> = <span class=\"hljs-title function_ invoke__\">decode</span>(&amp;encypted).<span class=\"hljs-title function_ invoke__\">unwrap</span>();\r\n\r\n        <span class=\"hljs-built_in\">assert_eq!</span>(expected, result);\r\n    }\r\n\r\n    <span class=\"hljs-meta\">#[test]</span>\r\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">decrypt_valid_character_set_invalid_morsecode</span>() {\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">expected</span> = <span class=\"hljs-built_in\">format!</span>(\r\n            <span class=\"hljs-string\">&quot;{}{}{}{} {}&quot;</span>,\r\n            _UNKNOWN_MORSE_CHARACTER,\r\n            _UNKNOWN_MORSE_CHARACTER,\r\n            _UNKNOWN_MORSE_CHARACTER,\r\n            _UNKNOWN_MORSE_CHARACTER,\r\n            _UNKNOWN_MORSE_CHARACTER,\r\n        );\r\n\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">encypted</span> = <span class=\"hljs-string\">&quot;.-.-.--.-.-. --------. ..---.-.-. .-.-.--.-.-. / .-.-.--.-.-.&quot;</span>.<span class=\"hljs-title function_ invoke__\">to_string</span>();\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">result</span> = <span class=\"hljs-title function_ invoke__\">decode</span>(&amp;encypted).<span class=\"hljs-title function_ invoke__\">unwrap</span>();\r\n\r\n        <span class=\"hljs-built_in\">assert_eq!</span>(expected, result);\r\n    }\r\n\r\n    <span class=\"hljs-meta\">#[test]</span>\r\n    <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">decrypt_invalid_morsecode_with_spaces</span>() {\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">encypted</span> = <span class=\"hljs-string\">&quot;1... . .-.. .-.. --- / -- --- .-. ... .&quot;</span>;\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">result</span> = <span class=\"hljs-title function_ invoke__\">decode</span>(encypted).<span class=\"hljs-title function_ invoke__\">map_err</span>(|e| e.<span class=\"hljs-title function_ invoke__\">kind</span>());\r\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">expected</span> = <span class=\"hljs-title function_ invoke__\">Err</span>(io::ErrorKind::InvalidData);\r\n\r\n        <span class=\"hljs-built_in\">assert_eq!</span>(expected, result);\r\n    }\r\n}\r\n"
    },
    "php": {
      "dir": "ciphers\\morseCode.php",
      "url": "https://github.com/TheAlgorithms/php/tree/master/ciphers\\morseCode.php",
      "code": "<span class=\"hljs-meta\">&lt;?php</span>\r\n\r\n<span class=\"hljs-comment\">/**\r\n * Encode text to Morse Code.\r\n * <span class=\"hljs-doctag\">@param</span> string text to encode\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">encode</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">string</span> <span class=\"hljs-variable\">$text</span></span>): <span class=\"hljs-title\">string</span>\r\n</span>{\r\n    <span class=\"hljs-variable\">$text</span> = <span class=\"hljs-title function_ invoke__\">strtoupper</span>(<span class=\"hljs-variable\">$text</span>); <span class=\"hljs-comment\">// Makes sure the string is uppercase</span>\r\n    <span class=\"hljs-variable\">$MORSE_CODE</span> = <span class=\"hljs-keyword\">array</span>( <span class=\"hljs-comment\">// Array containing morse code translations</span>\r\n        <span class=\"hljs-string\">&quot;A&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;B&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-...&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;C&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.-.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;D&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-..&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;E&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;F&quot;</span> =&gt; <span class=\"hljs-string\">&quot;..-.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;G&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;H&quot;</span> =&gt; <span class=\"hljs-string\">&quot;....&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;I&quot;</span> =&gt; <span class=\"hljs-string\">&quot;..&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;J&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.---&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;K&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;L&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-..&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;M&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;N&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;O&quot;</span> =&gt; <span class=\"hljs-string\">&quot;---&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;P&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.--.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;Q&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--.-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;R&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.-.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;S&quot;</span> =&gt; <span class=\"hljs-string\">&quot;...&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;T&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;U&quot;</span> =&gt; <span class=\"hljs-string\">&quot;..-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;V&quot;</span> =&gt; <span class=\"hljs-string\">&quot;...-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;W&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.--&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;X&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-..-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;Y&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-.--&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;Z&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--..&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;1&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.----&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;2&quot;</span> =&gt; <span class=\"hljs-string\">&quot;..---&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;3&quot;</span> =&gt; <span class=\"hljs-string\">&quot;...--&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;4&quot;</span> =&gt; <span class=\"hljs-string\">&quot;....-&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;5&quot;</span> =&gt; <span class=\"hljs-string\">&quot;.....&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;6&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-....&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;7&quot;</span> =&gt; <span class=\"hljs-string\">&quot;--...&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;8&quot;</span> =&gt; <span class=\"hljs-string\">&quot;---..&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;9&quot;</span> =&gt; <span class=\"hljs-string\">&quot;----.&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;0&quot;</span> =&gt; <span class=\"hljs-string\">&quot;-----&quot;</span>,\r\n        <span class=\"hljs-string\">&quot; &quot;</span> =&gt; <span class=\"hljs-string\">&quot;/&quot;</span>\r\n    );\r\n\r\n    <span class=\"hljs-variable\">$encodedText</span> = <span class=\"hljs-string\">&quot;&quot;</span>; <span class=\"hljs-comment\">// Stores the encoded text</span>\r\n    <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-title function_ invoke__\">str_split</span>(<span class=\"hljs-variable\">$text</span>) <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$c</span>) { <span class=\"hljs-comment\">// Going through each character</span>\r\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">array_key_exists</span>(<span class=\"hljs-variable\">$c</span>, <span class=\"hljs-variable\">$MORSE_CODE</span>)) { <span class=\"hljs-comment\">// Checks if it is a valid character</span>\r\n            <span class=\"hljs-variable\">$encodedText</span> .= <span class=\"hljs-variable\">$MORSE_CODE</span>[<span class=\"hljs-variable\">$c</span>] . <span class=\"hljs-string\">&quot; &quot;</span>; <span class=\"hljs-comment\">// Appends the correct character</span>\r\n        } <span class=\"hljs-keyword\">else</span> {\r\n            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">\\Exception</span>(<span class=\"hljs-string\">&quot;Invalid character: <span class=\"hljs-subst\">$c</span>&quot;</span>);\r\n        }\r\n    }\r\n    <span class=\"hljs-title function_ invoke__\">substr_replace</span>(<span class=\"hljs-variable\">$encodedText</span> ,<span class=\"hljs-string\">&quot;&quot;</span>, -<span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// Removes trailing space</span>\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$encodedText</span>;\r\n}\r\n\r\n<span class=\"hljs-comment\">/**\r\n * Decode Morse Code to text.\r\n * <span class=\"hljs-doctag\">@param</span> string text to decode\r\n */</span>\r\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">decode</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">string</span> <span class=\"hljs-variable\">$text</span></span>): <span class=\"hljs-title\">string</span>\r\n</span>{\r\n    <span class=\"hljs-variable\">$MORSE_CODE</span> = <span class=\"hljs-keyword\">array</span>( <span class=\"hljs-comment\">// An array containing morse code to text translations</span>\r\n        <span class=\"hljs-string\">&quot;.-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;A&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-...&quot;</span> =&gt; <span class=\"hljs-string\">&quot;B&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-.-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;C&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;D&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;E&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;..-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;F&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;--.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;G&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;....&quot;</span> =&gt; <span class=\"hljs-string\">&quot;H&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;I&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.---&quot;</span> =&gt; <span class=\"hljs-string\">&quot;J&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-.-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;K&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.-..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;L&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;--&quot;</span> =&gt; <span class=\"hljs-string\">&quot;M&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;N&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;---&quot;</span> =&gt; <span class=\"hljs-string\">&quot;O&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.--.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;P&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;--.-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;Q&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.-.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;R&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;...&quot;</span> =&gt; <span class=\"hljs-string\">&quot;S&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;T&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;..-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;U&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;...-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;V&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.--&quot;</span> =&gt; <span class=\"hljs-string\">&quot;W&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-..-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;X&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-.--&quot;</span> =&gt; <span class=\"hljs-string\">&quot;Y&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;--..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;Z&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.----&quot;</span> =&gt; <span class=\"hljs-string\">&quot;1&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;..---&quot;</span> =&gt; <span class=\"hljs-string\">&quot;2&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;...--&quot;</span> =&gt; <span class=\"hljs-string\">&quot;3&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;....-&quot;</span> =&gt; <span class=\"hljs-string\">&quot;4&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;.....&quot;</span> =&gt; <span class=\"hljs-string\">&quot;5&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-....&quot;</span> =&gt; <span class=\"hljs-string\">&quot;6&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;--...&quot;</span> =&gt; <span class=\"hljs-string\">&quot;7&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;---..&quot;</span> =&gt; <span class=\"hljs-string\">&quot;8&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;----.&quot;</span> =&gt; <span class=\"hljs-string\">&quot;9&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;-----&quot;</span> =&gt; <span class=\"hljs-string\">&quot;0&quot;</span>,\r\n        <span class=\"hljs-string\">&quot;/&quot;</span> =&gt; <span class=\"hljs-string\">&quot; &quot;</span>\r\n    );\r\n    \r\n    <span class=\"hljs-variable\">$decodedText</span> = <span class=\"hljs-string\">&quot;&quot;</span>; <span class=\"hljs-comment\">// Stores the decoded text</span>\r\n    <span class=\"hljs-keyword\">foreach</span> (<span class=\"hljs-title function_ invoke__\">explode</span>(<span class=\"hljs-string\">&quot; &quot;</span>, <span class=\"hljs-variable\">$text</span>) <span class=\"hljs-keyword\">as</span> <span class=\"hljs-variable\">$c</span>) { <span class=\"hljs-comment\">// Going through each group</span>\r\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-title function_ invoke__\">array_key_exists</span>(<span class=\"hljs-variable\">$c</span>, <span class=\"hljs-variable\">$MORSE_CODE</span>)) { <span class=\"hljs-comment\">// Checks if it is a valid character</span>\r\n            <span class=\"hljs-variable\">$decodedText</span> .= <span class=\"hljs-variable\">$MORSE_CODE</span>[<span class=\"hljs-variable\">$c</span>]; <span class=\"hljs-comment\">// Appends the correct character</span>\r\n        } <span class=\"hljs-keyword\">else</span> {\r\n            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable\">$c</span>) { <span class=\"hljs-comment\">// Makes sure that the string is not empty to prevent trailing spaces or extra spaces from breaking this</span>\r\n                <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">\\Exception</span>(<span class=\"hljs-string\">&quot;Invalid character: <span class=\"hljs-subst\">$c</span>&quot;</span>);\r\n            }\r\n        }\r\n    }\r\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-variable\">$decodedText</span>;\r\n}\r\n"
    }
  },
  "contributors": [
    {
      "name": "Christian Clauss",
      "email": "cclauss@me.com",
      "commits": 1
    },
    {
      "name": "Lukas",
      "email": "lukas.aurelius@outlook.com",
      "commits": 1
    },
    {
      "name": "Aalekh Patel",
      "email": "aalekh.gwpeck.7998@icloud.com",
      "commits": 1
    },
    {
      "name": "InverMN",
      "email": "31947630+InverMN@users.noreply.github.com",
      "commits": 1
    },
    {
      "name": "Deep Raval",
      "email": "deepraval2905@gmail.com",
      "commits": 1
    }
  ],
  "explanationUrl": {}
}